<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Travel-2]]></title>
    <url>%2F2017%2F09%2F02%2FTravel-2%2F</url>
    <content type="text"><![CDATA[前言作为一名you逼格的“工程师”，一定要时刻想着发技术文章以突显自己高超的专业技术。。。嗯，就是这样！ 南宋御街南宋御街( Southern Song Imperial Street )，是南宋都城临安铺设的一条主要街道。《咸淳临安志》等文献记载，铺设南宋御街一共使用了一万多块石板，但此前的考古发掘却只发现过香糕砖。御街南起皇城北门和宁门（今万松岭和凤凰山路交叉口）外，经朝天门(今鼓楼)、中山中路、中山北路、观桥即今贯桥到今凤起路、武林路交叉口一带，是南宋临安城的中轴线，全长约4185米。它是皇帝于“四孟”（孟春、孟夏、孟秋、孟冬）到景灵宫（今武林路西侧，供奉皇室祖先塑像的场所）朝拜祖宗时的专用道路。 这条街商业化太严重，回来发现就拍了一张郭德纲的照片。好吧，我是钢丝，从大学开始，无数个夜晚就是郭德纲于谦陪我度过。。。 最深刻的有两个地方，一个是江南铜屋还有一个是一家卖包、杂货的小店，先说前者，走进去琳琅满目的工艺品，用现代铜工艺打造，有各种各样的铜制艺术品，佛像、关公像、古代神兽、桥、雷峰塔等等，价格不菲，好几千上万，看的冷汗直冒，生怕撞坏。。。再说说那家卖包的小店，是经过后又折回去去看了看，屋内房顶上挂满了各种各样手工缝制的包、漂亮的手工制品，加上独特的音乐，仿佛置身另一个时空。不经意往周边看了看都是文艺范小女生，异样的眼光正盯着屋内仅有的一个男屌丝，于是，迅速离开。。。 浙江大学之江校区浙江大学之江校区解放前为之江大学所在地，其是基督教美北长老会和美南长老会在中国杭州联合创办的一所教会大学，也是中国的十三所基督教大学之一，之江校区占地面积650亩，校舍建筑总面积7万平方米。现为浙江大学光华法学院和浙江大学人文高等研究院所在地。 不少古建筑还保留在校园内，彰显着它的历史年代气息。校园内绿树成荫，给人感觉倒像是去了一所植物园，走路时战战兢兢，很担心草丛中跑出一只路过的小动物，吓破我这颗脆弱的玻璃心。。。 旁人笑我太疯癫本人爱好颇多，既爱郭德纲又钟爱野生小说，看着别人的故事，构想着自己的未来。给各位看官看一篇野生作家大冰的文章——《旁人笑我太疯癫》，既可以朝九晚五，又可以浪迹天涯。感觉这话都成了现今每个90后的口头禅，小屁孩一样的年纪就整天叨叨着看破红尘，想追求另一种生活方式，确实欠抽。。。我不反对这样的人生观，但是至少我们可以把自己养活了再谈其他，就像本文的主人公一般… 友情提示：这边文章要么别看，要么就看完，否则一定读歪。若没看完就指责我误导众生，爷不认账，概不负责。若只看一半就咆哮撕书的。你下个月胖十斤。 (一）这个世很有趣，有些人忙着做事，有些人忙着做梦，有些人忙着做戏。还有一些人不慌不忙，既做事又做梦，又在人生这场戏里做自己，做来做去做成传奇。哪种传奇？ 1.平行世界，多元生活2 既可以朝九晚五，又能够浪迹天涯3.有梦为马，随处可栖上述三句，有着不容辟颠倒的缜密逻辑次序貌似达到不太容易，却偏偏有些人可以举重若轻，游刃有余。 所以我常说：请相信，这个世界上真的有人在过着你想要的生活。于这种人而言，多元而平衡的人生方为王道，偏执而单一的社会定位、身份标签，不过是个哧溜屁。这种人从不会给自己设立标准答案，他把人生看作一道多项选择题，在他的生活中，ABCD每个答案都成立。 米也吃面也吃、肉也吃菜也吃他不偏食，追求的是生活这顿大餐能膳食营养搭配合理。他不屑于只当什么社会的螺丝钉，很多时候他既是螺丝钉还是螺丝帽，同时是把螺丝刀。 他不会把世俗成功当作唯一的追求，也懒得一门心思地清高出世，于他而言，出世与入世间的平衡才有意义。在我身旁这样的人不少，他们虽然个体显性呈现模式五花八门，但皆有着殊途同归的价值取向。 我一直希望能写一个“平行世界，多元生活”系列，对称一下信息，填充一下国内空白，算是某种意义上的民间修史吧。今朝祭出此系列中的第一更，与诸君下酒。 今天要说的这个人很疯癫，无人能一句话说清楚他到底是个干吗的，也无人张嘴就能说出他的踪影，就像无人能预判出他接下来的人生轨迹。但每个朋友都爱他，折服于他高能而独特的生活。 他不会英语，却独行了整个地球。 他不算有钱人，却分分钟能募集到千万资金。 他不当明星，却有数以百计的明星以结交他为荣。 他不收小弟，却有遍及四海的江湖雕乐意为他前赴后继。 他不是官二代也不是富二代，却没有官二代富二代敢在他面前吹牛B。 他不著书立说也没有传世佳作，却被许多诗人画家艺术家另眼高看倒履相迎。 他有时破衣烂衫有时礼服红毯，有时去大使馆赴晚宴，有时在街头苍蝇管子里吃拉面，有时在西欧古堡马杀鸡（MASSAGE,推拿按摩），有时在街头敲鼓卖艺。没人夸他雅，也没人说他俗，人人都觉得他又疯又好玩，人人都觉得他神秘又独特。 他曾一度是我的偶像，我自负能折腾，但他的折腾让我望尘莫及。不懂他的人觉得他折腾，懂他的人知道他是在修行。 30多岁时，他已把自己做成了传说，把生活活成了传奇。 你猜，拥有怎样的资源和机遇才能成为这样的人？ 或者说，成为这样的人，该拥有怎样的出身背景？ 不卖关子，说的这个人是我结义兄弟，名叫铁成。 （二）我是山东人，却素与西北人投契，几个结义兄弟一水的西北狼，产地全是陕甘宁。铁成是个中最好玩儿的。铁成瘦高，山羊胡子刀条脸，丸子发型，精光四溢的细眼睛。 多年前，我和他初相识时，曾有一个瞬间很震惊，一模一样啊，兵马俑里的跪射俑！那时篝火正红，柴木噼啪轻响，我坐在铁成火塘的角落里，震惊地打量着这只活俑。 震惊的不仅是长相，还有他当时的举动。 他当时大马金刀踞坐门旁，捧着洗脚盆大小的白瓷碗，稀里呼噜地吃面……能把一海碗臊子面吃得如此地动山摇，我此生只见过他一人。 他吃得太香甜了，诱得我不停咽口水，偷眼打量其他人，哎？咋都见怪不怪地喝酒聊天？看来众人早已习惯了这副豪迈场景。 那天篝火旁围坐着许多人，有生意人有文艺人，有公务员也有流浪歌手，还有天后和亚鹏，每个人都很放松，都不像是来火塘酒吧消费的客人，都像是来串门的亲戚一样，和颜悦色笑意盈盈。 屋里祥和一片，屋外硝烟腾腾，有人在烤鸡翅给大家吃，那时不少人自愿在铁成火塘里当义工，烤鸡翅的也是义工。新烤的鸡翅端上桌，其实也不算桌，围着火塘的一圈石头而已。端鸡翅的义工是个光头，若干年后我看过他主演《泰囧》。烤鸦翅的义工是个导演，叫张扬，据说鸡翅配方他研究了好几个月，麻辣鲜香风味独特如一场虐恋般滚烫滚烫地烫着嘴唇烫着舌头。 真是一帮怪人，你夸他鸡翅烤得好，比夸他电影拍得好还让他高兴。 吃鸡翅的也都是怪人，没有谦让也没有客套，鸡翅挨个儿发，发完了就完了，不管你是多大的领导多大的明星，发到你时没了就是没了，没人让，也没人因为觉得不受特殊礼遇而不高兴。 那间_的屋子有种独特的气场。 不论众人在各自的世界扮演什么样的角色，坐进铁成的火塘后，各自的社会属性都脑后一丢，人与人之间骤然变得平等。那时的火塘，真是个神奇的所在。 铁成塘在京城，在大研古城，某种意义上讲算是古城最早的音乐火塘，也是最早弘扬火塘文化的地方。火塘不算酒吧，更像是个有人情味的家，陌生的人们围坐篝火旁，听听歌喝喝酒说说话，青烟裏裏，一晚上的时间嗖地就没了。铁成脾气极好，从不高声和人说话，但原则性超强，对许多事情很坚持，比如要求进屋的每个人都必须自我介绍，他的理论蛮接地气——只有心门打开了才能玩玩儿到一起，自我介绍是平等交流的第一步。 当时在他火塘里，再大的腕儿也要自我介绍，且不准用普通话，只能用家乡方言，铁成说方言是本色，既然要认识，就把本色亮出来嘛。 有一回几个英国人机里咕噜了半天，然后告诉我们这是威尔士方言，相当于广东话，那是苏格兰话，相当于东北话，这是伦敦郊区方言，相当于北京通州口音……在铁成的火塘里，自我介绍怎么说都行，但从政的不准透露职务，从商的不准影射身价，介绍完毕后，每人必须来唱一首歌来总结人生或表达心情。 国人大都腼腆，加油打气别害羞这种话铁成不说，他只似笑非笑地看着人家眼睛，慢悠悠地幵口：每个人都有一首惊世骇俗的歌在等着他…… 那句话挺好使，我在他火塘里听过各种量级的跑调走音，听过各种音量的金歌劲曲，还听过歌剧，还听过小伙子唱 《客秋莎》，听过老太太唱周杰伦，还听过几十次中年男人唱的《两只蝴蝶》，以及《老鼠爱大米》……那时没《小苹果》，也还没开始流行凤凰传奇。 在座的不乏成名歌手资深音乐人，却没人对旁人的音乐审美嘲笑鄙夷，那时的火塘里众生平等，轮流唱歌是每个人天賦的权利。歌唱完了，每个人轮流分享自己的故事，只要乐意分享，说什么都行，忠告也行，忏悔也行，糗事也行，做过的最好玩儿的事也行。 我目睹过一个神奇的故事发生：那个中年姐姐煞白着脸站起来，语无伦次地讲了自己难忘的初恋，然后直勾勾地看着火塘对面的一个男人说，17年过去了，我老了也丑了，你都认不出我来了…… 失散了 17年的情侣抱头痛哭，一屋子的人陪着他们流泪。那个姐姐说，想你的时候找不到你，不想了你又出现了，真想掐死你啊…… (三）火塘里神奇的故事还有很多。 有个乐呵呵的老头整天来，柚口磨得稀巴烂，穿得乞丐一样，每次来了都主动要求唱歌。他脑子是坏掉的，疯的，疯之前是个大学教授，此人外语极好，八国联军张嘴就来，不论哪个国家来的老外都能被他给唱HIGH (高兴）了。 那个乞丐样的老头现在还在古城好好地活着，他在街头卖草编，只编蚂蚱，他来火塘玩儿的机缘很特别一-非典那年街头没游客，他差点儿饿死，铁成把他捡了，脸盆大的面碗两人一起吃，老头边吃边咳嗽，铁成并不嫌弃他。 什么树上落什么鸟，铁成种了棵奇怪的树，奇奇怪怪的鸟儿成群结队地往上落。许巍在其中不算最奇怪的，朱哲琴在其中也不算太奇怪的，连杨丽萍也不算。 奇怪的是阿缘，会吹笛子的那个。 阿缘是纳西族还是彝族？忘了，只记得他举手投足间的文雅，笛声悠扬里的曲折。他笛子吹得像说话一样，娓娓把人心揉搓，隐隐约约能听懂一点点他在说什么，可一分神，却又不懂了……阿缘是打散工的，收入很微薄，但每次来火塘都收拾得利利索索，衣领袖口雪白的，火塘是他唯一的舞台，或许只有在这里他才能放松自如地吹笛子吧。 有小情侣在场时他的笛子是不吹的，他说曲子太寂寥了，不要把你们的心境给影响了。 阿缘后来出家了，寺庙离古城不远，铁成常去看他，听说他后来的听众是松树，漫山遍野的松树。 有个常客总穿着长抱睡衣来，叫郭哥，人手不够时他偶尔帮忙当服务员，街头卖唱玩儿时他帮忙收钱，问他打哪儿来的，他说海上，问他在什么船上当船员，他说那船不捕鱼也不愿运货，是方的，再问，就不说了。 不想好好聊天就不聊呗，我看看他露出来的小腿，毛咋这么黑这么长，干吗老穿着睡袍哦…… 好几年后才知道他爱穿睡抱，是因为他已经把西服衬衫穿了太多年。他提到的那条船确实是方的，由数条驳船拼成，就停在深圳海边，新闻里一度把那条硕大的船叫“海上皇宫，，。 挺好，郭哥没坏了火塘的规矩，一直没提过他是巨贾。 西南少数民族习惯围着火塘起居，喝茶吃饭待客团圆都在火塘边，火塘是温暖的中心，也是一个家的精神中心，柴一填火一起，人自动聚过来。铁成的火塘酒吧亦是如此，常来的成了家人，刚来的也不拘束。 火塘那时的氛围和睦得出奇，没有地位高低没有贫富距离，进来的都是放下包袱，没有人用脾气性格影响其他人，也没人强行灌输意志给别人，众人喝酒唱歌讲故事，有分歧也不争论。 一次夜色阑珊，屋子里篝火熊熊，院子里繁星点点，我和铁成并排撒尿，我赞他把这家店开得真出色，他不置可否：……别把这儿只当家店看哦，单纯把这儿当家店的话，人难免会患得患失，然后莫名其妙地被拴住。 他问：你不觉得这是挺好的一所学校吗，每天人来人往，每个人都是义务老师，读人就是最好的学习，学人优点看人缺点，再排查自己的缺点，快快活活又是一天…… 接下来的一句话让我手一抖，湿了鞋。 他说：这几年玩儿开心了，学得也足够开心了，所以……火塘可以换个掌柜了，我当个股东就可以了，哈，我可以撤了。 如日中天的火塘说换掌柜就换掌柜？我擦你可真舍得啊。 他噌地社拉链：对嘛，火塘的这个世界既然已经及格了，还守在这儿干吗？养老吗？不如继续出发，去建造下一个世界。 我说，拜托拜托请人话，你打算去哪儿去干吗？他逗我，说去北京创业，什么挣钱干什么，比如摆摊卖肉夹馍。我回逗他，铁成，我一直以为你是闲云野鹤呢，原来这么爱财……你市侩了。 他乐：别别别，别绑架我，谁说挣钱就市侩了？盲目鄙视金钱的假清高才是真市侩，干吗扣一顶闲云野鹤的帽子，非逼我这条小生命喝西北风呢……这条小生命重重地拍我的肩：好了放心，挣钱并不是唯一的目标，我会把真正的自己保护好……挣钱也要快乐地挣，玩儿就是最好的创业。 他拍得很真诚很用力，所以我另一只鞋也湿了。 (四）铁成刚去京城那会儿，我对他意见甚大，太讨厌了，老逮不到他，总约不上饭。他经历丰富，跨界小能手，故而朋友多，接风宴排了两个月，档期密得比宣传期的艺人还满，天天各路不同的豪杰杀出来劫道，把他绑走叙旧吃饭。最多一天六七个饭局，从棵松吃到通州。 有一次我真怒了，约顿饭而已啊又不是约炮！见你一面咋这么难！ 他说好吧兄弟你来吧，别嫌挤就行…… 我去了，傻了B了，20人的包厢里塞了50多个人，这是饭局还是歌友会？咋这么多人？而月貌似是好几拨人凑在一起，有西装领带也有大汗衫，平均三块尾巴骨挤一个凳子…… 听说只是一部分，隔壁餐厅还有十几个演员和导演在等着。说曹操曹操到，铁成电话吱吱响，李小璐在电话里喊：哥哥，你什么时候死过来，我们这边凉菜已经吃两遍了。 那天我陪着铁成转战了四个接风宴，战到海淀时嗓子眼儿都塞满了。海淀那边等十来个北大的老师，我差点被他们弄死，当老师的人文质彬彬惯了，一旦热情起来不是人，他们玩儿命往我碟子里夹菜：铁成的朋友就是我朋友，别客气，多吃点儿。 应该都是监考好手，明明都在和铁成谈笑风生，却一个比一个余光犀利，一个比一个眼尖，我稍微搁搁筷子，他们就唰地扭头问是不是不合口味吃不惯，好吃好吃特别好吃，吃啊吃啊吃，直吃得我怨念满腔悲愤难言。 世上比劝酒更可恶的是劝饭，铁成从不喝酒，故而接风宴上没酒只有菜。我每吃一会儿就偷偷松一松腰带，一直松到最后一个扣。 午夜时分，我坐在铁成的大摩托车后座上，孕妇一样捧着肚子，撑得死去活来。我挠他脊梁：哥你慢点窜，虾仁快颠出来了…铁成说，挺住，还有一顿接风消夜。 大摩托轰隆隆，停在一家灰头土脸的小吃店前。早有一个穿着厨师围裙的人立在门前，那人淡淡打个招呼：来了。又说：你们坐，我去把菜热一热。小吃店里空荡荡的，只有我们三个，菜不多，茶当酒，话也不多，都在茶里了。 临走时那人也淡淡，他问铁成：下次什么时候来看我。铁成说：随时来，一个电话就到，想我了就给我打电话。那人笑，眼圈是红的，他笑着骂：滚，我想你干吗？好好忙你的吧…… 有事你说话。从来到走他只笑了这一次。那人曾被关了七年，又被关了三年，放出来后一直开小吃店，是草莽也是孝子，说还是个义人，可以托付身家性命的那种。 (五）铁成那时也被人托付了身家性命，不是房产金条国库券，比那些都金贵，是个孩子，漂漂亮亮的一只小姑娘。小姑娘叫小彩旗，大理白族，只身来北京学舞蹈，受她家人的托付，铁成当了她在京期间的监护人，全权督管她的身心发育。 十一二岁的孩子练功苦，特别能吃，铁成隔三岔五接她出来改善饮食，一寸厚的牛排几口就干没了，速度之快，让服务员恍惚了自己到底上没上过菜。 铁成那时大波浪长发，爱穿草鞋和彝族长袍，挎也是民族刺绣包，背影看起来严重混淆男女性别。 第一遭在北京舞蹈学院的宿舍楼前签字领人时，宿管老师审贼一样地盘查了半天，把一旁的小彩旗烦坏了。 更烦的是一堆学舞蹈的小丫头聚在一旁叽叽喳喳：我的天，快看，小彩旗的妈妈来了！好酷啊，比杨丽萍都酷！铁成一扭头，小丫头们集体吓了一跟头，我的天，小彩旗的妈妈咋还长胡子？呃，是她爸爸，她爸爸咋这么像兵马俑！太酷了！ 铁成淡定地覥着脸，小彩旗高傲地扬着脸，二人并肩醒地穿越人群……铁成把小彩旗怜起来，一攮子塞进三轮侉子斗里，突突突地离开’两个人长发风中飞，身后的小丫头们羨慕疯了，啧啧声一片。 可能是因为这个典故，小彩旗一直叫铁成干妈。那时很多朋友都爱带着孩子找铁成玩儿。不知道为什么，小孩子都特愿意和他玩儿，越小的孩子越爱他，可能孩子具有天然的敏感，能在人群中辨析出哪些大人是假有趣，哪些是真好玩儿。 有个朋友家的五岁小妹妹爱他爱得不要不要的，以他女朋友自居，每次见面抱住脖子就不肯撒手，魔术贴一样。小妹妹平时早上赖床，她爸爸吓唬她：再不起，铁成就结婚去了。小妹妹嗷嗷地哭着爬起来穿衣服：我还没长大，他不许结婚！ (六）…………铁成最初的北京生活，一度让我很费解。 是啊，玩儿得挺开心的，但不是说来给自己兼职 一个全新的世界吗？不是说要开开心心地把钱挣了吗？不是说要保护好真正的自己吗？ 怎么丫挺的整天光玩儿不见创业？ 他那时玩儿得疯，大摩托轰鸣798,见天扎在751工的音乐实验基地里和老外玩儿世界音乐，本土音乐人也找他玩儿，萨顶顶全球巡演邀他去敲过鼓，一路敲进人民大会堂。 我收到朋友传来的龙套图片，眉头皱了好半天，再这么坐吃山空地玩儿下去，谈什么平行世界？ 我给他发信息，没文字，只一串省略号。 朋友之间若心意相通，沟通时无须多言，他自然能GET (抓住）到我的担心。 果不其然，须臾，他回复了一万张照片，外加四个字母：KUZI。手机叮叮响了五六分钟，半个月的流量被他消耗光了。 好了，心是放下了，看来他已经考察好了项目并不声不响地启动了。这家伙，看来没有光在玩儿…… 不过他发来的全是家装效果图，稀奇古怪不重样什么风格都有，哪种风格都不适合住活人，脑洞之巨大，甚是骇人。 他这是打算做什么买卖？开装修公司？我看了半天也没琢磨出个所以然。 KUZI?裤子？他要卖裤衩？ 后来才知道，他伙同朋友要开KTV, 叫酷姿。 那段间他一天几十稿地出图，效率惊人，神奇的是玩也没耽误，很多奇思妙想边玩边自动冒泡，浮出水面。 他有他独特的一套方法来管理精力和时间。很多朋友乐意帮他出谋划策，台北爸爸阿宏也是他其中一个高参，阿宏复述过铁成的话：我想造一个童话城堡，所有人都乐意跑来过生曰。 台北阿宏说：你知道一个长得像兵马俑一样的人操着肉夹馍普通话和你聊梦幻是什么感觉吗？还童话？还城堡？干，太吓人了。 城堡后来不仅建成了，且开枝散叶，第一家位于大望京，第二家位北京三里屯三点三，每个房间都是不同的主题，有热血有卡通，从萝莉控到机车风，有游艇主题也有幼儿园主题…… 一个房间一个次元，领一时风气之先。玩家们蜂拥而至，啧啧赞収，但并不知道设计者并非来自台北，而是来自陕北。 我那时最爱那个带高低床上下铺的K房，别处还真找不到脱鞋上炕躺着唱歌的感觉。我在上铺唱《忘情水》，铁成在下铺吃打卤面，稀里呼噜的，和麦克风的声音一样大。 来北京后他收敛了一点儿，没再拿脸盆当碗。面一吃完，人就了，兴致勃勃地跑了。 来捧场过生曰的朋友多，他挨个儿屋去转转，生日错烛一吹就是十几个房间。再回我这儿来时，我乐得差点从上铺栽下来，COSPLAY (角色扮演）吗？盲人雪怪吗？木乃伊一样整个人都是白的，奶油蛋糕味的。 他乐呵师地抠脸，半天抠出两条缝露出两只黑眼仁。 铁成的朋友观一视同仁，很难得，他对每个朋友都很好，只要是朋友只要友都打折，不论是穷学生还是大明星。他对朋友二字不苛刻，能玩到一起都是朋友。 不夸张，他那时连手机带名片夹，总共三四万人的联系名单，后来一度来的朋友太多招呼不过来，于是他把自己的大照片挂在厕所门前，只要能喊出他名字的通通打折。 他的创业像玩游戏一般，玩着玩着，事干成了，酷姿的生意蒸蒸日上，几乎上市。他漂亮地抵达了目标：快乐地挣到了钱，建筑了一的世界。所以，当铁成宣布离开酷姿时，我并没有太奇怪。 那段话我已经会背了 ：别把这儿只当家店啊……每天人来人往，每个人都是义务老师，读人就是最好的学习，学人优点看人缺点，再排查自己的缺点，快快活活又是一天。 酷姿最鼎盛的时期，铁成抽身离开，不再参与运营管理。他说他要带着挣来的钱出发，去建造他的新世界。 那是个未来水世界，位于岛国帕劳，远在万里之外的太平洋。 (七）为何跑得那么远？ 铁成的回答是：我这辈子又不希望惊天地泣鬼神的，只想尽量多地看看世上不同的美景美食美女，多给自己点儿选择，过过有情调的生活。 他一调就情调到了太平洋，且不会英语，我想象不出来他在帕劳如何生存。他去帕劳的头半年，那边的朋友电话里问我：铁成是来帕劳干什么买卖的？怎么天天光见他玩儿不见他考察市场啊？ 我问：他玩儿什么了？那边说：玩儿水喽，考潜水执照喽，带着不同的人去潜水，天天街上捡一堆的陌生人吃吃喝喝喽，还领着一帮人在街头卖唱帮人挣机票路费…… 挺大个人了天天疯疯癫癫地瞎玩儿，一点儿出息都没有…… 我笑，行了不用说了，你们觉得他决玩儿废掉了的那一天，也就是他生意干成的那一天。 没承想，铁成玩着玩着，间接促进了帕劳的旅游业发展。 那时很多人缅怀他，飞跃千山万水去找他玩儿，其中有个叫黄渤的青岛贵妇最感人，专程跑去帕劳找他过年，和他一起自由潜。 青岛银水性好，潜水可以潜十几米，两人一组潜水时，命交在对方手里，互相救命。 铁成淘气，仗着有同命人，水下跳舞翻跟头瞎折腾，气没了就划脖子示意黄渤，黄渤气也不多，但怕铁成惨死水底，于是果断给气，还深情水下鼓励相拥…… 那是个爱为别人着想的好人，一条操心命。 铁成第二天再度把气折腾光了，结果换来好人俩中指。 黄渤后来还是把气分给他了。再怎么说，也是条小生命。 故事发生在那天上岸前。 离岸五六米的地方，他俩发现了一个烟盒，黄渤的反应特别紧张，迅猛无比地捞了起来，做贼一样地藏了起来。他不停地冲铁成叹气：你说说这帮银，太丢银了，太丢银了。 黄潮后来给那个烟盒拍照，发了微博：“那日帕劳潜水，正为上帝的奇作美景唏嘘不已，突看见水面漂浮一烟盒，心中暗骂哪儿来的无德之人，这么干净的水怎丢得下手！突然看见烟盒上两个大字‘中华’，臊得我上去一把捏在手里，像做贼一样生怕被别人看见，一直带回岸边。 朋友啊，去别人家做客咱客气点儿，这俩字的脸丢不起啊！” 尊重别人的家乡，是每一个过路人应有的素养。一条微博叮咛了世人，也火了劳，之前一年不超过500个中国游客，之后10000+。 挺好，都挺自觉，水里没再出现过乱丢的中华烟盒。铁成在帕劳组织了义务捡垃圾公社，边捡，寻宝一样，参与者皆兴致勃勃。 帕劳的朋友再度打来电话，我以为又是怒其不争说他贪玩，结果不是。 铁成的潜水主题酒店于帕劳开业，人气满满。 他再度给自己营造了一个新世界。 (八）江湖不大，世界很小，同道中人常相遇，偶尔新结缘的朋友们初坐在一起，难免会枯竭了话题，这个时候最好的救场方式就是问一句：你，认识铁成不？对方一拍大腿：你也认识他？我勒个去！ 一个名字，分分钟拉近两拨陌生人之间的距离，不论西南西北还是北上广，这种情况屡试不爽。 天南海北的朋友对他有几个统一的评价： 1.他是个好玩儿的人，也是个好玩儿的人。 2.不论上流或底层，他对哪个朋友都不过分热情，同时对谁也都不冷落。 3.他是个善做加法的人，每获得一个世界时，对上一个世界并非狗熊掰棒子。每个世界他都想要，龄世界他都知道该要多少。 4.他很牛B〇这个人看起来极度不靠谱，但做的事却每件都靠谱，所以当获悉他要再次铁马环球的消息时，大家并不为他操心或担心。 每个人都知道，他的征程，从来都和别人不同，从不是常规意义上的旅行。 这个时代把旅行捧得太高，许多人受了误导，总以为走得越远越好，于是把穷游当人生，认为所有的美好都在远方，于是盲目地辞职退学去流浪，没有能力只有臆想，在臆想中给自己营造个人英雄主义情怀。 盲目大多换来肥皂泡，许多人最终除了虚空什么也得不到。 窃以为，一门心思地追求世俗成功和一门心思追求遁世或流浪都是偏执的人生打开方式，平衡而负责的人生才是王道，既可以朝九晚五又能够浪迹天涯才是真牛B〇这种平衡状态说易行难，却并非无人能做到，我身旁就有不少，比如铁成。 在多个平行世界里的玩耍和打拼，并未影响他的旅行生活，2009年之前他就走完了中国，开始环球游荡。 (九）摩托车旅行时的大蜗牛。 摩托车把大弯就是蜗牛的触角，杂七杂八的家当垒成壳。铁折叠大沙发绑在摩托车上，为的是舒舒坦坦睡午觉，同样的睡午觉装备还有折鲁帆布凳子和吊床。除了四季衣裳，摩托车上还绑着双人帐篷和气垫床…… 他随身带了间豪华在老挝加油时，全村人奔出来围观，每个人都把嘴张得能塞进拳头……老挝加油站小，他的摩托车比加油站还大。 这么庞大的一坨车，倒了也是45度，必须五六个人才能扶起来，每天装车起码一个小时，但他善交朋友，每天装车时都有新朋友搭手相助。 所以工夫茶具他也带着，针灸拔罐也带了——电视购物来的，那是他在路上的交友工具之一：当街摁下老外就可以当赤脚医生。 他的装备还有医药急救包，遇见骑车摔倒的人可以帮你包扎，据说使用率极高。 最变态的是他还背了个火锅，酒精炉子一点，荒郊野外也能请人吃火锅，火锅食材当地找，有时是鸡鸭，有时是贝壳，有时是杧果菠萝，有时是蛇。 朋友们常说，铁成的摩托车环球穷游和旁人不同，他是出来感受世界，更是出来享受生活。 但他自己从不用旅行这样的词，只说是去游学，或者说：玩儿去了。 他到哪儿都能聚拢一堆人跟他一起玩儿，且沟通基本没障碍，对于一个英语稀烂成那样的老BOY (男孩）来说，实属难得。 他那时在清迈捡了个“联合国”，组织起了小摩托车队，一起去清迈山后面拍摄罂粟花。那是个传说中的花园小山村，大部分游客不知道，本地人是苗族，据说是从云南过来的。 蜗牛壳卸下来，他的哈雷域托车打头，后面一溜小踏板，小火车一样，南美北欧各种肤色，老弱病残各种年龄，人人都兴高采烈，不少人的踏板摩托车车技是现学的。 抵达目的地时，一个土帅土帅的小伙子跑过来，眼馋地盯着哈雷看。 小伙搭讪：我能坐坐吗？是当地人，却是一口地道的云南口语。铁成拍拍后座：上来就是了。 摩托车绕村一圈，小伙子依依不舍地下车，铁成喊住他，钥匙也递了过去：车给你骑一个小时好了。小伙子吓了一跳：如果我把你的车开跑了怎么办？ 铁成笑：那我就哭。 小伙子没接钥匙，什么话也没说，一步三回头地走了。在花园村落里玩儿了一下午，临走时遇到麻烦了。 几个身上刺龙刺凤的光膀子年轻人渡步而来，强行收停车费，车都停在路边荒地里哪儿来什么停车费，看来是要讹人了。所有的摩托车钥匙都被抢走，那帮年轻人大肆说着泰语，眶眶地踹车。 眼瞅他们就要动手打人时，那个土帅土帅的小伙子骑着小踏板路过，他猛地一个刹车，头盔嗖地砸过来，砸在其中一个年轻人的光脊梁上。土帅小伙子用泰语骂人，骂得那帮年轻人直哆嗦’车钥匙一把一把地还回来，而后灰溜溜地走了。 小伙子对铁成说，没错，我在这里是大哥……你看得起我，你是好人，你不要多问了，赶紧走吧，我护送你们出去。 小伙子骑着踏板车，一路把“联合国”送出峡谷。 临别前他告诉賊：我们村的群人其实都是中国人，打仗时遗留在这里的，以前没有办法只能种鸦片，后来泰国政府给了户口，现在年轻一代会说中国话的没几个了…… 他留电话给铁成：以后如果你有朋友来玩儿，我负责护送，让他们打我电话，报你的名字。 这段故事是那个土帅土帅的小伙子亲口讲给我的，我在那儿没名字，他请我喝酒，只喊我“铁成的朋友”。 铁成总说，人没有好坏只有真假，单看你待他是真是假。 他和我描述他的游学，如数家珍地说起他遇到的那些好人。 他说起途经一个缅甸小村时，天色已晚，错过了宿头，他在村口搭帐篷，离他最近的那户人家跑出来，不让他搭，死活不行。他们拖铁成回屋子，比画说屋里有炉子，夜里外面冷。那户人家真的穷，三代八口人用一床大毯子睡，他们抱歉地比画：今天的晚饭已经吃完了，很遗憾没有剩的，你是客人，真对不住你哦…… 铁成二话没说卸车取出食材，给那个没有隔夜粮的家庭做了一顿火锅。热气腾腾，每个人都吃得满头大汗，他们感动坏了，把一个热乎乎的小孩子硬塞进铁成怀里：晚上你抱着孩子睡吧，孩子暖和。早上醒来，小孩子挂在他脖子上，搂得紧紧的，口水鼻涕淌成一幅小地图。 铁成出门，在有雾水气息的清晨里伸懒腰，有张冻得发青的脸冲他憨笑，是那家的男主任，他蹲在屋外守了一宿，拄着棍子，守着铁成的摩托车和全部家当。 摩托车开出去很远，一回头，他们依旧远远地站着，不停地挥手。 摸摸胸口，小孩子留下的那幅小地图，还是湿的。 (十）铁成那时随身还带着一个奇门乐器，叫HANG，那时国内总共有11个HANG，他有一个我有一个，我的HANG珍藏在家里谁动谁剁手，他的HANG绑在背上，卖艺挣盘缠。 他出行时的路费是边走边挣的，他也是流浪歌手出身，卖艺行天涯是本分也是本色。 那时他去爱丁堡参加国际艺术节，从伦敦出发，路上边骑边玩儿边卖艺半个月，艺术节上再玩儿一个月。 爱丁堡艺术节高手云集，中国人却不多，他是罕见的中国面孔，且是当时街头艺术家里最挣钱的一个。 敲HANG卖艺，卖陶瓷首饰，卖草鞋…… 是的，卖草鞋，这条疯疯癫癫的小生命从国内背了一麻袋陕西农民手工草鞋，进价三元，卖价三十欧元，把奸商二字发挥到了极致。 欧洲人重匠心，认手工，他生意好得令人发指，差不多每星期进一次货。 他朋友多，朋友的朋友托朋友顺丰飞的，千里迢迢帮他当走走私贩子，走私草鞋。 帮他捎草鞋的人，后来大都被他拖下过水，一起坐在街头敲HANG卖草鞋，个中有留学生，有奧运冠军，有蜜月情侣，还有公务员。 爱丁堡是世界上卖唱最高殿堂，街角随便一个艺人都可能是顶级大师或某个领域的明星。铁成那时候给自己捡过一个搭档，游客，澳大利亚人，吉他弹得不错，据说被中国琵琶影响过，习惯竖着弹吉他。这对街头卖唱组合一度在爱丁堡街头独占鳌头，游人相机咔咔闪，拍个不停。 铁成教那人摆POSE,安慰那人说，别紧张，习惯了就好了。 后来才知道，之所以游客狂拍照，是因为那人是澳大利亚达人秀年度冠军。 据说相当于《中国好声音》冠军。 他的另一个搭档叫李丽娟，李丽娟之前在四川当警察，是当年的火塘常客，受铁成的鼓励出国深造。影响她的是铁成常说的那句话：每个人都有一首惊世骇俗的歌在等着他。 铁成卖唱欧洲时，李丽娟倾家荡产买了把吉他跟着练胆量。 那是2011年的事了，他们那时在雅典，正遇到希腊全国大罢工，一起的还有两个韩国学生、两个新西兰学生。受街上行人哭丧脸的影响，李丽娟一开始髓头弹琴唱歌，后来受铁成厚脸皮的熏陶，主动要求去广场唱，去轮船甲板上唱。 她厉害得很，英文法语全会，还有中文原创。 李丽娟后来自己开过演唱会，很给中国留学生长脸。再后来，她参加过《华人好声音》，当了欧洲赛冠军，同时也当了法国波尔多城市形象大使。 李丽娟于2016年4月2日回四川结婚，婚礼请帖上印的是婚纱摩托车，她嫁的是波尔多最大的红酒制造商，老公和老公公受娘家大舅哥铁成的影响也买了摩托车。 据说为了纪念曾经的战斗友谊，铁成在她婚礼现场卖唱，宾客们强忍心碎慷慨解囊。 铁成用挣来的钱给新娘封了一个大红包。 (十一）那时，草鞋贩铁成从英国卖艺到法国、意大利、奧地利、德国，一直卖到捷克布拉格。 他在维也纳时车翻到沟里去了，是被拖拉机拉出来的，他送拖拉机手一双草鞋，人家当场就穿上了。 翻到沟里的，是他从巴黎买的一辆罗马假日小摩托，他骑着它，一路游学，一路留下故事。 全法国最乱的是马赛，黑人打架满脸血，偏偏在马赛留下的故事是最温暖的。 他停下小摩托车在码头拍游艇时，一旁的中年男人问：先生，你怎么骑着巴黎牌照的车？这么小的车？铁成和他主动握手，和他聊天说，对啊，我想慢慢地看看法国,所以从巴黎开始骑小车。 那中年男人赞许地点头：疯狂的男人，原来中国人也是这么有意思的。 他看看表：先生，欢迎来马赛。看样子你还没有订房，如果愿意，可以住我家。 他说：我现在需要去接我女儿，一个小时后，10点40分，咱们在这里集合。铁成说，像电影里一样，奧黛丽•赫本主演的那部电影，主角也是父女，奇像无比，房子一样，楼梯一样，也是没有妈妈，爸爸也是摄像师，也是有很多作品，我擦，恍惚中仿佛进入电影场景。 为示感谢，铁成给他们泡工夫茶，接上小音箱放起了古琴音乐，还敲HANG给他们听。中年男人一脸惊喜，他抑制着兴奋冲着女儿说：小姐，请把我的徕卡M6拿来，还有35/1.4……又喊：请把我的手机也拿来，谢谢。 他对铁成说：我要把你介绍给我朋友和女朋友认识，他们是马赛最有名的无伴奏合唱乐队，嘴就是乐队，有鼓有吉他，有贝斯…… 那个中年男人也很有名，是马赛最著名的人文纪录片摄像师。中年男人说：先生，我邀请你多住两天，这是钥匙……我明天早上送女儿去戛纳，晚上回来，希望你一个人在这栋房子里住得偷快。 早上铁成醒来，屋里空无一人，阳光洒在餐桌上，童话一样丰盛的法式早餐。 我后来陪铁成在北京接待过那对父女，好有绅士的中年男人，握手时很用力，还亲了我和铁成的脸，亲得叭叭响……据说法国人流行朋友间亲脸。 铁成还有个在美国庞蒂亚克市的中年朋友，叫鲍勃，是个市长。 铁成那次领着一帮朋友走66号公路，中途迷路，打听路时一打听就打听到市长办公室了，那个办公室有10平方米大小，里面坐着的市长说：我也是喜欢骑摩托车的人啊！ 市长邀请他们参加自己的烧烤派对，获悉其中有中国来的歌手，又诚恳邀请他们参加隔天举办的送给全市老年人的义演。 歌手郝云那天给几百个美国老头老太太唱了《忽然想起理想这个词》，掌声啪啪的。 演员李晨表演了汽车漂移，用租来的雪佛兰。 铁成什么都不用表演，他往台上一站POSE—摆，底下见多识广的美国老人家们起立拼命鼓掌：CHINA!兵一马一俑！ GOOD!演出超级成功，虽然台下没人知道台上的人里不少是在中国大红大紫的明星。 市长鲍勃专门下载了微信，为的是保持联系，好邀请铁成他们再来。那个市长后来学会了郝云不少的歌，经常没事就在微信上给铁成他们炫，隔着一整个地球，他哼：我那可怜的吉普车，很久没爬山也没过河…… (十二）在路上，铁成被人当成过毒贩子。 也是在美国，他和一个叫巴哈古丽的朋友一起去参加世界最大的摩托车集会。那是个一百多万人的盛大集会，在斯特吉斯，汇集了几十万辆摩托，方圆100公里找不到房间，他们住在130公里以外的小镇上。 巴哈古丽当时在美国留学，热心给他当翻译，忙前忙后地热心过了头，生理周期提前，肚子疼，疼成了个大虾米，直呻吟。万幸赤脚医生铁成随身带着艾条，给她拔罐艾灸。艾条点燃没十分钟，有人眶眶砸门，三条威猛的美国西部牛仔大_发皆张，冲着屋里喊：你们两个坏女人，为什么在我的酒店抽大麻！滚出去！他们把中医艾条当成了叶子，把长发长抱的铁成当成了女人，把俩好青年当成了“飞行员”…… 怎么说都不好使，大半夜的，铁成和巴哈古丽被绑起来扔了出去。 太尴尬了，古丽很委屈，铁成安慰她塞翁失马焉知非福，最倒霉的时候说不定意味着接下来立马交好运…… 可好运在哪儿呢？摩托车轰鸣在茫茫的黑戈壁上，两个艾条味的身影凄凄惨惨戚戚。 万幸，午夜时他们终于在另一个小镇找到房间，接待他们的美丽女店员居然是中国山东寿光人，是个交换生，来此地实习并体验生活的。女孩激动坏了：我在这片沙漠打了四个月的工，做梦都没想到这儿会出现兵马俑…… 几个小时的时间，年轻的人们已经彼此熟悉，女孩拽着铁成追问：你既然有好几个稳定的工作，为什么还要天天跑出来瞎折腾？家人怎么办？家里人会不会不放心？你追求的是什么？ 铁成告诉她，父母都安置西安，住在大明宫公园边上，散步不用跑远。父母经常出来和他一起旅行，夏天去草原，冬天去云南，哪里气候好就带他们去哪里……是正确的吗？不管折腾不折腾，适合你自己的，就是最正确的。 追求最适合自己的东西，就是追求的意义。 女孩眼睛亮亮的，一句话把铁成吓哭了，她说：我忽然发现我应该追求什么了……当我男朋友吧。 她说：虽然你脸长得又老发型又不好看，但你的脑子咋那么迷人呢。 她说：喂，兵马俑，咱们试试看，说不定我就是最适合你的呢？ 巴哈古丽在一旁笑岔了气，捂着肚子哎哟哎哟，铁成哥，你也有今天！算你说准了，还真是个不期而至的好运！ 第二年同一时间，铁成回到那个小镇，带着他的寿光女朋友去过一周年纪念日。 他当时给我发越洋微信，告诉我他女朋友是看着我节目长大的小朋友，但现在，我需要喊她嫂子。 下一条微信里，一个彪悍的寿光口音玩儿命喊： 大冰锅锅，快点儿喊我嫂子！铁成很开心，呵呵笑着在一旁插话：兄弟，我又多出来一个世界了。 这也算一个世界？好吧你的人生你随便！ 铁层还会个给自己建造多外世界？ 他不是个习惯把目标和希望挂在嘴上的人，我只记得他说过：20年后，如果能跟着太阳的作息去起居生活，能和志同道合的朋友去领略世界，能像候鸟一样去迁徙，并有方向……人生也就圆满了。 我开笔写这篇文章的时候，他的故事依旧正在进行着，他正开启着自己的另外一个新世界：组一个房车车队，一路接纳志同道合的朋友们，吃住在车上，一路贯穿中国去看望彼此的父母。 何时下车参与者自便，但上车期间每个人都必须分配工作，会中医的负责给父母们看病，善厨艺的负责给父母们做饭……啥都不会的，负责哄父母们高兴。车已搞定，线路也已拟定，报名的朋友们数以百计，商业赞助、随队拍摄、网站合作等等等等通通搞定，计划中被看望的父母全都蒙在鼓里。 很难说清楚这是在玩儿还是在工作，或许他是想发起一种现象：朋友们抱团取暖的同时，把彼此的父母也包括进去，喊上父母一起玩儿。掀开窗帘看看，或许这会儿车队正途经你的城市，浩浩荡荡地路过你家门前的马路。 铁成正开着打头的那辆车。 (十三）铁成的故事太多，就算是举例说明，也不是一篇文章能盛得了的，我不多写了，你知道这世上有个疯疯癫癫的兵马俑就足够了，他就在你身边活着。 旁人笑他太疯癫，他却不笑别人看不穿，他只活给自己，并不是活给别人看。 其实，铁成的故事不应该被盲目效仿。 我用大量的笔墨描述他，只是希望你知晓：这个世界上没有标准答案，人不是只有一种活法，这个世界上有很多个和你活得不一样的人，以及不一样的幸福感。 那些奇妙的生活，就算你终生都无缘去触碰，至少你应该有知情权。 哈，现在文章过半，我猜有人开始咆哮开始喷了：深井冰（神经病）！你他妈写的这个铁成，和我有蛋关系，他认识那么多明星，干成了那么多事业，掌握那么多人脉那么多资源，他的起点和我们能一样吗！……讲这种人的故事个我们这些一穷二白的普通人听，来误导我们的判断、诱惑我们的心灵，你居心！ 憋鸡冻（别激动），知道你年轻、穷、宅、缺资源少机会还性压抑……但是孩子，这一切不应构成你动不动就喷爆粗扣帽子的理由。 拜托，还记得我文章开头咋说的吗？ 这篇文章要看就看完，若只看一半就咆哮撕书的，你、下个月胖十斤。若没看完就指责我误导众生，爷不认账，概不负责。 是的，铁成很特殊，比你我都特殊，他的起点确实和大多数人不同…… 不如把铁成丢到一边，我重新讲一个故事。讲一个出身普通、背景普通的普通人的故事给你听，如何？ 巧得很，这个人也来自陕北。 我们从他的少年时代说起。 (十四）和纵横四海的铁成不同，接下来要描述的这个普通人，是个缺乏机会的人。 按世俗论调界定，没什么出息和希望的人。 他生在黄土高坡，祖祖辈辈都是陕北老农民，童年的记忆只有四样：放羊、摘野果子、无师自通的陕北民歌、无师自通的用土坷垃画画。 那时家里对他最远大的期望，是像他父亲一样，当个电工。 除此之外没有更大的想象力。 父亲在黄帝陵煤矿当电工，那个县有500对个小煤矿，天都是黑黄的。他一直到上初中才走出村镇，去到黄帝陵煤矿生活，第一次去时，他看着一排排灰头土脸的宿舍房，震惊地问父亲：这就是传说中的大城市吧！ 父亲木讷，只说：嗯。 矿区的孩子打架斗殴，偷铁卖铜，他很快都学会了，那时他有过一个短暂的叛逆期。偷电缆电线也学会了，最狠的一次，一万多人的企业被偷停电了，偷错了，偷了总电缆。架也是打的，领帮穷孩子和赃老板的孩子，包工头的儿子打，打完了再打，两拨人莫名地对立，泾渭分明的阶级分化。 他是村里干农活长大的孩子，生得粗壮，那时候有人让他帮忙收税，赶集时抓违章摆摊，人家可以每天给他几元零花钱。这他倒是拒绝,再不靜也是村里长大的孩子，知道那些摆摊卖瓜菜的人来自哪儿。 本性或许纯良，但生长的环境着实不好，初中同学里就有吸毒的，见他会画画，求他帮忙文身，旧针头蓝墨水血嗤糊拉，第一次文了大象，第二次文了情侣坐在月亮上……那同学后来进过看守所，因为文身太可爱，被人揍惨了。 他那时有过恍惚，想到未来时有过隐隐的不安和不甘，但在那样的氛围里长大，脑子里只有混纯和空白，完全找不带着力点。 18岁之前他连技校都没考上，当不了电工，后来交钱上了陕西省艺术学校，三年中专，学美工。 家里人说，家底掏空了，我们仁至义尽就这么大本事了，你自己奔个前程吧。 他背着铺盖，懵懵懂懂地去了省城西安，车水马龙里吃惊得瞪大眼，紧张又贪婪地看。 每个人的年轻时代都有海绵期，他那时学东西特别快，很快学会了去隐藏那些没见过世面的惊叹，以及分辨完红绿灯再过马路，他还学会了弹吉他，艺校里学的。 艺校里吉他特别多，一熄灯，男生盘蹈一二楼，女生趴满三四楼，十几把吉他弹唱崔健的歌。一仰头无数手和头，每唱完一首女生集体欢快叫唤。 省城孩子走读，住校的大都是和他一样从小城小镇来的，穷孩子也有荷尔蒙，他们抱成团自娱自乐。 每天的睡前合唱顶多钟，而后迅速撤散，不然笨拙的校警和敏捷的校长会翻阳台抓人，屁股印上皮鞋印，一口一个地骂瓜尿。 从矿区来到艺校，他变得开朗了许多，品性慢慢地被新环境重新塑形，虽未最终定型，却搞出许多之前未曾做过的事来一比如，上第二个学期时，他养了一群小孩。都是学杂技的孩子，最小六岁最大八岁，都和他一样穷，一样每月不到60块钱的生活费，都吃不饱饭，要命的是都巨能吃。 那时学杂技苦，每天都要哭着把课上完，挨罚是寻常事，寻常人家怎么舍得让孩子遭那份罪，他们都是从最偏远的村镇里来的。孩子和小动物一样，天然地懂得寻找保护者，半夜饿了，他们可怜巴巴地摸到他床前，轻轻摇醒他。 他心软，冒险偷东西给孩子们吃。楼下是小吃部，有个小天窗，三条床单拧成绳检在他腰上，他悬空打转转，转进天窗。不敢偷值钱的东西，只敢拿辣子和花干夹馍，偷多少，孩子吃多少。 小吃部的老板一度很奇怪，这个干瘦的小伙子怎么总是来免费帮忙？水也不喝，给钱他也不要？ 他那时学会了剪头，三块钱一次帮同学剪锅盖头，他卖打火机，帮人画作业，挣来的钱给那几个小孩加餐。孩子们喊他老大，把这个十八九岁的青年当爸爸，经常横七竖八地睡在他床上，舍不得离开他。 他的床那时是全学校最舒服的，他从毕业生那里讨来褥子，厚厚的六层，算是他和那帮孩子的餐厅、炕和沙发。 他和孩子们极能聊得来，大部分时候聊吃的，也有时候聊鬼故事，还有时候聊到他们学校的校花，是个话剧班的师姐，叫苗圃。孩子们共同的希望是能和校花说说话，他们还小，见过的美好的事物不多，艺校是他们全部的世界。 他自己那时最头疼的也是吃饭问题，为了省路费，半年才能回一次家。每次带回的生活费都是散钱，父母牙缝里省下的。 为了省饭钱，他和同班同学李秋香、葛勇组成了饭搭子。三个人家里条件都不好，都不够吃，那就把钱都拿出来，不去食堂了，三个人自己做饭吃比较省钱。 女生宿舍有间空房，葛勇和他借来炉灶，负责做饭洗碗，李秋香负责买菜。那时候下课铃声一响，李秋香百米冲刺菜市场，买菜杀价风驰电掣，再百米冲刺回来。 两年下来，李秋香得了短跑冠军。 有人饱暖思淫欲，有人饱暖后思前途，三个人的饭搭子解决了吃饭问题，他开始琢磨明天。 那时他再次回家取生活费，告诉妈妈：我找到省钱的方法了，可以少给我一点儿。妈妈哭，苦了我娃娃了，爸妈没本事，都供不了你上个大学，只能上个中专，都不知道你将来靠什么挣钱吃上好饭。 他安慰妈妈，中专就中专，起码有学上啊，放心我能找到办法让自己将来吃上饭。 可他并没有什么办法，没有背景没有资源，他甚至不知该怎样去畅想未来。他能做的只有把自己的专业尽力搞好，他只有这一个支点。 他开始贈课，去西安美院蹭课。 美院在西安长安区山上，艺校的课松，他完成作业后作死地蹬车轮，从艺校骑车两个小时可以到。 1996、1997年两年，西安美院的很多人都以为他是本校生，只是没人知道他住哪个宿舍，也没人见他在食堂吃饭。他蹭课时自己带饭，李秋香和葛勇帮他做了个饭盒装面条，缝隙太大容易洒，外面绑着塑料绳，拴在车把上。 他蹭过杨晓阳的课、刘文西院长的课，有一遭刘文西在走廊里拦住他：孩子，怎么哪儿讲课都能看到你？蹭课的吧。又说：好好努力……别让人发现了。 他一直努力到毕业，自负有手艺，心里有底气，并没有经历艺校其他同学的毕业茫忙然期，那时同学们大部分一毕业就失业，最好的择业方向不过是当美术老师，且需要家里找关系，求爷爷告奶奶。 毕业时，他养过的小孩们哭得像出殡一样，抱着腿不松开，他身上挂着三四个小孩挪到校门口，他说：灶给你们留下了，以后学着自己做饭，乖。 他应聘到了工艺品厂，做玻璃画，刻了三个月的玻璃，每月包吃住300元。厂子小，老板也亲自干，他有个同学找不到工作，求到他这儿，他找到老板：我的工资可以分他一半。 同学留下了，他辞职了，厂子实在太小，养不了那么多人。同学过意不去，他说这有什么，我有手艺在身上，我可以去卖画，当画家。. 他没能成画家，一辈子也没当成。 那时他把得意的画作扛到书院门，一家家推开画店门问：老板，买画吗？ 每个老板都问：谁的画？ 他说：我的…… 人家问：你是锤子？ 毕业后五个月，他饿瘦7十斤，于是改行。 西门外有西北五省最大迪斯科舞场，叫“帝都”， 他去应聘美工，后来当了保安，再后来他给DJ当助手，后来当了 DJ。 艺校的夜间吉他会教他了点音乐手艺，他靠这点儿手艺月薪过了600。为了避免歧视和笑话，他学会了西安话，为的是多点儿工作机会。他那时兼职了四个地方，最远的地方是在一个溜冰场领迪，30元一晚，依旧是骑自行车赴会，天天往返几十里，骑出来一屁股疮。 那时家里第一次买房子，之前住自己盖的平房，瓦工泥水全是父亲一个人担当，电工也是，父亲本就是个电工。煤矿房补了三万元，他赞助了400元，妈哭了，父亲低头躲出去抽烟，老家穷，问人借钱借2000元就是天大的事，而儿子一次性就给了4000元他那时的人生谈不上生活，只是生存。 不仅为了自己，还包括渐老的，渐渐丧失谋生能力的父母。为了生存，他开始走天涯，首先去了孔孟之乡的山东。 山东济宁体育馆开了溜冰场项目，全国挖人。他可以当美工，可以当策划，可以领舞，所以删领了一个月800元的工资，包吃住。他一脑袋扎了过去，学着他的祖先的模样，走西口一样地闯山东。 从山东回陕北太远了，过年回家需提前半个月买票，只搞来一张坐票三张站票，站票虐心，人上去了东西没上去，使劲抡，隔着人头抡上去。唯一张坐票，让给了老乡中工资最低的一个阿姨。 长路漫漫，人挤人，腿不久就站肿了，他找列车员套近乎，得到一个厕所，一个人交40元钱。列车员把厕所门锁上，隔着门叮嘱：你们三个，谁敲都别开门，开门咱都完蛋！ 几十个小时的火车咣当完，倒汽车再倒黑车，大年三十赶回家。 他对父亲说：大，这是我给你买的山东大鸡烟，这是兰陵酒。 父亲不说话，低头躲到门外。 妈妈说：你挣钱不容易，你爸不想你太累，烟酒你爸都戒了，家里省点儿你就少累点儿…… 父亲没有任何不良嗜好，也没有任何娱乐，唯一爱好就是抽两口烟喝一盅酒。 他出门，找到父亲说：我陪你戒，你不抽烟我就不抽烟，你不喝酒，我这辈子也不会再喝酒了。 这话他做到了，此后不不论是起是伏，不论漂到何方，他均烟酒不沾。他的年轻一穷二白，没什么瞻前顾后。 1999年年底他去了深圳，去最前沿的城市找机会，一到就被关起来了，十五天。 他是去投奔一个叫刘德华的同学，其实叫刘华，缺德。刘华犯了事，被四十多古惑仔抡着大刀片子追砍，铁成抢了一辆摩托车冲倒了一片，可他不会用脚刹一路直线撞到墙上，警察赶来时他还晕在社，满头是血。 那是他第一次骑摩托车。人生地不熟没人作保，他和刘华被关进看守所铁栅栏，睡木板，四面透风。那一年珠三角奇冷，香港街头流浪的人冻死了八个，他在深圳的看守所里也差点儿冻死，来时只听说是南方，暖和，没带棉衣。 大年三十放出来时，他已经烧傻了，只会走直线，眶地又撞了墙。 他大年初八开工，打零工，先做平面设计，后来是会场布置、舞美装置。 那时住白石洲的农民房，此地三教九流卧虎藏龙，世纪大盗张子强就是在那里被抓的白石洲楼和楼近，刷牙时伸手可以从隔壁楼拿牙膏。那时一楼住房东，四楼是藏族兄弟益西江村和觉巴益西，三楼刘华和他，二楼曾氏兄弟是跑场跳舞的。 后来二楼的曾氏兄弟里有一个人搞了个组合，叫凤凰传奇。 那时村里的外来年轻人相依为命，混得不好了互相接济，混得好一点儿的就搬家到稍大的房子里，还是在白石洲里。 他和藏族兄弟江村最热心，经常帮朋友义务搬家，帮来帮去帮得经验丰富无比，无论多少家具都打包塞进一辆车里，这样省钱。 那时深圳东门开了中国第一家麦当劳，他领了工资，领江村去开洋荤吃大餐，不会点，一人点了四个套餐，又不舍得浪费粮食，差点儿撑死。 他那时勤奋得很，超市、酒吧、服装商场，哪里需要美工设计他就扑到哪里去。 资源是匮乏的，但天道酬勤，机会青睐伸手接住的人。他后来靠勤奋啃完了一个巨难的单子，替中国最大的室内主题公园未来时代做舞台美术设计，活儿干得很漂亮，他又接到了锦绣中华民族村的道具制作。 办干边学，边学边做，不知不觉中人就会升值。一步一个台阶往上走，他进了 4A公司，参与了央视春晚的三维动画制作，再后来进了南方电视台当摄像师，又从南方卫视跳槽香港有线电视台，天南海北地拍片，拍过乌镇广告，也拍过孔府广告…… 他片子拍得极好，后来他挑梁一个摄制组，既是策划人也是执行人，人人都夸他敢想能干，没人道他的学历，也没人在乎。 他并不懂经营人脉，但几乎每一个合作过的人都成了他的朋友，原因很简单：他是极普通的人，养气功夫却足，待人接物时总能做到不仰视也不俯视，不给人压力力也不对人阿谀。 人都不傻，都知道自己的朋友圈里需要有这样一个人。 他后来创业做公司时，很多人主动站出来帮他，全深圳的宣传片几乎被他们公司包揽，包括深圳城市宣传片。他还和江村合开了一家藏式酒吧，白石洲的老朋友来了有热茶有烧酒。 忽然不用再一分一厘地省钱了，他获得了最初的经济自由，于是第一时间把父母安置到西安，大明宫公园旁买了房子，并第一次带着父母出门旅行。 那时他还不满27岁，旁人自怨艾青黄不接的年纪，他已经靠自己的能力谋得了一份温饱体面，闯出了最初的成功，赢得了最初的尊重。 输在了起跑线，却贏在了弯道，他是个懂得自己给自己制造弯道的人。他未停此制造弯道。 有一天，他忽然对公司合伙人说：生意已经上了轨道，我觉得我该“出轨”了,我还年轻，不应该现在就开始守成。他对江村说，酒吧全给你吧，我走了，上学去了，去把过去没机会学的东西都好好补课。 他对朋友们说：除了挣钱，接下来我要挣点儿别的东西去，再见面时，莫笑我疯。 他对父母说：以前的拼命是为了生存，以后就是为了生活了，只有真正打理好自己的生活，成为一个天天高兴的人，我才能真正当一个孝顺的人。 他并没受什么刺激，也并非忽然醍醐灌顶，所有的决定像是一场漫长实验后的化学反应，自然而然的结晶。 然后他走了…… 不管他后来去向何方，找到的是什么，他27岁之前的故事很普通，普通人的普通人生。 虽然他的出身背景，远不如大部分普通人。 (十五）他30岁那年，我26岁。 我们相遇在午后的街头，我是过路的鼓手，他是卖唱的歌手，他笑着打量我，问：这么好的太阳，走得那么急干什么？ 我停下来，和他一起弹琴、敲鼓、晒太阳，一起组织路人丢手绢、捉迷藏……一起围坐在篝火旁。 我问他：你是哪儿人？他故意用方言回答我说：俄四赏北瓦窑堡县廖公桥仍(我是陕北瓦窑堡县廖公桥村人）。 口音太土了，我咧嘴笑。 他也笑：饿们那，鼻英都重（我们那儿，鼻音都重）。 我请他来首陕北民歌，他张嘴就是一句道情：哎……亲口口，拉手手，咱们两个奋旯旯里走…… 好有趣的男人，好正宗陕北洋芋擦擦腔，姿势也正宗，一手掐腰一手护在耳后，下颌微抬，微微闭着眼，仿佛面前不是彩云之南而是黄土高坡的山梁梁，面前聚拢而来的不是人而是他正在放的羊……这么有意思的人当然要结交，请教他的尊姓大名。 他告诉我，他的名字可大有来头。 他说他一岁前没有名字，妈不识字，爸爸在外当电工。那时他病重昏迷，24小时水米不进，去县城看病来回要走几十里路，那时零下一二十摄氏度，路难走，能找到驴车就活，找不到的话只能抱着走，然后死在半路上。很多娃娃就是这么天折的。 驴车没找到，天太冷，村里唯一的驴赖床，怎么也拖不起。 妈妈哭肿了眼，骂了半天驴，又紧紧地把怀中的他抱紧，毛个蛋蛋，就这么眼睁睁看着你没了？不行！妈妈死马当作活马医，请来麻节（陕北民间萨满）降神，麻节做法半晌请下神神，说是关公附了体！ 巧得很，他5月13日生人，恰是关公磨刀日。 关老爷赐下仙方，草根树皮鸡毛猪鬃庄稼叶子五谷粒粒，外加井水和窗台灰。筷子撬开牙，狠狠灌下去，关老爷说了：明天能醒就好了，不能醒就准备草席。关老爷附体的麻节还说：知道为甚这娃娃被索命？名字都不给人家娃娃起一个，能好养活吗？！赶紧给起个名，有了名字，铁定能成。 关老爷说：这娃娃如果不能醒，就准备草席……能醒，以后就叫铁成 (十六）这个世界很有趣，有些人忙着做事，有些人忙着做梦，有些人忙着做戏。还有一些人不慌不忙，既做事又做梦，又在人腿场戏里做自己。 旁人笑他太疯癫，他却做雜去做成传奇。 铁成的传奇不应被盲目复制，路径不应被盲目学习，他不是范本只是个例，不是模具只是参照系。与其效仿他的经历，不如去捕捉一下那些经历背后的意义，继而填充你自己。 铁成的故事还在继续，你的故事呢？开始了没？ 是否纖徘徊，抑或力不从心？想过缺的尉十么吗，是目碰是前提？ 如果缺目标，这篇文章算是画给你的饼，请纳入你的备选方案里，不要指望它能一劳永逸地解决你的饥馑，当下把它仅仅当个菜单上的图片就行。知道它有，它存在，它可供你选择就行。 明白是否有权选择它，和你是什么出身背景蛋关系没有就行。 若你选了，请一定明白：每一种理想中的生活都有其前提。和找到目标同等重要的，是认知前提。目标一词是多选题，前提二字是必选题。 既可以朝九晚五又能够浪迹天涯的生活有前提，叫：平行世界、多元生活。 平行世界多元生活也有前提，叫：想不想要，想要多少。 越是追求多项选择式的平衡生活，越要完备并善后你的前提。若漠视前提，并妄图侥幸越过……就别去扯什么有梦为马随处可栖！ 自由、自我、自在的状态并非一蹴而就，世上哪儿来那么多捷径。 人只能靠自己去成全自己，真正对自己负责任的人懂得如何让自己变得完整。若想此生不枉此行，请先清楚该往哪儿走，怎么走，那种完整，怎样完整。 想不清楚别慌走，山洪雪崩泥石流。 若想清楚了，那还等什么等？ 前途风光正好，追风赶月莫停留！ 不送。 结语本文转载于野生作家大冰文学《好吗好的》——《旁人笑我太疯癫》篇，本文转载于野生作家大冰文学《好吗好的》——《旁人笑我太疯癫》篇，本文转载于野生作家大冰文学《好吗好的》——《旁人笑我太疯癫》篇，重要的事说三遍，请冰叔原谅无耻的copy！！！]]></content>
      <tags>
        <tag>游记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Travel-1]]></title>
    <url>%2F2017%2F08%2F27%2FTravel-1%2F</url>
    <content type="text"><![CDATA[前言作为一名90后有志青年、文艺青年，平常研究专业之余最大爱好便是各地“晃荡”了，尤其钟爱”独游”。好吧，实话说，因为目前是一只单身狗，没办法，只能独游… 在那个说话还不需要考虑后果的年纪，曾放出“要走遍中国”这样的豪言壮语，现在稍微有点理智了，觉得还是把生活的这一片区域”晃”完再说。。。目前居住在杭州，这个据传说支付宝、淘宝无处不在，同时又连个包子都买不起的城市。。。 另外，需要一提的是，本文图片存储于七牛云，认证方式有些坑，目前还在研究。友情提示，图片较大，加载耗时。。。Alibaba杭州有个阿里巴巴，这两天的福布斯富豪科技排行榜，Jack Ma评第七，Ma Huateng排第八，中国互联网被戏称已进入“马家时代”，作为全国、乃至全球知名企业，怎能不去一睹它的风采。拼着一把老骨头，骑了40分钟单车到了阿里巴巴西溪园区，又被称为淘宝城，据说是阿里巴巴总部所在地，进入园区需要内部邀请码，屌丝无法进入，索性绕着周边转了转，先放几张图，感受下：阿里北门，有一个巨大的logo，现场感受还是挺震撼的在阿里的北门附近Dream图标，感觉挺符合阿里的气氛，就随手把它拍了下来很多建筑中，南门必然很宽敞，同时配有Alibaba的logo阿里周边风景,大片草地，溪水从中穿过… 留下古道杭州城西的留下街道是一个千年古镇， 接余杭，多山林, 是一个典型的山乡集镇。留下街道原名西溪 , 据清光绪《钱塘县志》载 :” 宋建炎 3 年 (1129 年 )7 月， 高宗南渡 , 幸西溪 , 初欲建都于此 , 后得凤凰山 , 乃云 : ‘西溪且留下 ‘ 。故此处名留下 , 并一直沿用至今。 公交换乘走到了留下，烟雨蒙蒙，走进了这一片留下古街道，探访她独特的魅力不少老人住在这样的老屋之中，屋内挂着一幅毛主席画像，坐在躺椅上，抽着旱烟，看着门外的江南烟雨… 钱塘江钱塘江，古称浙，全名“浙江”，又名“折江”、“之江”、“罗刹江”，一般浙江富阳段称为富春江，浙江下游杭州段称为钱塘江。钱塘江最早见名于《山海经》，因流经古钱塘县（今杭州）而得名，是吴越文化的主要发源地之一。 钱塘江，连接着外海，一望无际，此处非钱塘江潮，所以不要误解。江上的铁桥，不时有火车和地铁从上边通过 结语生命无价，潮水无情。。。]]></content>
      <tags>
        <tag>游记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Node.js+express读取excel表格中的数据]]></title>
    <url>%2F2017%2F08%2F20%2FNode-js-express%E8%AF%BB%E5%8F%96excel%E8%A1%A8%E6%A0%BC%E4%B8%AD%E7%9A%84%E6%95%B0%E6%8D%AE%2F</url>
    <content type="text"><![CDATA[两周前看到一个excel表格，突然想了一个需求，能否将其中的数据通过某种语言读取出来？然后返回json格式的数据，渲染到html页面中？于是便开始了百度、谷歌的道路，最终选择利用Node.js这一门比较亲近的后台语言来实现，通过express来实现页面路由以及监听端口，利用node-xlsx这一包来实现读取 .xlsxexcel格式文件数据读取这一核心功能。 文件目录结构： node_modules 项目所依赖的包 website 项目静态资源目录，包含index.html和index2.html文件（配置路由返回不同页面） 01.xlsx excel表格，数据来源 index.js 实现读取、路由配置、监听端口等核心功能 package.json 项目配置文件 index.js文件：12345678910111213141516171819202122232425var express = require(&apos;express&apos;);var xlsx = require(&quot;node-xlsx&quot;);var app = express();var xlsxData=xlsx.parse(&apos;01.xlsx&apos;);// 信息获取app.get(&apos;/messages&apos;,function(req,res)&#123; var str = JSON.stringify(xlsxData); // charset=utf-8 解决json数据中中文乱码 res.writeHead(200, &#123; &quot;Content-Type&quot;: &quot;application/json;charset=utf-8&quot; &#125;); res.end(str);&#125;)//对静态文件做处理app.use(express.static(__dirname+&apos;/website&apos;));app.get(&apos;/&apos;,function(req,res)&#123; res.sendFile(__dirname+&apos;/website/index.html&apos;);&#125;)app.get(&apos;/admin&apos;,function(req,res)&#123; res.sendFile(__dirname + &apos;/website/index2.html&apos;);&#125;)app.listen(1000,function()&#123; console.log(&apos;监听1000端口成功！&apos;);&#125;) 核心思想：在本项目中，引入开发所依赖的包文件，通过’/messages’的方法来获取并返回excel中的数据，’/‘方法返回index.html静态文件，在该文件中利用ajax方法，获取接口为’/messages’的数据，’/admin’来获取另一静态页面index2.html；最后本项目通过监听listen 1000端口来启动本地服务器。 index.html文件：123456789101112131415161718192021222324252627282930313233343536373839404142&lt;body&gt; &lt;div class=&quot;container&quot;&gt; &lt;table class=&quot;table&quot;&gt; &lt;caption&gt;&lt;/caption&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;#&lt;/th&gt; &lt;th&gt;姓名&lt;/th&gt; &lt;th&gt;性别&lt;/th&gt; &lt;th&gt;学校&lt;/th&gt; &lt;th&gt;系别&lt;/th&gt; &lt;th&gt;专业&lt;/th&gt; &lt;th&gt;类别&lt;/th&gt; &lt;th&gt;年级&lt;/th&gt; &lt;th&gt;电话&lt;/th&gt; &lt;th&gt;QQ&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;/div&gt;&lt;/body&gt;&lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/jquery/2.0.3/jquery.min.js&quot;&gt;&lt;/script&gt;&lt;script&gt; $(function () &#123; $.ajax(&#123; url:&apos;/messages&apos;, dataType:&apos;json&apos; &#125;).done(function(result)&#123; // 渲染页面 //表格名称 $(&apos;caption&apos;).text(&apos;&apos;+result[0].name+&apos;&apos;); //表格内容 $.each(result[0].data,function(i,v)&#123; console.log(i,v); $(&apos;&lt;tr&gt;&lt;/tr&gt;&lt;th scope=&quot;row&quot;&gt;&apos;+(i+1)+&apos;&lt;/th&gt;&lt;td&gt;&apos;+v[0]+&apos;&lt;/td&gt;&lt;td&gt;&apos;+v[1]+&apos;&lt;/td&gt;&lt;td&gt;&apos;+v[2]+&apos;&lt;/td&gt;&lt;td&gt;&apos;+v[3]+&apos;&lt;/td&gt;&lt;td&gt;&apos;+v[4]+&apos;&lt;/td&gt;&lt;td&gt;&apos;+v[5]+&apos;&lt;/td&gt;&lt;td&gt;&apos;+v[6]+&apos;&lt;/td&gt;&lt;td&gt;&apos;+v[7]+&apos;&lt;/td&gt;&lt;td&gt;&apos;+v[8]+&apos;&lt;/td&gt;&lt;/tr&gt;&apos;).appendTo($(&apos;tbody&apos;)); &#125;) &#125;) &#125;)&lt;/script&gt; 核心思想：该文件中有表格的基本结构，通过ajax调用’/messages’接口来获取json格式的数据，并将返回的数据遍历渲染到html页面中 启动项目运行index.js文件监听端口来启动本项目 node index.js localhost:1000 最终效果图： 参考文章]]></content>
      <tags>
        <tag>node</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[网站SEO优化]]></title>
    <url>%2F2017%2F08%2F17%2F%E7%BD%91%E7%AB%99SEO%E4%BC%98%E5%8C%96%2F</url>
    <content type="text"><![CDATA[这几天做的项目模块中涉及到了对公司网站的SEO优化，之前对网站的优化也一知半解，仅仅停留在使用合理化标签、减少代码的冗余量、网站标题、描述词优化这些基础水平。但在真实项目环境中，网站优化所涉及的内容很多，是一项足够考验耐力和细致的脑力劳动。 什么是SEO？搜索引擎优化(Search Engine Optimization,简称SEO)是一种利用搜索引擎的搜索规则来提高有关目标网站在有关搜索引擎的排名方式。 对搜索引擎不友好的网站有哪些特征： 网页中大量采用图片或者 Flash 等富媒体（Rich Media）形式，没有可以检索的文本信息，而 SEO 最基本的就是文章 SEO 和图片 SEO； 网页没有标题，或者标题中没有包含有效的关键词； 网页正文中有效关键词比较少（一般小于整文章 2%~8%）； 网站导航系统让搜索引擎“看不懂”； 大量动态网页让搜索引擎无法检索； 没有被其他已经被搜索引擎收录的网站提供的链接； 网站中充斥大量欺骗搜索引擎的垃圾信息，如“过渡页”、“桥页”、颜色与背景色相同的文字； 网站中缺少原创的内容，完全照搬硬抄别人的内容等。 搜索引擎优化内部优化META 标签优化：例如：TITLE，KEYWORDS，DESCRIPTION 等的优化内部链接的优化，包括相关性链接（Tag 标签），锚文本链接，各导航链接，及图片链接网站内容更新：每天保持站内的更新(主要是文章的更新等) 外部优化外部链接类别：博客、论坛、B2B、新闻、分类信息、贴吧、知道、百科、相关信息网等尽量保持链接的多样性外链运营：每天添加一定数量的外部链接，使关键词排名稳定提升。外链选择：与一些和你网站相关性比较高,整体质量比较好的网站交换友情链接,巩固稳定关键词排名 SEO优化步骤关键词分析（也叫关键词定位）这是进行SEO优化最重要的一环，关键词分析包括：关键词关注量分析、竞争对手分析、关键词和网站相关性分析、关键词布置、关键词排名预测。 网站架构分析网站结构符合搜索引擎的爬虫喜好则有利于SEO优化。网站架构分析包括：剔除网站架构不良设计、实现树状目录结构、网站导航与链接优化。 网站目录与页面优化SEO不只是让网站首页在搜索引擎有好的排名，更重要的是让网站的每个页面都带来流量。 内容发布和链接设置搜索引擎喜欢有规律的网站内容更新，所以合理安排网站内容发布日程是SEO优化的重要技巧。链接布置会把整个网站有机地串联起来，让搜索引擎明白每个网页的重要性和关键词，实施的参考是第一点的关键词布置。友情链接战役也是这个时候展开。 与搜索引擎对话向各大搜索引擎登录入口提交尚未收录站点。在搜索引擎看SEO的效果，通过site:你的域名，知道站点的收录和更新情况。通过domain:你的域名或者link：你的域名，知道站点的反向链接情况。更好的实现与搜索引擎对话，建议采用Google网站管理员工具。 建立网站地图SiteMap根据自己的网站结构，制作网站地图，让你的网站对搜索引擎更加友好化。让搜索引擎能通过SiteMap就可以访问整个站点上的所有网页和栏目。最好有两套 siteMap,一套用户方便客户快速查找站点信息（html 格式），另一套方便搜索引擎得知网站的更新频率、更新时间、页面权重（xml 格式）。所建立的 sitemap 要和你网站的实际情况相符合。 高质量的友情链接建立高质量的友情链接，对于SEO优化来说，可以提高网站PR值以及网站的更新率，都是非常关键性的问题。 网站流量分析网站流量分析从 SEO 结果上指导下一步的 SEO 策略，同时对网站的用户体验优化也有指导意义。流量分析工具，建议采用分析工具 Google Analytics 分析工具和百度统计分析工具。 原文链接 参考文章]]></content>
      <tags>
        <tag>seo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[webpack简介与使用二]]></title>
    <url>%2F2017%2F08%2F14%2Fwebpack%E7%AE%80%E4%BB%8B%E4%B8%8E%E4%BD%BF%E7%94%A8%E4%BA%8C%2F</url>
    <content type="text"><![CDATA[前言之前总结了一篇文章，简单介绍了webpack及其相关知识点，但觉得有些地方还是不够详细，实践性不强，故而今天再次对其做个总结，争取一目了然。 webpack安装全局安装淘宝镜像：1npm install -g cnpm --registry=https://registry.npm.taobao.org 我们通过cnpm的方式来安装webpack，命令行执行：1cnpm install webpack -g 使用webpack接下来我们通过一个简单的例子来演示使用webpack首先，创建一个index.html文件，如下： 12345678910111213&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&gt; &lt;title&gt;Document&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;p&gt;webpack demo&lt;/p&gt;&lt;/body&gt;&lt;script type=&apos;text/javascript&apos; src=&apos;bundle.js&apos;&gt;&lt;/script&gt;&lt;/html&gt; 说明：这里bundle.js就是我们打包以后得到的js文件。然后再创建一个js文件，命名为entry.js,这个问津通常通过webpack打包为bundle.js。如下：1document.write(&apos;this is a demo which show how to use webpack&apos;); 至此我们的目录有两个文件entry.js和index.html。下面通过webpack将js文件打包。执行下面命令行：webpack ./entry.js bundle.js如果没有出错的话，目录中就会生成了bundle.js文件，是打包以后的文件。现在，在浏览器中打开index.html,可以看出页面中显示了this is a demo which show how to use webpack。目前前端开发中，我们通常采用的是组件化开发方式，这样就会对应很多歌js文件，而打包工具的出现则是为了正确处理这些js文件的依赖关系，并生成一个最终的文件，这样，我们最后只需要加载打包以后的文件就可以了，而无需加载许多danger的js文件。接下来我们就试着下多个js文件的打包。新建一个content.js文件，文件内容如下：1document.write(&apos;this is content&apos;); 将entry.js文件修改如下：1document.write(require(&apos;./content.js&apos;)); 打包，执行webpack ./entry.js bundle.js刷新index.html页面，可以看到此时其内容已变成this is content可以看到，webpack以entry.js文件为入口，而entry.js文件又依赖了content.js,这时webpack就会去加载content.js最生成bundle.js 使用loader上面的例子中可以看到webpack可以对js文件进行很好的处理，然而我们的项目中通常需要用到一些css文件对样式进行调整。那如何使用webpack对样式文件进行打包呢，就需要用上loader。我们首先需要将css文件以js模块的方式加载进来，然后将这些样式用到dom上。这两个过程对应两个加载器：css-loader和style-loader。这两个模块可以通过npm进行安装，注意安装到当前的目录即可，不要加-gnpm install css-loader style-loader举例：step1：新建一个css文件，style.css123body&#123; background:yellow&#125; step2:修改entry.js如下：12require(&apos;!style-loader!css-loader!./style.css&apos;);document.write(require(&apos;./content.js&apos;)); step3:打包webpack ./entry.js bundle.js刷新页面，可以看到背景变为黄色。!style-loader!css-loader!./style.css指对style.css文件先使用css-loader进行处理，再通过style-loader进行处理。css-loader将css文件进项处理，使其可以作为一个js modules被处理；style-loader则解析当前的样式，并应用到demo上。以上步骤略显繁杂，每次打包需要指定入口文件和生成文件，并且使用加载器时也需要手动配置，很不方便。为了解决这个问题我们可以使用配置文件来解决，配置文件其实就是说明让webpack来做什么的。 webpack.config.js这个文件设定了打包的配置，webpack会自动根据该文件来打包。一个基本的配置文件如下所示：123456789101112131415module.exports=&#123; entry:&apos;./entry.js&apos;, output:&#123; path:__dirname, filename:&apos;bundle.js&apos; &#125;, module:&#123; loaders:[ &#123; test:/\.css$/, loader:&quot;style-loader!css-loader&quot; &#125; ] &#125;&#125;; 这里指定了三个参数，包括entry，output，module，分别对应了入口文件entry.js,打包生成的文件bundle。js，以及模块加载器。有了配置文件，则可以直接打包：webpack dev serverwebpack还为我们提供了webpack-dev-server,它是一个小型的基于node的express服务利器。利用webpack-dev-server我们可以轻松地启动服务。且webpack-dev-server默认采用的是watch模式，也就是说它会自动监测文件的变化，并在页面做出实时的更新，我们不需要每次都重新编译。 安装webpack-dev-server为了方便子啊命令行中使用，同样全局安装。npm install webpack-dev-server -g 启动命令行：webpack-dev-server默认端口号为8080。在浏览器中打开http://localhost:8080/webpack-dev-server 可以看到index.html页面。修改content.js文件的内容，可以看到index.html页面文件自动刷新了。 关于webpack.config.js我们是以最简单的项目结构来演示，如下：myPro-css-src-dist-index.html-webpack.config.js这样我们的项目结构就很清晰了。css文件夹中存放样式文件，src文件中存放js文件，node_modules中是我们用到的各种包，dist文件存放打包生成的文件。现在做一下两点：1、css使用less编写2、打包文件到dist目录下第一步：在css文件夹中创建以下两个文件index.less1@import &apos;demo.less&apos;; demo.less:12345678body&#123; background:yellow; .main&#123; width:200px; height:200px; border:10px solid red; &#125;&#125; 第二步，在src文件夹中：content.js:1module.exports=&apos;it is from content.js&apos;; enrty.js:123require(&apos;../css/index.less&apos;);let content=require(&apos;./content.js&apos;);alert(content); 第三部：修改index.html12345678910111213&lt;!doctype html&gt;&lt;html&gt; &lt;head&gt; &lt;meta charset=&quot;utf-8&quot;&gt; &lt;title&gt;webpack demo&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;div class=&quot;main&quot; id=&quot;main&quot;&gt; &lt;p&gt;webpack demo&lt;/p&gt; &lt;/div&gt; &lt;/body&gt; &lt;script type=&quot;text/javascript&quot; src=&quot;./dist/bundle.js&quot;&gt;&lt;/script&gt;&lt;/html&gt; 配置less-loader需要安装less-loader,而less-loader依赖于less，因此需要安装：npm install less-loader less然后再config文件中配置对less文件的处理，如下：123456789101112module: &#123; loaders: [ &#123; test: /\.css$/, loader: &quot;style!css&quot; &#125;, &#123; test: /\.less$/, loader: &quot;style-loader!css-loader!less-loader&quot; &#125; ]&#125; 这里加入了对less文件的处理，需要注意loader的顺序，为style-loader！css-loader!less-loader意为先使用less加载器处理，解析为普通的css文件，再处理css文件，最后处理样式，类似于pipe的概念。 设置output在上篇文章中，我们提到了webpack.config.js文件中可以设置output，作为打包的出口参数。如下：1234output: &#123; path: __dirname, filename: &quot;bundle.js&quot;&#125; 这里设置了两项：path和filename这里我们希望将文件打包到dist目录下，则可以通过配置path来实现，完整配置如下：1234567891011121314151617181920let path = require(&apos;path&apos;);module.exports = &#123; entry: &quot;./src/entry.js&quot;, output: &#123; path: path.join( __dirname, &apos;/dist&apos;), //这里配置打包路径 filename: &quot;bundle.js&quot; &#125;, module: &#123; loaders: [ &#123; test: /\.css$/, loader: &quot;style!css&quot; &#125;, &#123; test: /\.less$/, loader: &quot;style-loader!css-loader!less-loder&quot; &#125; ] &#125;&#125;; 执行：webpack 进一步了解webpack-dev-server上篇文章提到，webpack-dev-server为我们提供了一个小型的基于node的express服务器，使我们可以通过http://localhost:8080/webpack-dev-server/来访问页面，并且它可以监测文件的变化并在页面中实时显示出来。现在我们再来试下：启动webpack-dev-server访问http://localhost:8080/webpack-dev-server/修改content.js文件如下：可以看到，页面自动进行了刷新，但是alert的内容却没有变。这说明监测到了文件的变化，但是我们的index.html加载的js文件并没有变。那问题出在哪里？ webpack-dev-server原理webpack-dev-server通过sockjs实现实时变化监测，当文件变化时，服务器就会向客户端发送通知，客户端重新渲染。每次文件变化都会触发webpack-dev-server对文件进行重新编译，但是这个编译后的文件并不会每次都保存到我们的dist目录下，而是存放在内存中，默认情况下，这个文件的路径为当前路径。也就是说，每次文件变化后，内存中的bundle.js做出了实时的变化，而output中配置的文件其实并没有变。也就是说，如果我们在index.html中使用./bundle.js则能够实现页面内容的实时更新。那么，如何配置可以使其支持我们当前的写法./dist/bunlde.js呢？就需要用到publicPath这个属性。 output的publicPath属性webpack-dev-server默认支持文件路径为当前的路径，可以通过在output中配置publicPath属性对其进行更改，如下：123456789101112131415161718192021222324output: &#123; path: path.join( __dirname, &apos;/dist&apos;), publicPath: &apos;/dist/&apos;, filename: &quot;bundle.js&quot;&#125; ``` 这样设置我们就可以通过./dist/bundle.js路径访问到内存中的文件，在当前路径下已经存在同名文件的情况下，webpack-dev-server会优先使用内存中的文件。 至此，我们实现了： 1、使用less编写样式文件 2、将文件打包到指定目录 3、监测文件变化并实时展示 看到，现在我们还是采用的commonJS的规范来实现模块化， 而es6为我们提供了export和import语法来支持模块化，如果想要在项目中使用es6，同样可以通过webpack来配置实现。 ## webpack支持es6使webpack支持es6需要用到babel，它可以帮助我们将es6语法转化为es5的格式，首先，需要安装babel npm install babel-loader babel-core 安装babel-preset npm install babel-preset-es2015 然后，配置webpack.config.js，如下： ```javascript module: &#123; loaders: [ &#123; test: /\.js$/, exclude: /node_modules/, loader: &quot;babel-loader&quot; &#125; ]&#125; 最后还需要加上babel的配置文件，在项目的根目录下创建文件.babelrc{ “presets”: [“es2015”] }这样，我们的webpack就支持通过es6的export和import实现模块化了。修改content.js内容如下：12var content = &apos;it is the origin content from content.js&apos;;export &#123;content&#125;; 修改entry.js内容如下：1234require(&apos;../css/index.less&apos;);import &#123;content&#125; from &apos;./content&apos;;let div = document.getElementById(&apos;main&apos;);div.innerHTML = content; 可以看到，我们现在通过es6的import和export实现js的模块化，打包：$ webpack 结语本篇文章转载于北方雪博客，原文地址]]></content>
      <tags>
        <tag>webpack</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[IntelliJ IDEA中自动压缩js,css文件]]></title>
    <url>%2F2017%2F08%2F09%2FIntelliJ-IDEA%E4%B8%AD%E8%87%AA%E5%8A%A8%E5%8E%8B%E7%BC%A9js-css%E6%96%87%E4%BB%B6%2F</url>
    <content type="text"><![CDATA[最近有个需求，要求使用IntelliJ IDEA编辑器时能够自动压缩js或者是css文件，于是乎就开始了百度、必应、谷歌。。。试了数不清的方法，结果发现还是没有用，最终在几个教程的综合之下加上一些运气，该功能得以实现。写个安装教程，争取别人看后能够一目了然。 使用此功能的前提是： 确保本机以及安装了NodeJS以及npm(具体安装方法不再阐述) intellij idea下以及安装了File Watchers插件(webstorm和intellij idea下如何自动编译sass和scss文件) 安装JavaScript压缩工具(以YUI Compressor为例)1npm i yuicompressor -g 点击：File - Settings - Tools - File Watchers进入相应目录 添加插件目录：值得注意的是在选择工具的安装目录的时候选择yuicompressor.cmd而非yuicompressor新建js文件，将会自动生成 相应文件名.min.js压缩文件 CSS压缩工具同JavaScript工具配置方法类似，可自行去研究使用结语在项目开发过程中，遇到各种各样的问题再正常不过，所幸我们不是一个人在战斗，在互联网这么发达的时代，有千千万万素昧平生的人可以是我们的老师，只要潜心研究，相信一定可以找到解决问题的方式。虽说遇到问题是好事，因为你可以从解决问题的过程中提升自我，当然我也保佑你不要所有的问题都让你遇到，这就过于恶心。还是适中一点较好。]]></content>
      <tags>
        <tag>IDEA</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[px/em/rem的区别]]></title>
    <url>%2F2017%2F08%2F07%2Fpx-em-rem%E7%9A%84%E5%8C%BA%E5%88%AB%2F</url>
    <content type="text"><![CDATA[在移动端布局的过程中使用rem进行布局，一直以来的思路是浏览器监测屏幕宽度的大小，通过计算改变html中不同的font-size的值，来改变rem的相对值，但其实发现对其中的原理并不是很清楚，索性写篇文章做个整理，尽量将三者的关系区分开 有何区别？ px在缩放页面时无法调整哪些使用它作为单位的字体、按钮等的大小 em的值不是固定的，会继承父级元素的字体大小，代表倍数 rem的值并不是固定的，始终是基于根元素的，也代表倍数 emem的使用是相对于其父级元素的大小的，即倍数。浏览器的默认字体高都是16px，未经调整的浏览器显示1em=16px.但是有一个问题，如果设置1.2em则变成19.2px，问题是px表示大小时会忽略掉小数位的(你想象不出来半个像素吧).而且1em=16px的关系并不好转，因此，常常人为的使1em = 10px.这里要借助字体的%来作为桥梁。 因为默认时字体16px = 100%,则有10px = 62.5%。所以首先在body中全局声明font-size=62.5%=10px,也就是定义了网页body默认字体大小为10px。由于em有继承父级元素大小的特性，如果某元素的父级没有设定字体大小，那么它就继承了body默认字体大小1em = 10px; 但是由于em是相对于其父级字体的倍数的，当出现有多重嵌套内容时，使用em分别给他们设置字体的大小往往要重新计算。比如说你在父级元素中声明了字体大小为1.2em,那么在声明子元素的字体大小时设置1em才能和父级元素内容大小一致，而不是1.2em(避免1.2*1.2=1.44em),因为此em非彼em。 example:1234&lt;span&gt;Outer &lt;span&gt;inner&lt;/span&gt; Outer&lt;/span&gt;body&#123;font-size:62.5%;&#125;span&#123;font-size:1.6em;&#125; 结果，外层为body字体10px的1.6倍=16px,内层字体为外层内容字体16px的1.6倍25px(或26px，不同浏览器取舍小数不同)。 明显的，内部内的文字受到了外父级元素的影响。基于这点，在实际中给我们的计算带来了很大的不方便。 remrem的出现再也不用担心还要根据父级元素的font-size计算em的值了，因为它始终是基于根元素()的。 比如默认的html font-size:16px,那么想要设置12px文字就是：12/16 = 0.75rem; 1234html&#123;font-size:62.5%;&#125; (16px -&gt; 100% 1rem -&gt; 10px -&gt; 62.5%)span&#123;font-size:16px;font-size:1.6rem;&#125; 结果：内外的的字体大小均为16px; 想要注意的是，为了兼容不支持rem的浏览器，我们需要在各个使用了rem地方前面写上对应px的值，这样不支持的浏览器可以优雅降级。 最后，选择什么样的字体单位由你的项目来决定，如果你的用户群都使用最新的浏览器，那推荐使用rem，如果要考虑兼容性，那就使用px，或者两者同时使用。]]></content>
      <tags>
        <tag>css3</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java模板引擎FreeMarker]]></title>
    <url>%2F2017%2F08%2F01%2FJava%E6%A8%A1%E6%9D%BF%E5%BC%95%E6%93%8EFreeMarker%2F</url>
    <content type="text"><![CDATA[什么是FreeMarker?FreeMarker是一款模板引擎：即一种基于模板、用来生成输出文本(任何来自于HTML格式的文本用来自动生成源代码)的通用工具。它是为Java程序员提供的一个开发包，或者说是一个类库。他不是面向最终用户的，而是为程序员提供的一款可以嵌入他们所开发铲平的应用程序。 FreeMarker是一款模板引擎FreeMarker不是web框架 FreeMarker官网 前端设计师和程序员的学习侧重点MVC设计(Model、View、Controller)前端设计师侧重于View(模板设计)程序员全面掌握MVC 学习心得：先规划一个范围；再指定一个目标；创建可行性计划；边玩边学 如何开始？Freemarker原理: maven构建FreeMarker项目123Maven构建Spring+Freemarker项目配置文件介绍运行小例：列表展示 Maven构建Spring+Freemarker项目123Eclipse+Maven使用简介Maven依赖Spring和Freemarker的jar包Spring配置文件和Freemarker Servlet配置文件 配置文件介绍：12Spring配置文件applicationContext.xmlSpring Freemarker Servlet配置文件spring-servlet.xml maven构建freemarker项目代码实战使用springboot来进行项目搭建，同时，项目基于javaconfig进行配置。整体目录结构如下：项目POM文件：123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt; &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt; &lt;groupId&gt;com.zccoder&lt;/groupId&gt; &lt;artifactId&gt;myfreemarker&lt;/artifactId&gt; &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt; &lt;parent&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt; &lt;version&gt;1.5.1.RELEASE&lt;/version&gt; &lt;relativePath/&gt; &lt;!-- lookup parent from repository --&gt; &lt;/parent&gt; &lt;properties&gt; &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt; &lt;project.reporting.outputEncoding&gt;UTF-8&lt;/project.reporting.outputEncoding&gt; &lt;java.version&gt;1.8&lt;/java.version&gt; &lt;/properties&gt; &lt;dependencies&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt; &lt;scope&gt;test&lt;/scope&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-freemarker&lt;/artifactId&gt; &lt;/dependency&gt; &lt;!-- 用于数据持久化 --&gt; &lt;!-- &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-data-jpa&lt;/artifactId&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;mysql&lt;/groupId&gt; &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt; &lt;/dependency&gt; --&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-configuration-processor&lt;/artifactId&gt; &lt;optional&gt;true&lt;/optional&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;com.alibaba&lt;/groupId&gt; &lt;artifactId&gt;fastjson&lt;/artifactId&gt; &lt;version&gt;1.2.28&lt;/version&gt;&lt;/dependency&gt; &lt;/dependencies&gt; &lt;build&gt; &lt;plugins&gt; &lt;plugin&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt; &lt;/plugin&gt; &lt;/plugins&gt; &lt;/build&gt;&lt;/project&gt; 配置FreeMarker:123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127package com.myimooc.myfreemarker.config;import java.nio.charset.Charset;import java.util.ArrayList;import java.util.HashMap;import java.util.List;import java.util.Map;import java.util.Properties;import org.springframework.context.annotation.Bean;import org.springframework.context.annotation.ComponentScan;import org.springframework.context.annotation.Configuration;import org.springframework.http.MediaType;import org.springframework.http.converter.HttpMessageConverter;import org.springframework.web.servlet.config.annotation.EnableWebMvc;import org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry;import org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter;import org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer;import org.springframework.web.servlet.view.freemarker.FreeMarkerView;import org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver;import com.alibaba.fastjson.serializer.SerializerFeature;import com.alibaba.fastjson.support.config.FastJsonConfig;import com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter;import com.myimooc.myfreemarker.web.controller.RoleDirectiveModel;/** * Web项目SpringMvc配置 * @author ZhangCheng * @date 2017-03-19 * @version V1.0 */@Configuration@EnableWebMvc@ComponentScan(&quot;com.myimooc.myfreemarker&quot;)public class SpringMvcConfig extends WebMvcConfigurerAdapter&#123; /** * 配置视图解析器 * @return */ @Bean public FreeMarkerViewResolver getFreeMarkerViewResolver()&#123; FreeMarkerViewResolver freeMarkerViewResolver = new FreeMarkerViewResolver(); freeMarkerViewResolver.setOrder(1); freeMarkerViewResolver.setSuffix(&quot;.html&quot;); freeMarkerViewResolver.setCache(false); freeMarkerViewResolver.setRequestContextAttribute(&quot;request&quot;); freeMarkerViewResolver.setContentType(&quot;text/html;charset=utf-8&quot;); freeMarkerViewResolver.setViewClass(FreeMarkerView.class); return freeMarkerViewResolver; &#125; /** * 配置静态资源映射 */ @Override public void addResourceHandlers(ResourceHandlerRegistry registry) &#123; registry.addResourceHandler(&quot;/static/**&quot;).addResourceLocations(&quot;classpath:/static/&quot;); &#125; /** * 配置FASTJSON * @return */ @Bean public FastJsonHttpMessageConverter fastJsonHttpMessageConverters() &#123; FastJsonHttpMessageConverter fastConverter = new FastJsonHttpMessageConverter(); FastJsonConfig fastJsonConfig = new FastJsonConfig(); fastJsonConfig.setSerializerFeatures(SerializerFeature.QuoteFieldNames); fastJsonConfig.setCharset(Charset.forName(&quot;UTF-8&quot;)); fastJsonConfig.setDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;); List&lt;MediaType&gt; supportedMediaTypes = new ArrayList&lt;MediaType&gt;(); supportedMediaTypes.add(MediaType.APPLICATION_JSON_UTF8); fastConverter.setSupportedMediaTypes(supportedMediaTypes); fastConverter.setFastJsonConfig(fastJsonConfig); return fastConverter; &#125; /** * 配置FreeMarker * @return */ @Bean public FreeMarkerConfigurer getFreeMarkerConfigurer()&#123; FreeMarkerConfigurer freeMarkerConfigurer = new FreeMarkerConfigurer(); freeMarkerConfigurer.setDefaultEncoding(&quot;UTF-8&quot;); freeMarkerConfigurer.setTemplateLoaderPath(&quot;classpath:/templates/&quot;); Properties settings = new Properties(); settings.setProperty(&quot;template_update_delay&quot;, &quot;5&quot;); settings.setProperty(&quot;url_escaping_charset&quot;, &quot;UTF-8&quot;); settings.setProperty(&quot;defaultEncoding&quot;, &quot;UTF-8&quot;); settings.setProperty(&quot;whitespace_stripping&quot;, &quot;true&quot;); settings.setProperty(&quot;boolean_format&quot;, &quot;true,false&quot;); settings.setProperty(&quot;number_format&quot;, &quot;0.##########&quot;); settings.setProperty(&quot;locale&quot;, &quot;zh_CN&quot;); settings.setProperty(&quot;datetime_format&quot;, &quot;yyyy-MM-dd HH:mm:ss&quot;); settings.setProperty(&quot;date_format&quot;, &quot;yyyy-MM-dd&quot;); settings.setProperty(&quot;time_format&quot;, &quot;HH:mm:ss&quot;); settings.setProperty(&quot;tag_syntax&quot;, &quot;square_bracket&quot;); settings.setProperty(&quot;classic_compatible&quot;, &quot;true&quot;); settings.setProperty(&quot;template_exception_handler&quot;, &quot;ignore&quot;); settings.setProperty(&quot;auto_import&quot;, &quot;/spring.ftl as spring, /common/spring.ftl as spring&quot;); freeMarkerConfigurer.setFreemarkerSettings(settings); // 配置自定义指令 Map&lt;String,Object&gt; variables = new HashMap&lt;String,Object&gt;(); variables.put(&quot;role&quot;, new RoleDirectiveModel()); freeMarkerConfigurer.setFreemarkerVariables(variables); return freeMarkerConfigurer; &#125; /** * 配置JSON解析器 */ @Override public void configureMessageConverters(List&lt;HttpMessageConverter&lt;?&gt;&gt; converters) &#123; super.configureMessageConverters(converters); converters.add(this.fastJsonHttpMessageConverters()); &#125;&#125; 配置Web,类似于web.xml12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152package com.myimooc.myfreemarker.config;import java.util.EnumSet;import javax.servlet.DispatcherType;import javax.servlet.FilterRegistration;import javax.servlet.ServletContext;import javax.servlet.ServletException;import javax.servlet.ServletRegistration;import org.springframework.context.annotation.Configuration;import org.springframework.web.WebApplicationInitializer;import org.springframework.web.context.support.AnnotationConfigWebApplicationContext;import org.springframework.web.filter.CharacterEncodingFilter;import org.springframework.web.servlet.DispatcherServlet;/** * Web项目启动类 * * @author ZhangCheng * @date 2017-03-19 * @version V1.0 * */@Configurationpublic class WebConfig implements WebApplicationInitializer &#123; @Override public void onStartup(ServletContext servletContext) throws ServletException &#123; AnnotationConfigWebApplicationContext context = new AnnotationConfigWebApplicationContext(); context.register(SpringMvcConfig.class); // 新建WebApplication，注册配置类，并将其和当前servletContext关联。 context.setServletContext(servletContext); // 注册SpringMVC的DispatcherServlet。 ServletRegistration.Dynamic servlet = servletContext.addServlet(&quot;dispatcher&quot;, new DispatcherServlet(context)); servlet.addMapping(&quot;/&quot;); servlet.setLoadOnStartup(1); // 注册SpringMVC的字符过滤器 FilterRegistration.Dynamic encodingFilter = servletContext.addFilter(&quot;encoding&quot;, new CharacterEncodingFilter()); EnumSet&lt;DispatcherType&gt; dispatcherTypes = EnumSet.allOf(DispatcherType.class); dispatcherTypes.add(DispatcherType.REQUEST); dispatcherTypes.add(DispatcherType.FORWARD); encodingFilter.addMappingForUrlPatterns(dispatcherTypes, true, &quot;*&quot;); encodingFilter.setInitParameter(&quot;encoding&quot;, &quot;UTF-8&quot;); &#125;&#125; 新建模板页面边写控制器启动项目： 小例子：列表demo展示 编写控制器：编写FreeMarker:1234567891011121314151617&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;meta charset=&quot;UTF-8&quot;&gt;&lt;title&gt;Insert title here&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;h1&gt;$&#123;username&#125;&lt;/h1&gt;&lt;ul&gt; [#list userList as item] &lt;li&gt;$&#123;item.name&#125;的生日是：$&#123;item.birthday?string(&apos;yyyy-MM-dd&apos;)&#125;&lt;/li&gt; [/#list]&lt;/ul&gt;&lt;/body&gt;&lt;/html&gt; 效果如下： 补充：springboot集成FreeMarker输入网址： start.spring.io 基础技能FreeMarker取值章节简介本节要点：123Java中常用的数据模型取值（插值）指令逻辑指令：if、switch Java数据模型、freemarker取值Java中常用的数据模型123基本类型数据（比如integer）封装的对象类型(比如User对象)集合类型：List、Map 取值指令123456常用$&#123;var&#125;语法进行取值对null、不存在对象取值$&#123;var!&#125;对包装对象的值，通过“点”语法：$&#123;User.name&#125;取值的时候进行计算、赋值Date类型格式$&#123;date?string(&apos;yyyy-MM-dd&apos;)&#125;如何转义HTML内容：$&#123;var?html&#125; FreeMarker取java基本数据模型的值控制器页面层效果图 boolean类型值的format布尔值：${booleanVar?string(‘yes’,’no’)} date类型值的format日期：${dateVar?string(‘yyyy-MM-dd’)} null或者不存在的变量取值null:${nullVar!’我是默认值’}missing:${ssssVar!’我是默认值’} 技能进阶变量的定义、赋值、运算边写代码：12345678&lt;h2&gt;2.赋值运算&lt;/h2&gt;&lt;ul&gt; &lt;li&gt;赋值&amp;运算&lt;/li&gt; [#assign a=100] a = $&#123;a&#125; &lt;br/&gt; a+100=$&#123;a+100&#125;&lt;/ul&gt; 效果如下： 自定义对象User变量的取值1234567&lt;h2&gt;3.封装类型&lt;/h2&gt;&lt;ul&gt; &lt;li&gt;对象&lt;/li&gt; $&#123;(userObj.name)!&quot;默认值&quot;&#125; &lt;li&gt;富文本&lt;/li&gt; $&#123;(briefVar)!?html&#125;&lt;/ul&gt; 集合List的遍历语法：123[#list listName as item] &lt;font color=&quot;red&quot;&gt;$&#123;item!&#125;&lt;/font&gt;&lt;br/&gt;[/#list] 集合Map的遍历语法：123[#list map?keys as key] &lt;font color=&quot;red&quot;&gt;$&#123;key&#125;:$&#123;map[key]!&#125;&lt;/font&gt;&lt;br/&gt;[/#list] if语法语法：1234567&lt;li&gt;if else&lt;/li&gt;[#assign var = 100/][#if var == 99] &lt;font color=&quot;red&quot;&gt;var = 99&lt;/font&gt;&lt;br/&gt;[#else] &lt;font color=&quot;red&quot;&gt;var != 99&lt;/font&gt;&lt;br/&gt;[/#if] 判断某个对象或值是否存在12345[#if myList?exists][/#if]或[#if myList??][/#if] switch语法语法：12345678910111213&lt;li&gt;switch case break default&lt;/li&gt;[#assign var3 = 10 /][#switch var3][#case 10] 10&lt;br/&gt; [#break][#case 100] 100&lt;br/&gt; [#break][#default] other[/#switch] 高级技巧自定义函数介绍补充表达式指令：12+ ：字符串连接，集合连接[index]:下标取值 自定义函数12自定义排序函数实现templateMethodModelEx接口 自定义接口1实现TemplateDirectiveModel接口 string基本操作指令代码：12345678910111213141516171819202122232425262728&lt;h2&gt;6.字符操作&lt;/h2&gt;&lt;ul&gt; &lt;li&gt;字符串常用内建函数-连接&lt;/li&gt; [#assign stra=&apos;hello&apos;/] [#assign strb=&apos;world&apos;/] &lt;font color=&quot;red&quot;&gt;$&#123;stra + strb&#125;&lt;/font&gt;&lt;br/&gt; &lt;li&gt;字符串常用内建函数-截取&lt;/li&gt; &lt;font color=&quot;red&quot;&gt;$&#123;(stra + strb)?substring(5,8)&#125;&lt;/font&gt;&lt;br/&gt; &lt;li&gt;字符串常用内建函数-长度&lt;/li&gt; &lt;font color=&quot;red&quot;&gt;$&#123;(stra + strb)?length&#125;&lt;/font&gt;&lt;br/&gt; &lt;li&gt;字符串常用内建函数-大写&lt;/li&gt; &lt;font color=&quot;red&quot;&gt;$&#123;(stra + strb)?upper_case&#125;&lt;/font&gt;&lt;br/&gt; &lt;li&gt;字符串常用内建函数-小写&lt;/li&gt; &lt;font color=&quot;red&quot;&gt;$&#123;(stra + strb)?lower_case&#125;&lt;/font&gt;&lt;br/&gt; &lt;li&gt;字符串常用内建函数-index_of&lt;/li&gt; &lt;font color=&quot;red&quot;&gt;$&#123;(stra + strb)?index_of(&apos;w&apos;)&#125;&lt;/font&gt;&lt;br/&gt; &lt;li&gt;字符串常用内建函数-last_index_of&lt;/li&gt; &lt;font color=&quot;red&quot;&gt;$&#123;(stra + strb)?last_index_of(&apos;o&apos;)&#125;&lt;/font&gt;&lt;br/&gt; &lt;li&gt;字符串常用内建函数-replace&lt;/li&gt; &lt;font color=&quot;red&quot;&gt;$&#123;(stra + strb)?replace(&apos;o&apos;,&apos;xx&apos;)&#125;&lt;/font&gt;&lt;br/&gt;&lt;/ul&gt; 效果图： 自定义函数步骤一：边写自定义函数类 步骤二：再返回的控制器里面，添加自定义函数类，并指定方法名 步骤三：在页面使用排序方法1234567891011&lt;li&gt;整数排序sort_int&lt;/li&gt;[#assign mylistinfo=[2,3,4,1,5,6,9]/]&lt;li&gt;未排序&lt;/li&gt;&lt;#list mylistinfo as item&gt; $&#123;item&#125;&lt;/#list&gt;[#assign mylistinfo=[2,3,4,1,5,6,9]/]&lt;li&gt;排序&lt;/li&gt;&lt;#list sort_int(mylistinfo) as item&gt; $&#123;item&#125;&lt;/#list&gt; 步骤四：验证输出 list排序内建函数、常用指令使用内建函数进行排序，item_index为下标，默认为升序123&lt;#list mylistinfo?sort as item&gt; $&#123;item_index&#125;:$&#123;item&#125;&lt;/#list&gt; 使用内建函数进行排序，降序123&lt;#list mylistinfo?sort?reverse as item&gt; $&#123;item_index&#125;:$&#123;item&#125;&lt;/#list&gt; 其它常用内建函数1234&lt;li&gt;List长度&lt;/li&gt;$&#123;mylistinfo?size&#125;&lt;li&gt;List下标取值&lt;/li&gt;$&#123;mylistinfo[3]&#125; 效果图： 自定义指令页面使用自定义指令123456789101112&lt;h2&gt;8.自定义指令&lt;/h2&gt;&lt;ul&gt; &lt;li&gt;用户123456是否拥有admin角色，并且返回admin权限&lt;/li&gt; [@role user=&apos;123456&apos; role=&apos;admin&apos;;result1,result2] [#if result1] 我的角色是&lt;font color=&quot;red&quot;&gt;admin&lt;/font&gt; [/#if] &lt;#list result2 as item&gt; $&#123;item&#125; &lt;/#list&gt; [/@role]&lt;/ul&gt; 验证输出： FreeMarker内建函数代码1234567891011121314151617181920212223242526272829303132333435363738&lt;h1&gt;freemarker内建函数&lt;/h1&gt; &lt;h2&gt;1.字符串内建函数&lt;/h2&gt; &lt;ul&gt; &lt;#list &quot;a|b|c|d&quot;?split(&quot;|&quot;) as item&gt; &lt;li&gt;$&#123;item&#125;&lt;/li&gt; &lt;/#list&gt; &lt;!-- 字符串转日期 --&gt; [#assign var1=&quot;01/03/2017&quot;?date(&quot;MM/dd/yyyy&quot;)] [#assign var2=&quot;23:45:30&quot;?time(&quot;HH:mm:ss&quot;)] [#assign var2=&quot;2016-12-31 03:05 PM&quot;?datetime(&quot;yyyy-MM-dd hh:mm&quot;)] &lt;li&gt;$&#123;var1&#125;&lt;/li&gt; &lt;li&gt;$&#123;var2&#125;&lt;/li&gt; &lt;li&gt;$&#123;var3&#125;&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;2.数字类型内建函数&lt;/h2&gt; &lt;ul&gt; [#assign numVar1 = 314.46565/] &lt;li&gt;$&#123;numVar1?string(&quot;0.##&quot;)&#125;&lt;/li&gt; &lt;li&gt;$&#123;numVar1?round&#125;&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;3.list内建函数&lt;/h2&gt; &lt;ul&gt; [#assign listVar1 = [1,2,3,4,54,57,87,96]/] &lt;li&gt;$&#123;listVar1?chunk(4)?size&#125;&lt;/li&gt; &lt;#list listVar1?chunk(4)?last as item&gt; &lt;li&gt;$&#123;item&#125;&lt;/li&gt; &lt;/#list&gt; &lt;/ul&gt; &lt;h2&gt;4.其它内建函数&lt;/h2&gt; &lt;ul&gt; [#assign sVar1 = &apos;hello&apos;/] &lt;li&gt;$&#123;sVar1?is_number?string(&apos;yes&apos;,&apos;no&apos;)&#125;&lt;/li&gt; &lt;li&gt;$&#123;sVar1?has_content?string(&apos;yes&apos;,&apos;no&apos;)&#125;&lt;/li&gt; &lt;li&gt;$&#123;sVar2!&quot;ss&quot;&#125;&lt;/li&gt; &lt;li&gt;$&#123;(&quot;1+2&quot;)?eval&#125;&lt;/li&gt; &lt;li&gt;$&#123;&quot;1&quot;+&quot;2&quot;?is_string?string(&apos;yes&apos;,&apos;no&apos;)&#125;&lt;/li&gt; &lt;/ul&gt; 效果图如下： macro、function指令macro、nested、return 123macro语法[@macro_name param /] 调用macronested语法 总结]]></content>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Flex布局语法及示例]]></title>
    <url>%2F2017%2F07%2F29%2FFlex%E5%B8%83%E5%B1%80%E8%AF%AD%E6%B3%95%E5%8F%8A%E7%A4%BA%E4%BE%8B%2F</url>
    <content type="text"><![CDATA[背景网页布局(layout)是css的一个重要应用布局的传统解决方案，基于盒装模型，依赖display+position+float属性。对于特殊布局，如垂直居中就不容易实现。 发展2009年，W3C提出了一种新的方案—Flex布局，可以简便、完整、响应式地实现各种页面布局。目前，它已经得到了所有浏览器的支持，这意味着，我们可以安全的使用这项功能。flex布局将成为未来布局的首选方案，flex布局示例请参考: Flex布局示例 语法Flex布局是什么？Flex是 Flexible Box的缩写，意为“弹性布局”，用来为盒装模型提供最大的灵活性。任何一个容器都可以指定为Flex布局123.box&#123; display:flex;&#125; 行内元素也可以使用flex布局123.box&#123; display:inline-block;&#125; Webkit内核的浏览器，必须加上-webkit前缀1234.box&#123; display:-webkit-flex; /* Safari */ display:flex;&#125; 注意：设为Flex布局之后，子元素的float、clear和vertical-align属性将消失 基本概念采用Flex布局的元素，称为Flex容器(flex container)，简称“容器”。它的所有子元素自动成为容器成员，称为Flex项目(flex item),简称”项目”。容器默认存在两根轴：水平的主轴(main axis)和垂直的交叉轴(cross axis)。主轴的开始位置（与边框的交叉点）叫做main start，结束位置叫做 main end；交叉轴的开始位置叫做 cross start，交叉轴的结束位置叫做 cross end。项目默认沿主轴排列。单个项目占据的主轴空间叫main size，占据的交叉轴空间叫做cross size。 容器的属性6个属性设置在容器上 flex-direction（决定主轴的方向 即项目的排列方向） flex-wrap（项目如果在一条轴线上排不下将如何换行） flex-flow（flex-direction和flex-wrap的简写形式） justify-content（项目在主轴上的对齐方式） align-items（项目在交叉轴上的对齐方式） align-content（定义了多根轴线的对齐方式） flex-direction属性flex-direction属性决定主轴的方向(即项目的排列方向)123.box&#123; flex-direction:row | row-reverse | column | column-reverse;&#125; 它有四个值： row(默认值)：主轴为水平方向，起点在左端 row-reverse: 主轴为水平方向，起点在右端 column: 主轴为垂直方向，起点在上端 column-reverse: 主轴为垂直方向，起点在下端 flex-wrap属性默认情况下，项目都排列在一条轴线上，flex-wrap属性定义，如果一条轴线排不下，如何换行。123.box&#123; flex-wrap: nowrap | wrap | wrap-reverse;&#125; 它取三个值： nowrap(默认值)：不换行 wrap：换行，第一行在上方 wrap-reverse：换行，第一行在下方 flex-flow属性flex-flow属性是flex-direction和flex-wrap属性的简写形式，默认值为row nowrap123.box&#123; flew-flow: &lt;flex-direction&gt; || &lt;flex-wrap&gt;;&#125; justify-content属性justify-content属性定义了项目在主轴上的对齐方式。123.box&#123; justify-content: flex-start | flex-end | center | space-between | space-around;&#125; 它有5个值，具体对齐方式与轴的方向有关。（假设主轴为从左向右） flex-start(默认值)：左对齐 flex-end：右对齐 center：居中 space-between：两端对齐，项目之间的间隔都相等 space-around：每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍。 align-items属性align-items属性定义了项目在交叉轴上如何对齐123.box&#123; align-items: flex-start | flex-end | center | baseline | stretch;&#125; 它可能取5个值。具体对齐方式与交叉轴的方向有关，假设交叉轴从上到下 flex-start：交叉轴的起点对齐 flex-end：交叉轴的终点对齐 center：交叉轴的中点对齐 baseline：项目的第一行文字的基线对齐 stretch(默认值)：如果项目为设高度或设为auto，将占满整个容器的高度。 align-content属性align-content属性定义了多根轴线的对齐方式。如果项目只有一根属性，则该属性不起作用。123.box&#123; align-content: flex-start | flex-end | center | space-between | space-around | stretch;&#125; 该属性可取6个值： flex-start：与交叉轴的起点对齐 flex-end：与交叉轴的终点对齐 center：与交叉轴的中点对齐 space-between：与交叉轴两端对齐，轴线之间的间隔平均分布 space-around：每根轴线两侧的间隔都相等。所以，轴线之间的间隔比轴线与边框的间隔大一倍 stretch(默认值)：轴线占满整个交叉轴 order属性order属性定义项目的排列顺序。数值越小，排列越靠前，默认为0123.item&#123; order:&lt;integer&gt;;&#125; flex-grow属性flex-grow属性定义项目的放大比例，默认为0，即如果存在剩余空间，也不放大。123.item&#123; flex-grow:&lt;number&gt;; /*default 0*/&#125; 如果所有的flex-grow属性值都为1，则它们将等分剩余空间（如果有的话）。如果一个项目的flex-grow属性为2，其他项目都为1，则前者占据的剩余空间将比其他项多一倍。 flex-shrink属性flex-shrink属性定义了项目的缩小比例，默认为1，即如果空间不足，该项目将缩小123.item&#123; flex-shrink:&lt;number&gt;; /*default 1*/&#125; 如果所有项目的flex-shrink属性都为1，当空间不足时，都将等比例缩小。如果一个项目的flex-shrink属性值为0，其他项目都为1，则空间不足时，前者不缩小。负值对该属性无效。 flex-basis属性flex-basis属性定义了在分配多余空间之前，项目占据的主轴空间(main size)。浏览器根据这个属性，计算主轴是否有多余空间。它的默认值为 auto，即项目的本来大小。123.item&#123; flex-basis:&lt;length&gt; | auto; /*default auto*/&#125; 它可以设为跟width或height一样的值（比如350px）,则项目将占据固定空间。 flex属性flex属性是flex-grow,flex-shrink和 flex-basis的简写，默认值为0 1 auto。后两个属性可选。123.item&#123; flex: none | [ &lt;&apos;flex-grow&apos;&gt; &lt;&apos;flex-shrink&apos;&gt;? || &lt;&apos;flex-basis&apos;&gt; ]&#125; 该属性有两个快捷值：auto(1 1 auto)和none(0 0 auto)。建议优先使用这个属性，而不是单独写三个分离的属性，因为浏览器会推算相关值。 align-self属性align-self允许单个项目有与其他项目不一样的对齐方式，可覆盖align-items属性。默认值为auto，表示继承父元素的align-items属性，如果没有父元素，则等同于stretch。123.item&#123; align-self:auto | flex-start | flex-end | center | baseline | stretch;&#125; 该属性可取6个值，除了auto,其他都与align-items属性值完全一致。 The end!practice more]]></content>
      <tags>
        <tag>flex</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Webpack简介与使用]]></title>
    <url>%2F2017%2F07%2F27%2FWebpack%E7%AE%80%E4%BB%8B%E4%B8%8E%E4%BD%BF%E7%94%A8%2F</url>
    <content type="text"><![CDATA[前言CommonJS和AMD事用于JavaScript模块管理的两大规范，前者定义的是模块的同步加载，主要用于NodeJS;而后者则是异步加载，通过RequireJS等工具适用于前端。随着npm成为主流的JavaScript组件发布平台，越来越多的前端项目也依赖于npm上的项目，或者自身就会发布到npm平台。因此，让前端项目更方便的使用npm上的资源成为一大需求。 Webpack介绍webpack是一个module bundle（模块打包工具），在webpack里，所有类型的文件都可以是模块，包括我们最常见的JavaScript、及CSS文件、图片、json文件等等。通过webpack的各种加载器，可以更高效的管理这些文件，官方介绍如下： Webpack和Gulp的区别 Gulp出现的比较早，更适合于做任务型的，可以处理任何的网站静态网站、SPA、Node.js项目代码，Gulp里面就是一堆的任务；Webpack一般全部用来处理SPA应用，就React、Vue.js、AngularJS使用 Webpack官方文档官方地址：https://webpack.js.org/concepts/ Webpack的优势 对CommonJS、AMD、ES6的语法做了兼容 对js、CSS、图片等资源文件都支持打包 串联式模块加载器以及插件机制，让其具有更好的灵活性和扩展性，例如提供对CoffeeScript、ES6的支持有独立的配置文件webpack.config.js可以将代码切割成不同的chunk，实现按需加载，降低了初始化时间，等 Webpack的使用新建项目在项目的根目录下运行：npm init -ysrc目录是项目的开发文件，dist是打包后的文件 安装123npm install webpack -g //全局安装npm install webpack -save-dev //在当前目录下安装npm install react -save //安装react项目 配置文件 webpack.config.js 12345678910111213//webpack的开发配置文件//边写配置文件，要有最基本的文件入口和输出文件配置信息//还可添加loader和各种插件配置使用var path=require(&apos;path&apos;);module.exports = &#123; //单页面的SPA的入口文件 entry:path.resolve(__dirname,&apos;src/js/app.js&apos;), //构建之后的文件输出位置配置 output:&#123; path: path.resolve(__dirname,&apos;dist&apos;), filename: &apos;bundle.js&apos; &#125;&#125;; 运行webpack --config webpack.config.js Webpack实现启动的更好方式我们可以通过设置webpack-dev-server来设置启动Webpack除了提供模块打包功能，还提供了一个基于Node.js Express框架的开发服务器，它是一个静态资源Web服务器，对于简单静态页面或者仅依赖于独立服务器的前端页面，都可以直接使用这个开发服务器进行开发。在开发过程中，开发服务器会监听每一个文件的变化，进行实时打包，并且可以推送通知前端页面代码发生了变化，从而可以实现页面的自动刷新。 更好的方式实现自动启动，webpack官方提供了一个第三个插件，自动监听代码变化，帮我们重新构建，把webpack和express封装了 npm install webpack-dev-server -save-dev 调整npm的package.json script部分中开发命令的配置12345&quot;scripts&quot;: &#123; &quot;test&quot;: &quot;echo \&quot;Error: no test specified\&quot; &amp;&amp; exit 1&quot;, &quot;develop&quot;: &quot;webpack-dev-server --config webpack.config.js --devtool eval --progress --colors --hot --content-base src&quot;, &quot;publish&quot;: &quot;webpack --config webpack.publish.config.js&quot; &#125; webpack-dev-server 在localhost:8080建立一个Web服务器–devtool eval 为你的代码创建源地址。当有任何报错的时候可以让你更加精确地定位到文件和行号–progress显示合并代码进度–colors –hot,命令行中显示颜色！–content-base指向设置的输出目录 在demo目录下新家一个index.html文件，文件目录结构如图所示： 1234567891011&lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;webpack 使用&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=&quot;app&quot;&gt;&lt;/div&gt; &lt;/body&gt; &lt;script src=&quot;/dist/bundle.js&quot;&gt;&lt;/script&gt; &lt;/html&gt; 执行npm run develop将会启动监听，并在8080端口开启一个服务器 如果修改了app.js文件，会自动执行构建，刷新浏览器会发生变化 总的来说，当你运行npm run develop的时候，会启动一个Web服务器，然后监听文件修改，然后自动重新合并你的代码。 Webpack常用加载器Loader：这是webpack准备的一些预处理工具在构建项目之前做一些预处理操作，比如ES6转ES5，Sass、Less 编译JSX和ES6到ES5语法的加载器安装：12npm install babel-loader --save-devnpm install babel-core babel-preset-es2015 babel-preset-react --save-dev babel-loader:转换器，编译JSX语法和ES6语法到ES5语法修改开发配置环境：webpack.config.js1234567891011module: &#123; loaders: [ &#123; test: /\.jsx?$/, // 用正则来匹配文件路径，这段意思是匹配 js 或者 jsx loader: &apos;babel&apos;, // 加载模块 &quot;babel&quot; 是 &quot;babel-loader&quot; 的缩写 query: &#123; presets: [&apos;es2015&apos;, &apos;react&apos;] &#125; &#125; ] &#125; 加载CSSwebpack允许像加载任何代码一样加载css。可以选择需要的方式，但是可以为每个组件把所有CSS加载到入口主文件中来做任何事情加载CSS需要css-loader和style-loader，他们做不同的两件事情 css-loader会遍历css文件，然后找到url()表达式然后处理他们，style-loader会把原来的CSS代码插入页面中的一个style标签中 安装 npm install css-loader style-loader --save-dev修改配置文件：12345// 可以在 js 中引用 css 的加载器&#123; test: /\.css$/, loader: &apos;style!css&apos; // 如果同时使用多个加载器，中间用 ! 连接，加载器的执行顺序是从右向左&#125; !用来定义loader的串联关系，”-loader”可以省略不写，多个loader之间用”!”连接起来 加载Sass下载依赖 npm install sass-loader -save-dev修改配置文件：12345// 可以在 js 中引用 sass 的加载器&#123; test: /\.scss$/, loader: &apos;style!css!sass&apos;&#125; 安装sass-loader之后运行 npm run develop时报错解决方式：npm install node-sass -save-dev 图片处理下载依赖 npm install url-loader file-loader --save-dev修改配置文件：123456789&#123; test: /\.(png|jpg|gif|jpeg)$/, loader: &apos;url?limit=25000&apos; &#125;, // 处理字体 &#123; test: /\.(eot|woff|ttf|woff2|svg)$/, loader: &apos;url?limit=25000&apos; &#125; 加载器会把需要转换的路径变成BASE64字符串，把CSS中的”url()”像其他require或者import来处理.意味着我们可以通过它来处理我们的图片文件。url-loader传入的limit参数是告诉它图片如果不大于25KB的话要自动在它从属的css文件中转成BASE64字符串]]></content>
      <tags>
        <tag>webpack</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[front-end developers interview]]></title>
    <url>%2F2017%2F07%2F24%2Ffront-end-developers-interview%2F</url>
    <content type="text"><![CDATA[1.CSS盒模型包含哪些元素:content(内容) 、padding(填充) 、border(边框) 、margin(边界) 2.写出你知道的清除浮动的方法方法一：使用带有clear属性的空元素12345在浮动元素后添加一个空元素如&lt;div class=&quot;clear&quot;&gt;&lt;/div&gt;.clear&#123; clear:both;&#125;亦可使用&lt;hr class=&quot;clear&quot;/&gt;或&lt;br class=&quot;clear&quot;/&gt;来清理 方法二：使用CSS的:after伪元素1234567891011&lt;div class=&quot;container clearfix&quot;&gt;&lt;/div&gt;.clearfix:after&#123; content:&quot;&quot;; display:block; height:0; clear:both;&#125;为了考虑到IE6/IE7浏览器，可以给clearfix添加zoom:1;.clearfix&#123; zoom:1;&#125; 方法三：使用css的overflow:hidden;属性进行处理给浮动元素的容器添加overflow:hidden;或overflow:auto;可以怪异清理浮动1234567891011&lt;div class=&quot;container&quot;&gt; &lt;div class=&quot;floatleft&quot;&gt;&lt;/div&gt; &lt;div class=&quot;floatright&quot;&gt;&lt;/div&gt;&lt;/div&gt;.container&#123; overflow:hidden;&#125;.container&#123; overflow:auto;&#125; 方法四：给浮动元素的容器添加浮动给浮动元素的容器添加浮动属性即可清理内部浮动,使用方便但是会对文档造成影响1234567&lt;ul class=&quot;menu&quot;&gt; &lt;li class=&quot;floatleft&quot;&gt;&lt;/li&gt; &lt;li class=&quot;floatright&quot;&gt;&lt;/li&gt;&lt;/ul&gt;.menu&#123; float:left;&#125; 方法五：使用邻接元素清理给浮动元素后边的元素添加clear属性12345678&lt;div class=&quot;container&quot;&gt; &lt;div class=&quot;floatleft&quot;&gt; &lt;div class=&quot;floatright&quot;&gt; &lt;div class=&quot;content&quot;&gt;&lt;/div&gt;&lt;/div&gt;.content&#123; clear:both;&#125; 确保的是content元素和floatleft、floatright元素在同一个父元素内方法六：使用display:table使用display:table模拟表格布局也可解决浮动问题，并可以自动对齐高度。但是table存在一系列问题，建议不使用。 3.CSS选择器的优先级!important &gt; 行内样式 &gt; 后代、交叉 &gt; ID &gt; class &gt; 标签选择器 &gt; * &gt;浏览器预定义样式 &gt; 继承样式 4.让子块元素相对于父元素居中1234567891011121314&lt;div class=&quot;parent&quot;&gt; &lt;div class=&quot;child&quot;&gt;&lt;/div&gt;&lt;/div&gt;方法一：.parent&#123; text-align:center;&#125;.child&#123; display:inline-block;&#125;方法二：.child&#123; margin:0 auto;&#125; 5.说下opacity:0,visibility:hidden,display:none的区别opacity:0;该元素被隐藏起来了，但不会改变页面布局，并且，如果该元素已经绑定了一些事件，如click事件，那么点击该区域，也能触发点击事件的.visibility:hidden;该元素被隐藏起来了，但是不会改变页面布局，但是不会触发该元素已经绑定的事件display:none;把元素隐藏起来，并且会改变页面布局，可以理解成在页面中把该元素删掉一样 6.微信HTML5页面制作1.H5页面正规流程下需要用什么软件制作（不要网上那种几张图片摆摆自动生成的）首先需要澄清一下，H5页面，全称HTML5页面，指的其实是充分利用HTML5技术的网页。而网页，归根其实就是资源＋CSS＋HTML5+JAVASCRIPT代码，涉及到服务端请求的，还需要后端的支持，因此制作丰富精美的HTML5页面，如果细化一下你所说的正规流程：－文案出策划案与线框图。（笔、Balsamiq Mockup）－设计师出高保真原型（PSD、Sketch、Axure）。－程序（前端后端撰写JavaScript／CSS／HTML代码，后端代码PHP、Node.JS等）其实你提到的网上生成的最终只是把这些步骤通过页面自动帮你实现了，生成的代码页是这些。2.需要用到哪些技术（比如哪些程序语言）前端表现效果：HTML、CSS、JAVASCRIPT后端实现：PHP、Node.JS等。3.微信里的一些特殊的动态效果，比如摇一摇、倾斜手机、举起手机是怎样实现的有些是微信特有的，有些是浏览器本身就支持的。这些其实取决于微信特定的功能开放清单，有些可以做有些不可以做，只要程序根据微信的开放API文档即可实现，文档在这里。微信公众平台开发概述微信提供的JS－SDK工具4.H5页面怎样发布到微信上H5页面其实就是个链接，你可以通过直接将该链接发送给好友、朋友圈、嵌入公众号、嵌入公众号图文也可以通过生成二维码来让用户通过识别二维码来查看链接。草料二维码生成器5.有什么相关参考资料其实对于常见的HTML5工具，取决于你所要制作的形式，对于常见互动展示类，易企秀、MAKA其实足矣，功能非常强大，模版也很丰富。如果你需要的更多互动，甚至游戏类，可以推荐采用24好玩平台。 7.定义函数的方式有哪些，可以写下区别是什么？函数的声明方式：A.基本语法1234function 函数名([参数1],[参数2],...)&#123; 函数体 [return] //返回值&#125; B.字面量定义的形式(匿名函数)1234var 变量=function([参数1],[参数2],...)&#123; 函数体 [return] //返回值&#125; C.以对象的形式来声明12new 关键字var 变量=new function([],[]...,&quot;函数体&quot;); 8.写出正则表达式，用于匹配字符串至少包含五个连续的中文字，例如 中国人ss中国(注：UTF-8格式中文正则字符编码范围：\u4e00-\u9fa5)123456var str=&quot;中国人ss中国&quot;;var reg=/\w/g; 或者var reg=/[a-z]/g; 或者var reg=/[^\u4e00-\u9fa5]/g;var arr=str.replace(reg,&quot;&quot;);console.log(arr);输出结果：‘中国人中国’ 9.jquery中的hover事件等效于哪两个事件的组成?移入移出事件 onmouseover、onmouseout1234567891011&lt;div class=&quot;container&quot;&gt; &lt;div class=&quot;box&quot;&gt;&lt;/div&gt;&lt;/div&gt;//鼠标移入移出效果&lt;script src=&quot;https://code.jquery.com/jquery-2.2.4.js&quot;&gt;$(&apos;.container&apos;).hover(function()&#123; $(this).children().fadeOut(1000); $(this).children().fadeIn(500);&#125;)&lt;/script&gt; 10.JS中哪些情况下会产生undefined值？有许多的方法产生一个undefined值的代码。它通常为当试图访问一个不存在的值时。1.任何变量声明时没有提供一个初始值，就会返回undefined12var foo;console.log(foo); //默认值为undefined 2.当试图访问一个不存在的对象属性或数组项时，返回undefined1234var array = [1, 2, 3];var foo = array.foo; // foo 属性不存在, 返回 undefinedvar item = array[5]; // 数组中没有索引为5的项，返回 undefinedconsole.log(foo,item); 3.如果省略了函数的返回语句，就会返回undefined1var value = (function()&#123;&#125;)(); // 返回 undefined 4.函数调用时提供的参数值为undefined123(function(undefined)&#123; // 参数是 undefined&#125;)(); 11.获取一个数组中的最大最小值，var numbers=[5,145,11,38,400,78,-834];123456789101112var numbers=[5,145,11,38,400,78,834];var max=numbers[0];for(var i=0;i&lt;numbers.length-1;i++)&#123; if(max&lt;numbers[i+1])&#123; max=numbers[i+1]; &#125;else&#123; max=max; &#125;&#125;console.log(max);输出结果&apos;400&apos; 12.数组有哪些自带的方法或属性var arr=[0,1,2];1.pop();删除数组的最后一个元素，减少删除的长度，返回删除的值。这里是22.push(3);将参数加载到数组的最后，返回新数组的长度。这里是43.shift();删除数组的第一个元素，返回删除的值，同时数组长度减一。这里是04.unshift(3,4);把参数加载数组的前面，返回新数组的长度这里是55.sort();按指定的参数对数组进行排序，返回的值是经过排序之后的数组1234567var arr=[0,1,2,5,4];function compare(val1,val2)&#123; return val2-val1;&#125;console.log(arr.sort(compare));这里是[5, 4, 2, 1, 0] 6.reverse();反转数组项的顺序，返回的值是经过排序之后的数组这里是[2,1,0]7.contact(3,4);把两个数组拼接起来，返回的值是一个副本12345var arr=[0,1,2,5,4];var arr2=[7,8,9];console.log(arr.concat(arr2));这里是[0, 1, 2, 5, 4, 7, 8, 9] 8.slice(start,end);返回从元素组中指定开始下标到结束下标之间的项组成的新数组123456789var colors = [&quot;red&quot;, &quot;green&quot;, &quot;blue&quot;, &quot;yellow&quot;, &quot;purple&quot;];// 一个参数:var color1 = colors.slice(1);alert(color1); // green,blue,yellow,purple// 两个参数：var color2 = colors.slice(1,4);alert(color2); // green,blue,yellow 9.splice()删除：2个参数，起始位置，删除的项数插入：3个参数，起始位置，删除的项数，插入的项替换：任意参数，起始位置，删除的项数，插入的任意数量的项123456789101112var colors = [&quot;red&quot;, &quot;green&quot;, &quot;blue&quot;];var removed = colors.splice(0,1); // 删除第一项alert(colors); // green,bluealert(removed); // red,返回数组中只包含一项removed = colors.splice(1, 0, &quot;yellow&quot;, &quot;orange&quot;); // 从位置1开始插入两项alert(colors); // green,yellow,orange,bluealert(removed); // 返回的数组是一个空数组removed = colors.splice(1, 1, &quot;red&quot;, &quot;purple&quot;); // 从位置I开始插入两项alert(colors); // green,red,yellow,orange,bluealert(removed); // yellow,返回的数组中只包含一项 10.indexOf()和lastIndexOf();接受两个参数，要查找的项(可选)和查找起点位置的索引indexOf();从数组开头向后查找lastIndexOf();从数组末尾开始向前查找11.every();对数组中的每一项运行给定函数，如果该函数对每一项都返回true，则返回true。12.filter();对数组中的每一项运行给定函数，返回该函数会返回true的项组成数组。13.forEach();对数组的每一项运行给定函数，这个方法没有返回值。14.map();对数组的每一项运行给定函数，返回每次函数调用的结果组成的数组。15.some();对数组的每一项运行给定参数，如果该函数对任一项返回true，则返回true。以上方法都不会修改数组中的包含的值。16.reduce()和reduceRight();缩小数组的方法，这两个方法都会迭代数组的所有项，然后构建一个最终返回的值。17.join(separator);将数组的元素组起一个字符串，以separator为分隔符，省略的话则用默认用逗号为分隔符12var a = [1,2,3,4,5];var b = a.join(&quot;|&quot;); //a：[1,2,3,4,5] b：&quot;1|2|3|4|5&quot; 13.你想用前端知识做些什么事，如果给你自由的空间14.如果让你参与一个前端相关的新技术领域研究，你觉得如何能快速掌握]]></content>
      <tags>
        <tag>面试题</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Js中Date和new Date的区别]]></title>
    <url>%2F2017%2F07%2F21%2FJs%E4%B8%ADDate%E5%92%8Cnew-Date%E7%9A%84%E5%8C%BA%E5%88%AB%2F</url>
    <content type="text"><![CDATA[1.Date()直接返回当前时间字符串，不管参数是number还是任何string1234Date();Date(&apos;sssss&apos;);Date(1000);//Fri Aug 21 2015 15:46:21 GMT+0800 (中国标准时间) 2.而new Date()则是会根据参数来返回对应的值，无参数的时候，返回当前时间的字符串形式；有参数的时候返回参数所对应时间的字符串。new Date()对参数不管是格式还是内容都要求,且只返回字符串12345678910111213141516171819new Date();//Fri Aug 21 2015 15:51:55 GMT+0800 (中国标准时间)new Date(1293879600000);new Date(&apos;2011-01-01T11:00:00&apos;)new Date(&apos;2011/01/01 11:00:00&apos;)new Date(2011,0,1,11,0,0)new Date(&apos;jan 01 2011,11 11:00:00&apos;)new Date(&apos;Sat Jan 01 2011 11:00:00&apos;)//Sat Jan 01 2011 11:00:00 GMT+0800 (中国标准时间)new Date(&apos;sss&apos;);new Date(&apos;2011/01/01T11:00:00&apos;);new Date(&apos;2011-01-01-11:00:00&apos;)new Date(&apos;1293879600000&apos;);//Invalid Datenew Date(&apos;2011-01-01T11:00:00&apos;)-new Date(&apos;1992/02/11 12:00:12&apos;)//596069988000 new Date()对参数有严格的要求，格式不准确的时候会返回Invalid Date]]></content>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Cookie LocalStorage与SessionStorage的区别]]></title>
    <url>%2F2017%2F07%2F20%2FCookie-LocalStorage%E4%B8%8ESessionStorage%E7%9A%84%E5%8C%BA%E5%88%AB%2F</url>
    <content type="text"><![CDATA[“Cookie、LocalStorage、SessionStorage的区别？”这个问题成了近期面试中被问到最多的问题，索性把它归归类，让自己的记忆更加深刻一点。 基本概念CookieCookie是小甜饼的意思，顾名思义，它非常小，大小限制在4KB左右，是网景公司前雇员Lou Montulli在1993年3月被发明的。它的主要用途有保存登录信息，诸如在某一个网站的登录页面看到“记住密码”，这通常就是在Cookie中存入辨识用户身份的数据。 LocalStorageLocalStorage是HTMl5标准中新加入的技术，它并不是什么划时代的新东西，早在IE6时代就有相关技术userData，而当时由于考虑到浏览器的兼容性问题，故而没采用。如今，LocalStorage被大多数浏览器支持，故而炙手可热。 特性 Chrome Firefox Internet Explorer Opera Safari LocalStorage 4 3.5 8 10.5 4 sessionStorage 5 2 8 10.5 4 sessionStoragesessionStorage与LocalStorage接口类似，但数据保存的周期不同。sessionStorage将一部分数据在当前会话中保存下来，刷新页面数据依旧存在。但当页面关闭之后，sessionStorage中的数据就会被清空。 三者的异同 特性 Cookie LocalStorage sessionStorage 数据的生命周期 一般由服务器生成 ，可设置失效时间。如果是在浏览器端生成Cookie，默认是关闭浏览器后失效 除非被清除，否则永久保存 仅在当前会话下有效，关闭页面或浏览器之后就会失效 存放数据大小 4K左右 一般为5MB左右 一般为5MB左右 与服务器端通信 每次都会携带到HTTP头中，如果使用Cookie保存过多数据，会带来性能问题 仅在客户端（浏览器）中保存，不参与和服务器的通信 仅在客户端（浏览器）中保存，不参与和服务器的通信 易用性 需要程序员自己封装，原生的Cookie接口不友好 原生接口 原生接口 应用场景Cookie一个常用的场景就是判断用户是否登录。LocalStorage接替了cookie管理购物车的工作，同时也会保存一些诸如HTML5游戏中产生的本地数据。sessionStorage适用于一些用户填写表单信息。 安全性的考虑不是什么数据都适合放在 Cookie、localStorage 和 sessionStorage 中的。使用它们的时候，需要时刻注意是否有代码存在 XSS 注入的风险。因为只要打开控制台，你就随意修改它们的值，也就是说如果你的网站中有 XSS 的风险，它们就能对你的 localStorage 肆意妄为。所以千万不要用它们存储你系统中的敏感数据。]]></content>
      <tags>
        <tag>html5</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Github Pages如何自定义域名]]></title>
    <url>%2F2017%2F07%2F01%2FGithub-Pages%E5%A6%82%E4%BD%95%E8%87%AA%E5%AE%9A%E4%B9%89%E5%9F%9F%E5%90%8D%2F</url>
    <content type="text"><![CDATA[将自己的博客代码托管到Github上时，默认域名为 https://gwemz.github.io ，如何给其添加自定义域名？如通过 http://gwem.tk 这样的顶级域名进行访问？ 首先需要ping gwemz.github.io的ip地址（在后边DNS域名解析地址的时候会用到）如图所示： 得到地址之后进入dnspod中进行设置，添加A记录(这儿需要添加两条A记录，一条记录为*，另一条记录为@)，之前就是这一步遗漏，致使无法正确解析出域名: 需要在github项目中建立CNAME文件并填入域名，这儿不需要添加www，然后进行同步 这儿值得注意的是因为使用的是DNSPOD域名解析，故而在DNSPOD中设置域名解析之前需要在Freenom（其它域名申请地址原理类似）中设置选择自定义的DNS服务器，DNS服务器为DNSPOD中默认给的服务器f1g1ns1.dnspod.net.和f1g1ns2.dnspod.net. 最后，输入你的域名，便会发现域名已经成功和你的项目绑定了！！！]]></content>
      <tags>
        <tag>github</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CSS3属性]]></title>
    <url>%2F2017%2F06%2F27%2FCSS3%E5%B1%9E%E6%80%A7%2F</url>
    <content type="text"><![CDATA[CSS3、CSS4以及其他传说CSS 1 的规范由 Håkon Wium Lie 和 Bert Bos 发表于 1996 年，它非常短，而且比较简单。它的内容少到用一个 HTML 页面就足以呈现了，即使用 A4 纸打印出来也只需要 68 页。 CSS 2 发表于 1998 年，它的定义更加严格，囊括了更多的功能，而且增加了两名编辑：Chris Lilley 和 Ian Jacobs。此时，规范的篇幅暴增到了480 页打印纸，人们已经无法把它完整地记忆下来了。 尽管“CSS3”这个名词非常流行，但它实际上并没有在任何规范中定义过。这一点跟 CSS 2.1 或更早的 CSS 1 不一样。真正的情况是，绝大多Web 标准 ：是敌还是友 5数编辑在提到这个词时，指的是一个非正式的集合，它包括 CSS 规范第三版（Level 3）再加上一些版本号还是 1 的新规范。尽管在哪些规范应该归入CSS3 的问题上，编辑们达成了一定的共识，但我们也不得不面对现实：由于 CSS 的各个模块在近些年里以不同的速度在推进，我们已经越来越难以把这些规范以 CSS3、CSS4 这样的方式来划分了，而且这样也难以被大众理解和接受。]]></content>
      <tags>
        <tag>CSS3</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[禅心慧语]]></title>
    <url>%2F2017%2F06%2F16%2F%E7%A6%85%E5%BF%83%E6%85%A7%E8%AF%AD%2F</url>
    <content type="text"><![CDATA[语录摘录于2017-3-31杭州永福禅寺 无所得，即是得。以是得，无所得。 ————《大般若经》 心情是一条河，它的状态取决于它的深度。深水沉静，浅水喧哗。心量太小，小石头也能激起心情的浪花；心量大了，才能容得下暗藏的礁石。生活中，干扰我们心情的，没多少是大事。如同江河中的浪花，很多都不是庞然大物激起的。见多识广了，心胸就开阔了，心量就大了，心也就容易宁静了。 人生在世，往往会因这样或那样的伤害而心痛不已。罗素说，累累伤痕是生命给你的最好礼物。笑而不语是一种豁达。朋友间的戏谑，遭人误解后的无奈，过多的言辞申辩反而让人觉得华而不实，倒不如留下一抹微笑，任他人做评，有时一个微笑可以让两个宿怨之人冰释前嫌。 在这个世界上，没有一劳永逸，完美无缺的选择。你不可能同时拥有春花和秋月，不可能同时拥有硕果和繁花。你不可能所有的好处都是你的。你要学会权衡利弊，学会放弃一些什么，然后才能得到一些什么。你要学会接受命的残缺和悲哀，然后，心平气和。因为，这就是人生。 走在路上，挫折是难免的，低潮时必然的，孤独与寂寞是如影随形的；总有被人误解的时候，总有寄人篱下的时候，总有遭人诽谤和暗算的时候。这些时候，要知道潮涨潮落、波谷波峰的道理，只要你能够耐心等待，受得了折磨，守得住底线，一切都会证明，生活不会抛弃你，命运不会舍弃你。 凡事不可能一帆风顺。“随缘自适”。随缘是一种进取，是智者的行为，愚者的借口。随不是跟随，是顺其自然，不怨恨、不躁进、不过度、不强求；随不是随便，是把握机缘，不悲观、不刻板、不慌乱，不忘形；随是一种达观，是一种洒脱，是一份人生的成熟，一份人情的练达。 认识一个人靠缘分；了解一个人靠耐心；征服一个人靠智慧；处好一个人靠包容。人，相互帮扶才感到温暖；事，共同努力才感到简单；路，有伴同行才感到平坦；友，相互牵挂才感到情深；坚持与人为善，不遗余力的成就他人，也将在不知不觉中成就自己。一人亦人，众人为天；谋事在人，成事在天。 狮子不怕孤独，所以强大；羚羊喜欢群居，因为弱小。人生无处不修行，能在孤独中心静如水，才能在纷扰里安然无恙。人生来就是孤独的，不要奢望能够依靠谁，哪怕是自亲自爱。越是喧嚣处，往往更孤独。心系一处，自走自路。孤独是人生必走的路、必吃的苦。苦到尽头，甘自来。 每个人的身上，都依附着两个自己：好的自己和坏的自己。让积极打败消极，让高尚打败鄙陋，让真诚打败虚伪，让宽容打败计较，让快乐打败忧郁，让勤奋打败懒惰，让坚强打败脆弱。只要你愿意，你就能做最好的自己。 同是一块石头，一半做成了佛像，一半做成了台阶。一天，台阶不服气的问佛像：“我们本是一块石头，凭什么人们都踩着我，而去朝拜你呢？”佛说：“因为你只挨了一刀，而我经历了千刀万割。”人生亦如此，经得起打磨，耐得起寂寞。 人生有两种境界：一是痛而不言，二是笑而不语。痛而不言是一种智慧，人生在世，往往会因为这样或那样的伤害而心痛不已。对坚强的人来说，累累伤痕是生命赐予的最好的礼物；笑而不语是一种豁达，朋友间的戏虐，遭人误解后的无奈，过多的言辞申辩反让人觉得华而不实，莫不如留下一抹微笑，任他人做评。 人生有四苦：一是看不透。看不透人际中的纠、争斗后的隐伤，喧嚣中的平淡、繁华后的宁静。二是舍不得。舍不得曾今的精彩、不逮的岁月，居高时的虚荣、得意处的掌声。三是输不起。输不起一时的情感之失，输不起一截人生失败。四是放不下。放不下已经走远的人和事，放不下早已尘封的是与非。 人与人的差距，表面上看是财富的差距，实际上是福报的差距；表面上看是人脉的差距，实际上是人品的差距；表面上看是气质的差距，实际上是涵养的差距；表面上看是容貌的差距，实际上是心地的差距；表面上看是人与人都差不多，内心境界却大不相同。]]></content>
      <tags>
        <tag>杂文</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[VueJS研究]]></title>
    <url>%2F2017%2F06%2F15%2FVueJS%E7%A0%94%E7%A9%B6%2F</url>
    <content type="text"><![CDATA[介绍Vue.js是一套构建用户界面的渐进式框架。与其他重量级框架不同的是，Vue采用自底向上增量开发的设计。Vue的核心库只关注视图层，他不仅易于上手，还便于与第三方库或既有项目整合。另一方面，当与单文件组件和Vue生态系统支持的库结合使用时，Vue也完全能够为复杂的单页应用程序提供驱动。 官方网站 什么是Vue.js 它是一个轻量级的MVVM框架 数据驱动+组件化的前端开发 GitHub超过25K+的Star数，社区完善引入方式 &lt;script src=&quot;https://unpkg.com/vue/dist/vue.js&quot;&gt;&lt;/script&gt; 声明式渲染12345678910&lt;div id=&quot;app&quot;&gt; &#123;&#123; message &#125;&#125;&lt;/div&gt;var app = new Vue(&#123; el: &apos;#app&apos;, data: &#123; message: &apos;Hello Vue!&apos; &#125;&#125;) Hello Vue! 绑定Dom元素属性：123456789101112&lt;div id=&quot;app-2&quot;&gt; &lt;span v-bind:title=&quot;message&quot;&gt; 鼠标悬停几秒钟查看此处动态绑定的提示信息！ &lt;/span&gt;&lt;/div&gt;var app2 = new Vue(&#123; el: &apos;#app-2&apos;, data: &#123; message: &apos;页面加载于 &apos; + new Date() &#125;&#125;) 鼠标悬停几秒钟查看此处动态绑定的信息！ 条件与循环条件12345678910&lt;div id=&quot;app-3&quot;&gt; &lt;p v-if=&quot;seen&quot;&gt;现在你看到我了&lt;/p&gt;&lt;/div&gt;var app3 = new Vue(&#123; el: &apos;#app-3&apos;, data: &#123; seen: true &#125;&#125;) 现在你看到我了 循环123456789101112131415161718&lt;div id=&quot;app-4&quot;&gt; &lt;ol&gt; &lt;li v-for=&quot;todo in todos&quot;&gt; &#123;&#123; todo.text &#125;&#125; &lt;/li&gt; &lt;/ol&gt;&lt;/div&gt;var app4 = new Vue(&#123; el: &apos;#app-4&apos;, data: &#123; todos: [ &#123; text: &apos;学习 JavaScript&apos; &#125;, &#123; text: &apos;学习 Vue&apos; &#125;, &#123; text: &apos;整个牛项目&apos; &#125; ] &#125;&#125;) 1.学习JavaScript2.学习Vue3.整个牛项目 处理用户输入12345678910111213141516&lt;div id=&quot;app-5&quot;&gt; &lt;p&gt;&#123;&#123; message &#125;&#125;&lt;/p&gt; &lt;button v-on:click=&quot;reverseMessage&quot;&gt;逆转消息&lt;/button&gt;&lt;/div&gt;var app5 = new Vue(&#123; el: &apos;#app-5&apos;, data: &#123; message: &apos;Hello Vue.js!&apos; &#125;, methods: &#123; reverseMessage: function () &#123; this.message = this.message.split(&apos;&apos;).reverse().join(&apos;&apos;) &#125; &#125;&#125;) Vue基本的路由结构Vue-cli是Vue的脚手架工具Vue-cli项目地址 项目创建： 全局安装：cnpm install --global vue-cli创建一个基于webpack的新项目：vue init webpack my-project安装依赖：cd my-project npm install npm run dev Webpack官方地址]]></content>
      <tags>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[React Native研究]]></title>
    <url>%2F2017%2F06%2F05%2FReactNative%2F</url>
    <content type="text"><![CDATA[如何搭建开发环境？参考文献]]></content>
      <tags>
        <tag>react native</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[A-star算法的研究与应用]]></title>
    <url>%2F2017%2F06%2F02%2Fastar%E7%AE%97%E6%B3%95%E7%A0%94%E7%A9%B6%2F</url>
    <content type="text"><![CDATA[A-star算法的研究与应用搜索区域(The Search Area)我们假设某人想从A点到达B点，一堵墙把它们分开了。如下图所示，绿色是开始点A，红色是结束点B，而蓝色填充的方块是中间的墙。 你应该注意的第一件事是，我们把搜索区域分割成了方块的格子。简化搜索区域，如你目前完成的那样，这是寻路的第一步。这个特殊方法把搜索区域简化成了一个二维数组。数组的每一个项目代表了格子里的一个方块，它的状态记录成可行走和不可行走。通过计算出从A到达B应该走哪些方块，就找到了路径。一旦路径找到，我们的人从一个方块的中心移动到下一个方块的中心，直到抵达目标。 这些中心点称作“节点”。当你在其它地方阅读关于寻路时，你将经常发现人们讨论节点。为什么不直接把它们认为是方块呢？因为有可能你要把你的寻路区域以非方块的东西来分割。它们可能是矩形，六角形，或任何形状，真的。而节点可以放到形状内的任何位置。在中心，或者沿着边缘，或其它地方。然而我们使用这个系统，因为它最简单。 开始搜索Starting the Search一旦我们把搜索区域简化成了可以管理的大量节点，就象我们上面所做的那样采用格子的布局，下一步就是引导一个搜索来找出最短路径。在A*寻路的做法，我们从开始点A做起，检查它周围的方块，并且向外普通的搜索，直到找到目标。 我们这样开始搜索： 从开始点A起，添加它到待考虑的方块的“开放列表”。开放列表有点象购物列表。此时只有一个项目在里面，但很快我们会得到更多。它包含了你可能取用的沿途的方块，也可能不用它。基本上，这是需要检查的方块的列表。 观察开始点邻近的所有可到达或可行走的方块，忽略有墙，水或其他非法地形的方块。也把它们添加到开放列表。对每一个方块，保存A 点作为它们的“父亲”。这个父亲方块在跟踪路径时非常重要。后面会更多的解释。 把开始方块A从开放列表中取出，并放到“封闭列表”内，它是所有现在不需要再关注的方块的列表。 在此，你应该有了类似下图的东西。在这个图中，中间的深绿色的方块就是开始方块。它有浅蓝色的外框，表示它被添加到封闭列表了。所有的相邻方块现在都进入要检查的方块的开放列表中了，它们有浅绿的外框。每一个都有灰色的指针指回它的父亲，它就是开始方块。 下一步，我们从开放列表中，选出一个相邻的方块，然后多多少少重复早先的过程。但是我们选择哪一个呢？具有最小F值的那个。 路径排序Path Scoring找到形成路径的方块的关键是下面的等式： F = G + H 这里 G = 从开始 点A到格子中给定方块的移动代价，沿着到达该方块而生成的那个路径。 H = 从格子中给定 的方块到最终目标 B点的评估移动代价。这种方式通常称作试探法，有点让人混乱。因为这是一个猜测，所以得到这个称谓。在找到路径之前，我们真的不知道实际的距离，因为途中有各种东西（墙，水，等等）。在本教程里给出了一种计算H的方法，但在网上你能找到很多其他的文章。 我们需要的路径是这样生成的：反复的遍历开放列表，选择具有最小F值的方块。 如上所述，G是经由到达它的路径，从开始点到给定方块的移动代价。我们为每个水平/垂直的移动指定代价为10，而斜角的移动代价为14.我们使用这些值，是因为斜角的距离是2的平方根，或者大概是1.414倍的水平/垂直的移动代价。出于简化的目的使用了10和14。比例大致是正确的，而我们却避免了方根和小数的计算。倒不是我们没有能力或者不喜欢数学，使用这些数字也能让计算更快一些。以后你就会发现，如果不使用这些技巧，寻路的计算非常慢。 既然我们沿着给定方块的路径来计算G的值，找出那个方块G值的方法就是找到其父亲的G值，再加上10或者14而得，这依赖于它处于其处于父亲的斜角或者直角(非斜角)而定。这在本例后面会更加清晰，随着我们从开始点离开而得到更多的方块。 H能通过多种方法估算。我们这里用到的方法叫做Manhattan方法，计算从当前方块经过水平/垂直移动而到达目标方块的方块总数。然后将总数乘以10。这种方法之所以叫做Manhattan方法，因为它很像计算从一个地点到达另一个地点的城市街区数量计算，此时你不能斜向的穿越街区。重要的是，当计算H的时候，要忽略任何路径中的障碍。这是一个对剩余距离的估算值，而不是实际值，这就是试探法的称谓由来。 G和H相加就算出了H。第一步搜索的结果见下图的描述。F，G和H值都写入了每个方块。如开始方块相邻右边的方块，F显示在左上方，G显示在左下方，而H显示在右下方。 好，让我们来观察某些方块。在有字母的方块中，G=10。这是由于在水平方向上从开始点(到那里)只有一个方块的距离。开始点相邻上方、下方和左边的方块都具有同样的G值：10。斜角的方块G值为14。 H的计算通过估算Manhattan距离而得，即：水平/垂直移动，忽略途中的障碍，到达红色的目标方块的距离。用这种方法，开始点相邻右边的方块和红色方块相聚3个方块，那么H值就是30。其上的方块距离为4（记住，只能水平/垂直移动），H就是40。你也可以看看其它方块的H值是如何计算出的。 每个方块的F值，再说一下，不过就是G和H相加。 持续的搜索为了继续搜索，我们简单的选择开放列表里具有最小F值的方块，然后对选定的方块做如下操作： 将它从开放列表中选出，并加入封闭列表。 测试所有的相邻方块，忽略封闭列表内的和不可行走的（墙，水及其它非法地形）方块，如果方块不在开放列表中，则添加进去。将选定方块作为这些新加入方块的父亲。 如果一个相邻方块已经存在于开放列表，检查到达那个方块的路径是否更优。换句话说，检查经由当前方块到达那里是否具有更小的G值。如果没有，不做任何事。相反，如果新路径的G值更小，把这个相邻方块的父亲改为当前选定的方块。最后，重新计算那个方块的F和G值。 好了，让我们看看它是怎样工作的。在初始的9个方块中，当开始方块被纳入封闭列表中，我们的开放列表就只有8个方块了。在这些方块中，具有最小F值的是开始方块相邻右边的那个，其F值为40。所以我们选定这个块作为下一个方块。在随后的图示中，它以高亮的蓝色表示。 首先，我们把它从开放列表中取出，并加入到封闭列表（这就是它现在是高亮的蓝色的原因）。然后我们检查相邻的方块。然而，这个方块相邻的右边是代表墙的方块，所以忽略他们。其相邻的左边是开始方块。它处于封闭列表内，所以也忽略它。 其它四个已经在开放列表中了，所以我们需要检查经由当前方块到达他们是否是更优的路径，使用G值作为参考点。我们来看看这个选定方块上面右边的那个方块。它的当前G值是14.如果我们经由当前方块到达那里，G值将是20（10，到达当前方块的G值，再加上10垂直移动到它上面的方块）。20&gt;14，所以这不是一个好的路径。看看图解能够好的理解这些。从开始方块斜向移动到那个方块更直接，而不是水平移动一个方块，再垂直移动一个方块。 当我们队已经存在于开放列表中的4个相邻方块都重复这个过程。我们发现经由当前方块没有更佳的路径，所以什么也不用改变。现在看看所有的相邻方块，我们已经处理完毕，并准备移动到下一个方块。 现在，我们再遍历开放列表，它只有7个方块了，选择具有最小F值的那个。有趣的是，此时有两个方块都有值54。那么我们选择哪个？实际上这不算什么。为了速度的目的，选择你最后加入到开放列表的那个方块更快。当你接近目标的时候，当你更接近于目标的时候，它倾向于后发现的那个方块。但这真的没有什么关系。（不同的处理造成了两个版本的A*可能找到不同的等长路径） 我们选择下面的那个，位于开始方块的右边，如下图所示。 这一次，当检查相邻的方块时，我们相邻右边的是一个墙方块，所以忽略它。对那个方块上面的块同样忽略。我们也忽略墙下面的方块。为什么？因为你不把临近墙的角切开就无法直接到达那个方块。实际上你需要先向下走去，然后越过那个方块。在这个过程中都是围绕角在移动（说明：切开角的规则是可选的。它的使用依赖于你的节点如何设置） 这样就剩下5个方块了，当前方块下的两个方块不在开放列表中，所以，要添加他们，并把当前方块作为他们的父亲。在另外三个方块中，有两个已经在封闭列表中了（开始方块和当前方块上面的那个，他们都用高亮的蓝色在图中标出来了），所以忽略他们。最后一个方块，当前方块相邻左边的那个，检查经由当前方块到达那里是否得到更小的G值。没有。所以处理完毕，并准备检查开放列表的下一个方块。 我们重复这个过程，直到把目标点添加到开放列表，此时的情形如下图所示： 注意开始方向向下的第二个方块，在前面的描述中其父亲已经发生改变，开始它的G值为28，指向其右上角的方块。到现在它的值是20，指向其上方的方块。这是在搜索方法中某处发生的吗？在那里G值被检查，而且使用了新的路径后，它得到了更小的值。所以它的父亲切换了，G和F也重新计算。而这个改变在本例中不见得非常重要，在决定最佳路径的时候，持续的检查会产生各种差别。 那么我们怎样决定实际的路径呢？简单，从红色的目标方块开始，向后移动到它的父亲，跟从箭头的指示，最终你会回到开始方块，这既是路径！它如下图所示。从方块A移动到方块B就是从每一个方块（节点）的中心移动到路径上的下一个方块的中心的简单过程，直到到达目标！ A-star方法汇总好了，现在你已经读完了所有解释，让我们在这里一步一步的列出所有操作： 添加开始方块到开放列表。 重复下面的过程 查找开放列表中具有最下F值的方块。我们把它作为当前方块 把它放入封闭列表 对当前方块的8个相邻方块的每一个？ 如果它不可行走，或者存在于封闭列表中，忽略它。否则执行下面操作。 如果它不在开放列表中，将它添加进去，以当前方块作为其父亲，记录这个方块的F，G和H值 如果它已经在开放列表中了，检查到达那个方块的路径是否更优，以G值为测量值。更低的G值意味着更好的路径。如果找到，这个方块的父亲改为当前方块，并重新计算这个方块的G和F值。如果你保持开放列表按F值排序的话，可能需要重新排序来解决这个变化。 结束循环 当你 将目标方块加入到开放列表，此时路径已经找到，或者 没有找到目标方块，并且开放列表是空的。此时，没有路径。 保存路径，从目标方块往回走，从每个方块走到它的父亲方块，指导抵达开始方块，那就是路径。 当你在网上和分类论坛阅读很多讨论A-Star寻路的时候，你有时候会发现某些人所指的A代码实际上并不是真正的A算法。对于应用中的A算法，你需要包含上面讨论到的元素 –特别是开放列表和封闭列表，以及使用了F、G和H的路径排序。有很多其它的寻路算法，但是其它的方法并不是A 通常认为它是最好的方法。 关于实现的提示现在你已经理解了基本的方法，这里是当你需要些自己的程序时需要考虑的更多的东西。下面的某些材料引用了我用C++和Blitz Basic写的程序，但是这些要点对其它语言也是同样有效的。 维护开放列表：实际上这是A*寻路函数最好费时间的函数之一。每次访问开放列表时，你都需要找到具有最小F值的方块。有很多种方法可以做到这一点。你可以保存所需的路径项目，每次当你需要找到最小F值的方块时，简单的遍历整个列表。这很简单，不过路径长的时候非常慢。这个方法可以改进，通过维护一个排序的列表，每次需要最小F值的方块时，简单的抓出第一个项目就可以了，当我写自己的程序时，这是我用到的第一个方法。 其它单元：如果你碰巧的阅读我的范例代码，将会注意到它完全忽略了地图上的其它单元。我的寻路怪物实际上是穿越彼此而通过。依赖于游戏，这可能是正确的，或者是不正确的。如果你需要考虑地图上的其它单元，并让他们能围绕彼此移动，我建议你在寻路代码里忽略其它单元，而另外写一些代码来检测两个单元是否发生了碰撞。当碰撞发生时，你可以生成一个新的路径或者使用一些标准的移动规则，指导障碍不在路上，然后生成新路径。当计算初始路径时，为什么不包含其它单元？嗯，因为其它单元会动，他们可能不在自己的位置，当你到达那里的时候。这会造成一些怪异的结果，路径计算后，在某处单元突然转向避开一个不再停留在那里的单元，却撞上了另一个经过它路径的单元。 寻路代码中忽略其他的单元，然而，这意味着你要写单独的代码来处理碰撞。这是和游戏很相关的，所以我把决定权留给你。本文后面的参考资料一节里， Bryan Stout的文章值得一读，里面有一些可能的解决方案（如强力跟踪[robust tracing]，等等）。 关于速度的更多技巧 ：当你开发自己的A*程序，或者改编我所写的那个，最终你会发现寻路使用了大块的 CPU时间，特别是当你有大量的寻路怪物，运行在一个相当大的地图上的时候。如果你读网上的资料，你会发现甚至象星际争霸[Starcraft]或者帝国时代[Age of Empires]这样的专业游戏也会遇到这些问题。如果你发现由于寻路导致运行变慢，这里有一些可能提高速度的主意： 考虑小一些的地图或者少一些的怪物。 不要一次对太多的怪物做寻路。而是把他们放入队列，从而把他们分散到更多的游戏循环。如果你的游戏运行在，比如，40帧/秒，没有人会注意到。但是他们会注意到每一小段时间的游戏变慢，当大量的怪物都在同一时间寻路的时候。 考虑对地图使用大一些的方块。这样就减少了寻路要搜索的方块总数。如果你有雄心的话，可以设计两种或更多寻路系统，依赖于路径的长度而用于不同的场合。这就是专业人士的做法，对长路径使用大的区域，然后当接近目标时切换到使用小一些的方块/区域的精确搜索。如果你对这个概念有兴趣，参考我的文章Two-Tiered A* Pathfinding。 考虑对较长的路径应用路点系统，或者设计预计算[precalculated]的多个路径，它们对游戏是固定不变 [hardwired]的。 考虑预处理地图，计算出哪些区域是从其他区域不可到达的。我把这些区域叫做“岛屿”。实际上，他们也可以是岛屿或者其他围了墙而无法到达的区域。A*的缺点之一就是，如果你告诉它搜索到达这些区域的路径，它会搜索整个地图，仅当每一个开放列表和封闭列表中的可到达方块/节点都处理后，才会停止。那会浪费大量的CPU时间。这种现象是可以避免的，通过预先决定那些区域是无法到达的，用数组或者类似的数据结构记录这些信息，然后在开始路径搜索前检查它。在我的代码的Blitz版本中，我创建了一个地图预处理器[map pre-processor]来做这件事。它也预先检查寻路算法可以忽略的死点[dead-ends]，这样速度就提高了很多。 多样的地形代价： 在本教程以及我的附带程序里，地形只有两种情况：可行走和不可行走。如果你有可以行走但移动代价更高的地形怎么办？沼泽，山坡，地下城的楼梯，等等？这些都是可行走而移动代价高于平坦地面的地形实例。同样的，道路可能具有比它周围地形小一些的移动代价。 这个问题很容易解决，当计算任意给定的方块的G值时，加上地形的代价。简单的加上一个奖励代价给这些方块。A寻路算法已经写成查找最小代价的路径，应该容易处理它。在我描述得简单示例中，当地形只有可行走和不可行走时，A能找到最短，最直接得路径。但是在多代价[variable-cost]地形环境中，最小代的得路径可能行走了较长的距离。如同选择围绕沼泽的道路，而不是直接穿越沼泽。 还有一个有趣的附加考虑是被专业人士称作“影响映射[influence mapping]”的东西。如同上面描述的多代价地形一样，你可以创建一个附加的点系统，并引用到AI的路径中。想象你有一个地图，有大量的怪物守护着穿越山区的通道。每次当电脑送某人到经过这个通道的路径时，都会被困住。如果你愿意，你可以创建一个影响地图，处罚发生大量流血残杀处的那些方块。这会教电脑偏好安全的路径，并帮助它避免不利的位置：仅仅由于路径更短（但更危险），而不停的输送部队和怪物通过这个路径。 处理未探索区域： 你是否玩过一款PC游戏，在那里电脑总是准确的知道路该如何走，即使地图没有探索？依赖与游戏，那样的寻路太好了反而不够真实。幸运的是，这个问题很容易解决。 答案就是创建一个独立的“发现可行走[knowWalkability]”数组用于每一个玩家以及电脑对手（每一个玩家，不是每一个单元 – 那将需要更多的计算机内存）。每个数组包含了玩家已探索区域的信息，另一方面，地图上其它区域直到被证实后才被假设是可行走的。使用这个方法，单元会漫步于死点位置，重复做相同的错误选择，直到他们发现周围的路。一旦地图都探索了，寻路就正常工作。 更平滑的路径： 虽然A*会自动给出最短的，最低代价的路径，它不会自动给出看起来最平滑的路径。看一看本例最后计算出来的路径（图 7）。那条路径的第一步位于开始方块的右下方。如果第一步的方块就是开始方块相邻下方的方块，路径会不会更平滑些？ 有很多方法可以解决这个问题。当你计算路径的时候，要处罚那些改变方向的方块，给它们一个附加的G值扣分。这样计算后，你可以走一遍那条路径，看一看那些选择了邻近方块而让路径看起来更好的地方。关于这个问题的完整信息，参考Gamasutra.com上Macro Pinter的文章 Toward More Realistic Pathfinding，它是免费的，但需要注册。 非方块搜索区域： 在我们的示例中，我们使用了一个简单的2D方块布局。你不必使用这个方法。你可以使用不规则的形状区域。考虑一下棋盘游戏Risk，和游戏中的国家。你可以设计一个象那样的寻路关卡。为此，你将需要创建一个表来存储哪些国家和哪些国家相邻，以及相关的从一个国家移动到另一个国家的G值。你也需要选择一种估算H值的方法。其它的处理就和上面示例一样。当添加新项目到开放列表中时，你将简单的查找表中的国家，而不是邻近的方块。 同样的，你可以创建一个路点系统，对于固定地形场景中的路径。路点通常是一条路径上往来移动的点，这路径可能是一条道路，也可能是一个地下城的关键通道。作为游戏设计者，你能预先指定这些路点。如果没有障碍存在于两个路点间的直线路径上，就可以认为它们是“相邻”的，如同在Risk中那样，你应该保存这些邻接信息到一个某种类型的查找表中，当生成新的开放列表项目的时候使用它。然后记录相关的G值（可能是节点间的直线距离）和H值（可能是节点到目标的直线距离）。其他的和往常一样处理。]]></content>
      <tags>
        <tag>A-star</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo你的博客]]></title>
    <url>%2F2017%2F06%2F02%2Fhexo%E4%BD%A0%E7%9A%84%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[如何利用Hexo搭建个人博客？ hexo简介hexo出自台湾大学生tommy351之手，是一个基于Node.js的静态博客程序，其编译上百篇文字只需要几秒。hexo生成的静态网页可以直接放到GitHub Pages，BAE，SAE等平台上. 1231. 如果你对默认配置满意，只需几个命令便可秒搭一个hexo。2. 如果你跟我一样喜欢折腾下，30分钟也足够个性化。3. 如果你过于喜欢折腾，可以折腾个把星期，尽情的玩。 搭建过程你或许觉得有那么点小繁琐，但一旦搭建完成，写文章是极简单，极舒服的。 只需要几个简单命令，你就可以完成一切。 123hexo n #写文章hexo g #生成hexo d #部署 # 可与hexo g合并为 hexo d -g 环境准备安装node到Node.js官网下载相应平台的最新版本，一路安装即可。 安装gitHexo之next主题设置首页不显示全文(只显示预览) 写文章执行new命令，生成指定名称的文章至hexo\source_posts\postName.md。 1hexo new [layout] &quot;postName&quot; #新建文章 其中layout是可选参数，默认值为post。有哪些layout呢，请到scaffolds目录下查看，这些文件名称就是layout名称。当然你可以添加自己的layout，方法就是添加一个文件即可，同时你也可以编辑现有的layout，比如post的layout默认是hexo\scaffolds\post.md 1234title: &#123; &#123; title &#125; &#125;date: &#123; &#123; date &#125; &#125;tags:---]]></content>
      <tags>
        <tag>hexo</tag>
        <tag>blog</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[github中ssh密钥的生成]]></title>
    <url>%2F2017%2F06%2F02%2Fgithub%E4%B8%ADssh%E5%AF%86%E9%92%A5%2F</url>
    <content type="text"><![CDATA[github中ssh密钥的生成（如何不用输密码同github交互）使用git Bash by winter on 2017/5/21 1. 查看SSH keys是否存在打开git Brash界面–》输入 ssh 如果出现如下界面，代表SSH keys存在 2. 生成新的ssh key在命令行中输入ssh-keygen -t rsa -C &quot;3396543978@qq.com&quot; 输入passphrase（本步骤可以跳过）不输入则表示没有密码 将新生成的key添加到ssh-agent中: 如果出现如下界面，则创建成功 3. 将ssh key添加到Github中用自己喜欢的文本编辑器打开id_rsa.pub文件，里面的信息即为SSH key，将这些信息复制到GitHub的Add SSH key页面即可 4. 设置 username 和 email，添加远程地址 remote: Permission to Gwemz/git.git denied to winterGuo.fatal: unable to access ‘https://github.com/Gwemz/git.git/‘: The requested URL returned error: 403 参考文章： Git 最著名报错 “ERROR: Permission to XXX.git denied to user”终极解决方案 多个GITHUB帐号的SSH KEY切换参考文章 winter@DESKTOP-43SLAF5 MINGW64 ~/Desktop$ ssh-add ~/.ssh/id_rsaIdentity added: /c/Users/winter/.ssh/id_rsa (/c/Users/winter/.ssh/id_rsa) How to 切换不同的github账户？ 相关参考文献 文章一 文章二 文章三 文章四 文章五 修改仓库.git目录下config中的配置文件]]></content>
      <tags>
        <tag>ssh</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[PHPCMS的安装流程]]></title>
    <url>%2F2017%2F04%2F24%2Fphpcms%E7%9A%84%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8%2F</url>
    <content type="text"><![CDATA[1234561. 本地服务器www目录下新建文件phpcms2. 在网站www.phpcms.cn下载安装包。有GBK 和 UTF8两个版本，推荐使用UTF8版本。下载文件解压，删除readme文件夹，将install_package文件夹下的文件拷贝到www目录下的phpcms文件夹内3. 访问localhost/phpcms/install/install.php按照指导进行安装 不懂本教程，没关系，查看 详细教程 注：后台管理系统中的设置可修改默认站点域名 三个重要的地址12345localhost/phpcms/admin.php(后台管理系统 账号：phpcms 密码：phpcms)localhost/phpcms/index.php(前台首页文件)localhost/phpcms/myadmin(数据库) 两个重要的目录1231. www/phpcms/phpcms/tmplates/default/content/2. www/phpcms/statics/ -css/ -images/ -js/]]></content>
      <tags>
        <tag>phpcms</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用命令行和github交互]]></title>
    <url>%2F2017%2F04%2F24%2F%E4%BD%BF%E7%94%A8%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%92%8Cgithub%E4%BA%A4%E4%BA%92%2F</url>
    <content type="text"><![CDATA[全局配置1234567初次配置git环境时需要进行的步骤：(配置过之后不需要再次配置)git config --global user.name &quot;Gwemz&quot;git config --global user.email &quot;3396543978@qq.com&quot;git config --global push.default simple clone一个已有的仓库做开发12345678git clone https://github.com/Gwemz/myblog.git .(将项目克隆到当前文件夹下)git --help //git相关命令查询git status //查看项目的状态(是否更新)git add * //添加需要更新的所有内容git status git commit -m &apos;myblog&apos; //每次提交的标注git push //提交(需要输入用户名和密码) 管理分支(除了 https://gwemz.github.io 之外其它 https://gwemz.github.io/myblog 如果需要访问则必须进行下述操作) 1234567git branch gh-pagesgit checkout gh-pagesgit merge mastergit push --set-upstream origin gh-pages 注意 多使用git status 查看自己目前所在的分支]]></content>
      <tags>
        <tag>github</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[解决WampServer 80端口号被占用的问题]]></title>
    <url>%2F2017%2F04%2F24%2Fwampserver%E7%AB%AF%E5%8F%A3%E5%8F%B7%E8%A2%AB%E5%8D%A0%E7%94%A8%2F</url>
    <content type="text"><![CDATA[沿着C:\wamp\bin\apache\apache2.4.9\conf目录，找到文件httpd.conf文件将80端口号改为任意值，诸如8080端口： 改完之后重启WampServer就会发现软件图标变为了绿色 但是“Localhost”、“phpMyAdmin”、“SQLiteManager”，你可以点击打开看到依旧是默认的80端口。 找到wamp安装目录下的wampmanager.tpl文件，记事本打开： 找到wamp安装目录下的wampmanager.ini文件 将本文件中的http://localhost 替换为 http://localhost:8080]]></content>
      <tags>
        <tag>wampserver</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[wamp下apache2.4.9局域网ip访问时提示403错误]]></title>
    <url>%2F2017%2F04%2F24%2Fwamp%E4%B8%8Bapache2.4.9%E5%B1%80%E5%9F%9F%E7%BD%91ip%E8%AE%BF%E9%97%AE%E6%97%B6%E6%8F%90%E7%A4%BA403%E9%94%99%E8%AF%AF%2F</url>
    <content type="text"><![CDATA[在自己的笔记本上搭建了一个apache服务器，想通过手机访问主机上的一个页面，但是在访问过程中总提示403错误。经过在网上查找别人的解决方案，及不断尝试修改httpd.conf配置文件，最终测试出修改方案。 找到(目录C:\wamp\bin\apache\apache2.4.9\conf下的httpd.conf文件)123&lt;Directory&gt;Require local&lt;/Directory&gt; 将 Require local 修改为 Require all granted 真心是尝试过很多修改方法，网友们也说去修改什么allow from all类似这种，都有尝试过。可能是版本不同吧，本方法经测试OK，希望对大家有帮助。]]></content>
      <tags>
        <tag>wamp</tag>
        <tag>apache</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[前端框架MVC、MVVM、MVP介绍]]></title>
    <url>%2F2017%2F04%2F24%2FMVC%E4%BB%A5%E5%8F%8AMVVM%20MVP%E4%BB%8B%E7%BB%8D%2F</url>
    <content type="text"><![CDATA[1. MVCModel-View-Controller(模型-视图-控制器)是最常见的软件架构之一，业界有着广泛应用。 视图（View）：用户界面 控制器（Controller）：业务逻辑 模型（Model）：数据保存 各部分之间的通信如下： View传送指令到Controller Controller完成业务之后要求Model改变状态 Model将新的数据发送到View，用户得到反馈 接受用户指令时，MVC的两种方式：（互动模式） 另一种是直接通过Controller接受指令 2. MVPMVP模式将Controller改名为Presenter，同时改变了通信方向 各部分之间的通信，都是双向的 View与Model不发生联系，都是通过Presenter传递 View非常薄，不部署任何业务逻辑，称为“被动视图”（Passive View）,即没有任何主动性，而Presenter非常厚，所有逻辑都部署在那里 3. MVVMMVVM模式将Presenter改名为ViewModel，基本上与MVP模式完全一致 唯一的区别是，它采用双向数据绑定（data-binding）:View的变动自动反映在ViewModel，反之亦然。Angular和Ember都采用这种模式]]></content>
      <tags>
        <tag>java</tag>
        <tag>eclipse</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ionic安装和项目的创建]]></title>
    <url>%2F2017%2F04%2F24%2Fionic%E5%AE%89%E8%A3%85%E5%92%8C%E9%A1%B9%E7%9B%AE%E7%9A%84%E5%88%9B%E5%BB%BA%2F</url>
    <content type="text"><![CDATA[说来惭愧，都说隔行如隔山，没想到自己对同行的了解都微乎其微，还成天称是程序猿，直到前几天自己才听到Ionic,上度娘一问，瞬间就泪崩了，竟然在我身边有PhoneGap、cordova、AngularJS、nodejs、npm等等这么多“赫赫有名”的专有名词我以前竟然听都没听到过，可想自己是有多无知，以下是我这几天科普来的，错误之处还望指出，谢谢！ What is the Ionic？Ionic 是一个强大的 HTML5 应用程序开发框架，号称Advanced Html5 Hybrid Mobile AppFramework 是 AngularJS 移动端解决方案 可以帮助您使用 Web 技术，比如 HTML、 CSS 和JavaScript 构建接近原生体验的移动应用程序。 Ionic 主要关注外观和体验，以及和你的应用程序的 UI 交互，特别适合用于基于 Hybird 模式的 HTML5 移动应用程序开发..…. What is the PhoneGap ?PhoneGap是一个用基于HTML，CSS和JavaScript的，创建移动跨平台移动应用程序的快速开发平台。PhoneGap是一个跨平台的移动app开发框架，可以把html css js写的页面打包成跨平台的可以安装的移动app，并且可以调用原生的几乎所有的功能，比如摄像头，联系人，加速度等。 What is the Cordova ?Cordova提供了一组设备相关的API，通过这组API，移动应用能够以JavaScript访问原生的设备功能，如摄像头、麦克风等。 Cordova是PhoneGap贡献给Apache后的开源项目，是从PhoneGap中抽离出的核心代码，是驱动PhoneGap的核心引擎。有点类似Webkit和Google Chrome的关系。渊源就是：早在2011年10月，Adobe收购了Nitobi Software和它的PhoneGap产品，然后宣布这个移动Web开发框架将会继续开源，并把它提交到Apache Incubator，以便完全接受ASF的管治。当然，由于Adobe拥有了PhoneGap商标，所以开源组织的这个PhoneGap v2.0版产品就更名为Apache Cordova。 What is the AngularJS ?AngularJS 是一个JavaScript 框架。它是一个以JavaScript 编写的库。AngularJS 使得开发现代的单一页面应用程序（SPAs：Single Page Applications）变得更加容易。 AngularJS 把应用程序数据绑定到 HTML 元素。 AngularJS 可以克隆和重复 HTML 元素。 AngularJS 可以隐藏和显示 HTML 元素。 AngularJS 可以在 HTML 元素”背后”添加代码。AngularJS 支持输入验证。 What is the NodeJs?Node.js 是一个基于Chrome JavaScript 运行时建立的一个平台。 Node.js是一个事件驱动I/O服务端JavaScript环境，基于Google的V8引擎，V8引擎执行Javascript的速度非常快，性能非常好。 其实吧，可以认为 Node.js 就是运行在服务端的 JavaScript。 What is the NPM ?NPM是随同NodeJS一起安装的包管理工具，能解决NodeJS代码部署上的很多问题，常见的使用场景有以下几种： 允许用户从NPM服务器下载别人编写的第三方包到本地使用。 允许用户从NPM服务器下载并安装别人编写的命令行程序到本地使用。 允许用户将自己编写的包或命令行程序上传到NPM服务器供别人使用。 新版的nodejs已经集成了npm，所以装了nodejs的话npm也一并安装好了。可以通过输入”npm -v”来测试是否成功安装。 How to make 移动应用(App)有三种方式可以为手机制作移动应用： 原生应用（Native app） 手机网站（Mobile website） 混合应用（Hybrid app） 原生应用（Native app）如上述，你可以根据不同系统平台指定SDK制作对应系统平台下的移动应用，如果你想要为iOS系统创建一款应用，你需要： 拥有一台苹果Mac电脑，当然其他方法也可以，但是我不推荐。作为初学者，一台廉价的Mac Mimi就可以了。 从App store下载Xcode 购买苹果开发者许可证（Apple Developer license）99刀￥一年（如果你想要在App store上发布应用） 你可以利用Swift语言或者它的前辈ObjectiveC语言创建App，Swift 语言在沉重的ObjectiveC语言上做出了巨大改进，如果你决定开发原生app，相比利用ObjectiveC开发原生app，Swift更容易上手，特别是当你有Web开发的背景时。 如果你想要为Android系统创建一款原生应用，你需要： 拥有一台电脑 下载合适的SDKs（后面将会讲到） 购买谷歌开发者许可证（Google Developer license）25刀￥（如果你想要在Google Play Store上发布应用） 利用原生开发技术开发的应用具有速度快和直接利用原生API的优势（你不需要像开发混合应用一样【Hybrid App】作任何中间封装），缺点是，你需要为不同手机系统平台开发不同版本的移动应用。（撰写多套代码） 手机网站（Mobile website）通过手机浏览器可以访问手机网站，手机网站可以根据手机屏幕大小自适应。由于手机网站比较难以维护，一种叫做响应式网站设计（responsive website design）的方法被使用，通过这种方法你拥有一套HTML代码库，你可以通过使用媒体查询（Media queries）根据不同设备不同分辨率（resolutions）改变他们的网站外观。jQuery mobile 是一种出色的移动框架。使用它你可以制作一款移动版本的Web应用程序。移动网站一个显著的优势就是你可以根据需要实时更新他们的内容，而不用去等待苹果Apple或者谷歌Google的审核，劣势则包括低耦合，更少的特征。 混合app（Hybrid app）混合应用基本上是一款手机应用，它和撰写网站的程序语言基本相同，唯一不同的就是他们包含在一个孤立的浏览器中（WebView）， 原生应用通过WebView运行Web应用，混合应用可以调用手机摄像头、GPS等，通过利用插件，混合应用可以调用手机其它的硬件功能，你可以利用开发Web应用的技术开发混合应用。然而，WebView有速度的限制， 制作成熟的3D图像游戏可能不是最好的选择。 安装Ionic1. 需要有JDK和SDK环境，这是Android开发必有的平台（JDK在技术文章003中已经详细阐述了）安卓SDK下载以及环境的配置： 下载地址：（可以使用包含的 sdkmanager 下载其他 SDK 软件包 需要翻墙）立即下载 安卓开发相关资源链接 包含Android Studio 下载后双击安装，指定Android SDK的安装目录，为了方便使用Android SDK包含的开发工具，我们在系统环境变量中的Path设置Android SDK的安装目录下的tools目录。 在Android SDK的安装目录下，双击“SDK Manager.exe”，打开Android SDK Manager，Android SDK Manage负责下载或更新不同版本的SDK包，我们看到默认安装的Android SDK Manager只安装了一个版本的sdk tools。 打开Android SDK Manager，(tools目录下的android.bat)它会获取可安装的sdk版本，但是国内有墙，有时候会出现获取失败的情况。 12345678910111213**配置Android环境变量**- 默认路径安装后，安装完成，开始配置环境变量。- 打开计算机属性——高级系统设置——环境变量- 新建一个环境变量，变量名：ANDROID_HOME，变量值：E:\android_sdk\tools_r25.2.3-windows（以你安装目录为准,确认里面有tools和add-ons等多个文件夹），点击确认。- 在用户变量PATH后面加上变量值%ANDROID_HOME%\platform-tools;点击确认即可。 在系统变量path中添加;E:\android_sdk\tools_r25.2.3-windows\toolsAndroid SDK配置完成，接下来验证配置是否成功。点击运行——输入cmd——回车——输入adb——回车，如果出现一堆英文，即表示配置成功，在输入Android，启动Android SDK Manager。 2. 下载Node.js，安装Node.js下载地址： https://nodejs.org/ 安装都选默认的就行 装好之后，nodejs会默认配好环境变量，你可以去path路径查看 Node Pakcege Manager（NPM）会在安装Node.js时同时安装其它的包，为了检验Node.js是否在Windows上安装成功，在终端上运行下面的命令： node -v 你会获得类似下面的版本信息： v0.12.7 3.安装Git你仅仅需要下载和运行它，根据相应的指引安装即可。为了验证你是否在Windows/Mac上安装Git成功，在终端运行下面的命令行： Git 你会获得如下输出： 4.安装ionic和cordova 打开node.js command prompt使用npm install –g cordova ionic进行安装cordova和ionic（可以分开安装，npm install –g cordova 和 npm install –g -ionic）,很明显，在天朝使用这种方法安装有点行不通。 不用急，咱天朝子民有天朝子民的方法，使用淘宝镜像是网上很多人用的方式输入npm install –g cnpm –registry=https//registry.npm.taobao.org,安装完成之后，以后的插件都可以使用cnpm来替代npm来安装cnpm install –g ionic cordova 如果上面方法还不行，就看这里吧1.npm config –globalset registryhttp://registry.cnpmjs.org 2.npm install –g cordova ionic 查看ionic和cordova是否安装 ionic ionic –v cordova –v 5. 创建项目如果你仅仅只运行ionic start appname 命令，Ionic CLI将会构建一个bootstrap应用（所有需要的构建都会在appname文件夹里面），伴随着空的模板，这儿有其他三个模板包括blank（空模板），sidemenu（侧边栏）和tabs（底部导航栏），除此之外，你可以使用Github repo starters和Codepen URL starters等模块，为了获得更多的starter apps模块，你可以访问 这篇文章 ，在我们的例子中，我们将会使用sidemenu（侧板栏）模板，在终端运行下面的命令： ionic start g_app1 sidemenu 通过cd命令进入你的项目:$ cd g_app1 设置项目使用Sass:ionic setup sass 在本地浏览器中实时开发:ionic serve 添加一个系统平台 (ios or Android):ionic platform add iOS [Android] 注意: iOS 开发需要OS X系统 注意2：在ionic build的时候需要使用VPN 否则它的包下载的非常慢！！！ 详细见Android平台开发指南 编译你的app:ionic build 在模拟器上运行你的app:ionic emulate 在真机上运行你的apps（安装应用到插入电脑的Android手机上）:ionic run 使用ionic打包服务打包一个app:ionic package 12345注意：npm install -g ionic cordova （此处安装很费劲，，，，如果安装不上，请直接使用国内镜像），也可以安装cnpm，这样就容易装cordova和ionicnpm install -g cordova --registry https://registry.npm.taobao.orgnpm install -g ionic --registry https://registry.npm.taobao.org]]></content>
      <tags>
        <tag>ionic</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[到底是我们改变了世界，还是世界改变了我们]]></title>
    <url>%2F2017%2F04%2F24%2F%E5%88%B0%E5%BA%95%E6%98%AF%E6%88%91%E4%BB%AC%E6%94%B9%E5%8F%98%E4%BA%86%E4%B8%96%E7%95%8C%EF%BC%8C%E8%BF%98%E6%98%AF%E4%B8%96%E7%95%8C%E6%94%B9%E5%8F%98%E4%BA%86%E6%88%91%E4%BB%AC%2F</url>
    <content type="text"><![CDATA[图片来自网络 曾梦想仗剑走天涯，无奈梦终究是梦，现实还是太骨感， 走出校门，好多事你都需要考虑，毕竟是一个成年人，有着健全的身体，在学校心里边想着：丫掌握这么多技术，出去随便干什么都可以养活的了自己，更别说身上还扛着这么大的一把剑 但是在每天投着上百份的简历，结果约到的面试还是聊聊无几之后，心里就不由为自己打上了一个大大的疑问号？别人干起来那么轻松的事，丫为什么到你身上这么难，每走一步都是一个坑 久不联系的同学，找到你就给你塞一个高难度任务，在你自己的任务都还没完成的情况下，耗费整天的时间帮他解决问题，解决不好总觉的成了千古罪人 感觉待在哪儿都那么不自在，总觉的自己怎么那么多余，一无是处，浪费资源 但是第二天醒来，该干嘛还是得干嘛，因为毕竟的活着，不为别人，只为能靠自己的力量活着 如果哪一日要是有所小成，我想说绝不是因为别人，而是这个社会把你变的这般厚颜无耻。。。。。。 到底是我们改变了世界，还是世界改变了我们？]]></content>
      <tags>
        <tag>杂文</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[前端开发面试题一]]></title>
    <url>%2F2017%2F04%2F24%2F%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E9%9D%A2%E8%AF%95%E9%A2%98%E4%B8%80%2F</url>
    <content type="text"><![CDATA[1. WEB标准以及W3C标准是什么？标签闭合、标签小写、不乱嵌套、使用外链的css和js、结构行为表现的分离 2. xhtml和html有什么区别？XHTML元素必须被正确的嵌套，闭合，区分大小写，文档必须拥有根元素 3. 行内元素有哪些？块级元素有哪些？行内元素 a b img em i span input select 块级元素 div p h1-h6 form ul dl ol table 4. 行内元素和块级元素有什么区别？行内元素不可以设宽高，不独占一行 块级元素可以设置宽高，独占一行 5. 我想让行内元素跟上面的元素距离10px，加margin-top，padding-top可以吗？margin-top和padding-top无效 6. CSS的盒模型由什么组成？内容、padding、border、margin 7. 说说display属性有哪些？可以做什么？display:block 行内元素转换为块元素 display:inline 块级元素转换为行元素 display:inline-block 转换为内联元素 8. CSS的选择符有哪些？ id选择器(#myid) 类选择器(.myclassname) 标签选择器(div,h1,p) 相邻选择器(h1+p) 子选择器(ul&gt;li) 后代选择器(li a) 通配符选择器 属性选择器(a[rel=”exrernal”]) 伪类选择器(a:hover;li:nth-child) 9. 哪些CSS属性可以继承？ 可继承性：font-size font-family color 不可继承性：border padding margin width height 10. CSS优先级算法如何计算？ !important&gt;id&gt;class&gt;标签 11. text-align:center 和 line-height有什么区别？ text-align是水平对齐 line-height是行间 12. 前端页面由哪三层构成，分别是什么？作用是什么？ 结构层（html）、表示层（css）、行为层（js） 13. 标签上的title和alt属性的区别是什么？ alt是图片属性，让搜索引擎认识你的图片，当图片不显示的时候显示 title是网站的标题，是SEO中最重要的属性 14. 使用css图片精灵有什么好处？ CSS图片精灵将一张张小的图片整合到一张大的图片上，减轻HTTP的请求数量。 15. 什么是语义化的HTML？ 标签使用的合理性，对于搜索引擎的抓取有好处 16. b标签和strong标签，i标签和em标签的区别？ 后者有语义 前者则无 17. title与h1的区别？ title侧重网站的信息标题 h1侧重于文章主题 站在SEO的角度来看，好网站少不了title，好文章少不了h1标题，title权重高于h1 18. 清楚浮动的几种方式，各自的优缺点？ 1.使用空标签清楚浮动clear:both(缺点：增加无意义的标签) 2.使用overflow:hidden;(使用ZOOM等于1 用于兼容IE) 3.使用after伪元素清楚浮动（适用与非IE浏览器） 19. display:none 和 visibility:hidden的去别是什么？ visibility:hidden;将元素隐藏，但还是占着位置 display:none; 将元素的显示设为无，不占任何位置 20. 说出几种IE6 BUG的解决方法？21. 域名和服务器的相关知识？ 域名：www.baidu.com 服务器：后台处理程序以及数据库（对客户端的请求进行相应的响应） IP地址指向域名 192.168.1.1——》www.baidu.com 22. HTTP状态码都有哪些？ 200OK 客户端请求成功 400Bad Request 客户端请求有语法错误，不能被服务器所理解 403Forbidden 服务器收到请求 但是拒绝提供服务 404Not Found 请求资源不存在 输入了错误的URL 500 Internet Server Error 服务器发生不可预期的错误 503 Server Unavailable 服务器当前不能处理客户端的请求，一段时间后可能回复正常 23. 如何优化网页加载速度？ 1.减少css、js的文件数量和大小（减少重复性代码，代码重复性利用），压缩CSS和JS代码 2.图片的大小 3.把CSS样式表放置于顶部，把JS放置于页面底部 4.减少http的请求数 5.使用外部的js和css 24. position属性absolute和relative的区别？ absolute绝对定位 相对于浏览器定位 relative相对定位 相对于前面的容器进行定位 25. HTML5有哪些新标签？26. CSS新增伪类有哪些？ p:first-of-type p:last-of-type p:only-of-type p:only-child p:nth-child(2) :enabled、:disabled 控制表单控件的禁用状态 :checked 单选框和复选框被选中 27. 全局变量和局部变量有什么区别？28. 谈谈 this对象的理解 this是js的一个关键字，随着函数的使用场合不同，this 的值会发生相应的变化。但是总有一个原则，那就是this指的是调用函数的那个对象 this 一般情况下，是全局对象Global。作为方法调用，那么this就是指这个对象 29. document.write和innerHTML有什么区别？ DOM的innerHTML是DOM元素对象的一个属性 而write是document对象的一个方法 30. JSON是什么？ JSON是一种轻量级的数据交换格式。它是基于JS的一个子集。数据格式简答，易读写，占用带宽小。 {‘age’:12,’name’:’winter’} 31. ajax是什么？ajax的交互模型？同步和异步的区别？ 1.通过异步模式，提升了用户体验 2.优化了浏览器和服务器之间的传输，减少了不必要的数据往返，减少了带宽占用 3.Ajax在客户端运行，承担了一部分本来由服务器承担的工作，减少了大用户量下的服务器负载 二、ajax的最大特点是什么？ Ajax可以实现动态不刷新(局部刷新) 三、ajax的缺点? ajax不支持浏览器的back按钮 安全问题 ajax暴露了与服务器交互的细节 对搜索引擎的支持比较弱 破坏了程序的异常机制 不容易调试 32. 你常用的JS框架33. 工作流程，你怎么来实现页面设计图，你认为前端应该如何高质量的完成工作？34. 介绍项目经验、合作开发、独立开发35. 开发过程中遇到的困难，如何解决？36. 对前端界面工程师这个职位是怎么样理解的？它的前景会是怎么样？前端是最贴近用户的程序员，比后端、数据库、产品经理、运营、安全都近 1、实现界面交互 2、提升用户体验 3、有了Node.js前端可以实现服务端的一些事情 前端是最贴近用户的程序员，前端的能力就是能让产品从90分进化到100分，甚至更好。 参与项目，快速高质量完成实现效果图，精确到1px 参与团队成员，UI设计，产品经理的沟通 做好的页面结构，页面重构和用户体验 处理hack，兼容、写出优美的代码格式 针对服务器的优化、拥抱最新的前端技术 其他相关的加分项 都知道和使用过哪些编辑器，都使用和了解过哪些日常工具？ 都知道有哪些浏览器内核？开发过的项目都兼容哪些浏览器？ 瀑布流布局或者流式布局是否有了解？ HTML5都有哪些新的API？ 都用过什么代码调试工具？ 是否接触或者了解过重构？ 你遇到比较难的技术问题是什么？你是如何解决的？ 什么叫优雅降级和渐进增强？ 优雅降级/平稳退化： Web站点在所有新式浏览器当中都能工作，如果用户使用的是老式浏览器，则代码会检查以确认他们是否能正常工作。由于IE独特的盒模型布局问题，针对不同版本的IE的hack实践过优雅降级了，为那些无法支持功能的浏览器增加候选方案，使之在旧式浏览器上以某种形式降级体验，却不至于完全失效。 渐进增强： 从被所有浏览器支持的基本功能开始，逐步的增加那些只有新式浏览器才支持的功能，向页面增加无害于基础浏览器的额外样式和功能的。当浏览器支持时，它们会自地呈现出来并发挥作用。 跨浏览器，网页性能优化，seo，深刻理解Web标准，对可用性、可访问性等相关知识有实际的了解，包括代码的可维护性、组件的易用性、分层语义模板和浏览器分级支持等。]]></content>
      <tags>
        <tag>面试题</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[前端开发面试题二]]></title>
    <url>%2F2017%2F04%2F24%2F%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E9%9D%A2%E8%AF%95%E9%A2%98%E4%BA%8C%2F</url>
    <content type="text"><![CDATA[HTML 行内元素关注行内置换元素，类似inline-block方式展现 input textarea img select 浏览器内核基于 Webkit:Chrome-blink 、腾讯X5、UC U3 、华为T9 基于 Gecko：Firefox 基于Trident：IE 基于 Presto：Opera 兼备Webkit&amp;Trident：猎豹、360 W3C标准包括结构(xhtml、html)、表现(css)、行为(ecmascript、dom)的标准。更好的规范浏览器渲染页面，使得同一套网页规范尽可能在多套浏览器中表现一致。提高开发者开发效率和用户体验。 Doctype用来告诉浏览器以什么文档类型解析html，没有的话，会按照向下兼容的怪异模式进行解析。 h4及以下需要引用dtd声明，dtd有标准型和过渡性两种。两者区别可忽略 h5不急于SGML标准，因此不需要引用dtd 标签语义化的重要性1.便于浏览器 搜索引擎解析 2.在没CSS情况也以一种文档形式展现，便于阅读 3.有利于SEO 4.有利于代码的阅读和维护 strong与em的异同同：都是对文本起强调作用 异：em以斜体展示文本，strong更利于SEO识别语义 SEO 详细可分为白帽SEO和黑冒SEO SEO的主要方面1.网站标题、关键字、描述(meta) 2.网站结构布局优化：目录层级不要太多，尽量让Spider跳转3次就可以到达网站的任何一个内页 3.网站代码优化 SEO会过滤掉display:none的元素、利用]]></content>
      <tags>
        <tag>面试题</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[如何提升你的面试机会？]]></title>
    <url>%2F2017%2F04%2F24%2F%E5%A6%82%E4%BD%95%E6%8F%90%E5%8D%87%E4%BD%A0%E7%9A%84%E9%9D%A2%E8%AF%95%E6%9C%BA%E4%BC%9A%2F</url>
    <content type="text"><![CDATA[本文转载于stromzhang博客 原文链接 最近太多人给我留言，说投了好多简历石沉大海，杳无音信，感觉都要放弃编程了，还有人给我留言，说自己是培训机构出来的，老师让学生们伪造简历，说大家都这么干的，而自己对伪造简历这种行为很不耻，但是不伪造又很难找到工作，很困惑，不知道该怎么办？好吧，今天我就来给大家写篇文章解答下，顺便教教你们如何提升你的面试机会。 绝不要伪造简历首先说说培训机构教学员伪造简历这件事，貌似现在已经成培训行业潜规则了，培训出来之后教学员伪造简历说 3 年工作经验，这事不是谣言，我自己面试就有亲自经历过。现在大家应该都知道，IT 行业对培训出来的人很抵触，很多企业看到简历上写培训出来的，基本就不考虑了。为什么？难道培训出来的人就低人一等？我想不是，主要就是这个行业环境被培训机构玩坏了。 培训机构基本就是看哪个行业火，哪个行业有利可图，然后疯狂的招生，学费还贵的要死，前两年的移动端开发就是一个鲜活的例子，而如今行业不景气，就开始教学员伪造简历，就在培训的时候做了一些小 demo，简历上能被包装成有过 2、3 年左右的大型项目工作经验，真把企业技术面试官当成跟他们一样傻了？ 可以这么说，有没有过工作经验，什么技术水平，技术面试官问几个问题就基本都清楚了，因为他们面试过太多的人了，见识过各种各样的面试者，技术层面想忽悠过去基本不太可能。当然按照概率的话你是有可能遇到一个人傻钱多的公司，你成功的忽悠过 HR、技术 Leader、CTO、CEO 等，这也算你有本事，但是伪造简历这么低级的行为都没能识破，那这家公司也基本没什么前途了。 伪造简历被识破事小，关键很有可能拉入黑名单。举个例子，如果你投递阿里，被发现伪造简历，那么将拉入黑名单，你之后技术提升了，再想加入阿里可能都没机会了，不止工作经验，简历上你的基本信息、教育经历、工作经历等通通都要真实有效，因为稍微正规点的公司在入职前都会做背景调查，背景调查一方面防止你跟之前公司没有劳务纠纷，另一方面就是为了确保你提供的信息真实有效，往小了说是诚实的问题，往大了说就是人品与价值观的问题，而人品远比技术重要的多的多！ 所以，无论任何时候，都不要伪造自己的简历！ 可以适当的包装下自己的简历一般来说企业的面试流程是由 HR 先筛选一遍简历，然后再把筛选过后的简历提供给技术部门，但是 HR 通常是不懂技术的，所以 HR 筛选简历一般会按照一些硬性的标签进行筛选，比如 「2 年工作经验」、「985/211」、「本科以上」等之类的进行标签筛选，因为通常一份 JD 发出去，招聘网站上会有一大堆简历过来，先由 HR 进行一轮筛选是比较有效的方法，但是必须承认这种粗略的筛选肯定会错过一些人才的，比如确实有一些牛人就不是本科学历，但是无所谓，没有一种办法能百分百的公平，企业会按照他们自己认为最有效的方式进行筛选，也许会错过很多优秀的人才，但是企业只要能找到他需要的人才就行了。 然而很多人可能在第一步 HR 的筛选就被略过了，所以这个时候适当的对简历进行包装下也不是不可以，但注意，适当的包装不是恶意提供虚假信息的伪造，性质上是不一样的。 比如你确实只毕业一年，有一年的工作经验，但是你在毕业之前有过半年多的实习经验，这个时候我觉得可以把实习经验也算作工作经验中来，当然前提是你真的是实习过，而不能伪造你的实习经历。 如果你自认能力特别强，工作经验也可以多说点。比如我曾经见过一个一年工作经验的人，简历上写着 2 年工作经验，我问他：为什么你只毕业一年就有两年的工作经验呢？他回答说：这一年天天在加班，那一年工作经验是加班加出来的。一开始我以为是伪造简历，后来聊了聊发现这人的能力确实很强，而且接触到的领域很广泛，完全不像是一年工作经验的，了解到这一年来他加班不只是单纯的做项目，有时候加班也是在做技术研究，提升自己，这个时候虽然知道他有点伪造简历的嫌疑，但是毕竟能力在这摆着，并没有给人一种很浮夸的感觉。当然，前提是此人能力确实很强，否则的话可能根本不会继续聊下去，所以不要轻易模仿。 另外在项目经验上，很多人说没工作过，简历没有项目经验可写，在简历上项目经验是非常重要的一环，可以说是最重要的一部分，没项目经验在现在的环境很难找到工作，如果真的没项目经验可写，那么完全可以写上自己练手过的项目，或者自己模仿的一些作品，都可以算作项目经验，这也可以算是在可接受的范围内一种包装自己简历的方式。 尽量不要海投大部分人找工作都是在一些招聘网站海投，其实这是很没有效率的一种做法。建议有针对性的投递，比如每次选 10 家看着不错的公司进行投递，没有音信了再选择另外一批，这样做的好处是更加有针对性，于企业、于自己都是更有效率的方式，而且这种方式选择公司环境与岗位职责真的适合自己的企业，另一方面万一第一轮筛选过了，要你去面试也不至于对这家公司一无所知。 一股脑的海投倒是省事了，但是你没有任何准备与期待，自己技能与公司要求不匹配只会浪费双方的时间，这种做法无疑病急乱投医。面试这件事本身是需要你专门花时间去做准备的，准备越充足，机会才能更加青睐于你。 另外，这里推荐大家到一些新兴互联网招聘平台投递，传统招聘平台不管是公司质量还是招聘效率、体验都没法比。这里推荐几个：拉勾、哪上班、简寻、100offer、BOSS直聘等，具体地址请自行搜索。 优先内推其实最快最有效然后又确保百分百不会被 HR 略过你的简历的方式是内推，所以如果你想加入一家公司，你尽量从朋友、同事、学长、朋友的同事的朋友中争取到内推机会，所以这里体现出了你平时的人缘与积累的人脉了。当然内推也只是能保证你的简历一定能被面试官看到而已，但是能不能通过面试还是得看自己的技术能力。 主动自荐如果你没有内推资源，但是又不想跟其他所有人一样海投，那么我建议你主动争取机会，也就是自荐。在了解到一家公司招聘之后，你在网上想办法得到这家公司的技术 Leader 的邮箱，不管是微博、博客、GitHub、还是招聘网站等，总之技术人的邮箱一般还是有办法得到的，发邮件给他，附带上自己的简历。 但是我要提醒你们的是，那些只发自己简历一句话介绍都没的人，基本跟海投一样，机会很渺茫。你应该在邮件的正文里简单的介绍下自己，并且表达对该公司的认可与热情，最好还能了解下该公司的业务，或者对产品提出自己的一些意见，这些都会提高你被技术面试官发现的概率。一般来说，直接发给技术面试官的求职信还是蛮少的，所以这种情况技术面试官都会看一下你的简历的，如果简历符合他们的招聘需求，则会要求 HR 联系你的。 比如，我曾经就收到过一封邮件，邮件里除了他的简历外，还对我家产品提出了非常有价值的建议，一下就吸引了我的注意，后来经过层层面试，技术能力也很不错，在技术能力差不多的情况下，我们优先录取了他。因为对企业来说，直接发给技术面试官自荐信起码说明了自己很主动，还对产品提出了建议，说明了对公司了解很多，做了不少准备工作，如果你还关注了这家公司很长时间，表达出了特别期待加入的热情，通常来说入职自己向往的企业工作后会很有激情，并且很积极主动，很有冲劲，而企业大多都喜欢招聘这样的员工。 最后，以上就是我能想到的能帮助你们在茫茫简历中脱颖而出的一些点，希望能提升点你们的面试机会，祝大家都能找到一份心仪的工作！]]></content>
      <tags>
        <tag>面试题</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[如何脱颖而出]]></title>
    <url>%2F2017%2F04%2F24%2F%E5%A6%82%E4%BD%95%E8%84%B1%E9%A2%96%E8%80%8C%E5%87%BA%2F</url>
    <content type="text"><![CDATA[如何脱颖而出 版权声明：本文为 winter文章，可以随意转载，但必须在明确位置注明出处！！！ 前两天有一位同学在小密圈里问我一个问题，说自己高中学历，想要学习编程，不知道可行么？ 我给他的回答是：很难，非常难，比你想象的还要难，但是难不代表不可行。 有别的热心的同学评论说，没什么不行的，只要比别人更努力就行，你看张哥，当初不也是非科班，学渣出身么，一步步靠自己努力走到现在。 是啊，很多读者喜欢拿我的经历来激励自己，我毕业转行做开发的时候，已经比同龄人落后太多太多，中间有过不少波折，但是走上正轨，确定方向之后，很快 2、3 年的时间就取得飞快进步，并且在业内也积累了一点名气，之后又从技术到产品、管理，业余时间从写博客，再到公众号，都取得了点小成就，大家都知道我很努力，甚至到拼命的地步，所以，很多人把我取得的成就全部归功于我的努力，其实，今天，我要说，这是一个假象！ 不可否认，努力固然重要，但是如果只是单纯努力的话，我相信这世界上努力的人随处可见，这世界从来不缺努力的人，但是，如何能在这一群努力的人中间，脱颖而出，这才是一个关键点，今天，我就在这里分享下我私人总结的一点经验。 1. 提高自己的起点 不管你是高中学历也好，还是跟我一样非科班的学渣也好，其实本质上我们的先天条件比别人差，时间周期也比别人晚，我们要想赶上那些先天条件比我们好的同学，比他们更努力，虽然可以赶上一部分人，但是很多条件好，同样很努力的人比比皆是，这个时候，就需要寻找点方法了，我总结的第一个方法就是–提高自己的起点。 举个例子，我们大部分人学习编程的时候，大都是看视频、百度、CSDN 博客、一些国内论坛等，可以这么说，即使是现在，这仍然是大部分人学习的主要方式。但是我当时就不这么想，大家都这么学习，我如何才能效率更高呢？ 所以，我当时的做法，当别人都在看视频的时候，我坚持看博客、文档学习，因为看视频很没效率，看博客除了节省我的学习时间之外，还提高了我的阅读能力。当别人在用百度，查看国内各种二手资料的时候，我坚持使用 Google，查看国外大牛博客，我英语很差，这对我来说很难，但是我硬逼着自己，坚持下去，当别人混国内小白论坛的时候，我就开始混 GitHub 开源社区，学习国外大牛的开源项目，当别人在看国内翻译的资料的时候，我却逼着自己去官方看英文文档。 这一切的一切，本质上都是为了提高自己的起点，虽然我起步晚，但是我起点高，慢慢的就会缩小差距，时间长了，甚至后来居上。 当然，前提是自己得衡量自己的能力，就好比，你才刚学会写一个 Hello World ，你说你要去看 Android 源码，这不现实。所以，我在最初入门的时候也经历过看视频，百度的阶段，但是一旦自己上手之后，我坚定的逼着自己让自己的起点更高。 2. 保持专注 很多人其实论努力程度不输任何人，但是总感觉自己进步非常慢，那么原因很可能是你不够专注。我看到这么一个现象，IT 界技术日新月异，动不动就会出来一门新语言，新框架，尤其前端界更是，很多人就看到有一个看似很火的东西出来了，然后去学习，另一个东西出来了，又忙不迭的去学习，生怕错过了时间窗口就错过了巨大的机会。 然而殊不知，万变不离其宗，你连手上的事都没做好呢，就想着可能会错失巨大的机会，在编程界，其实各个语言都是通的，把一门领域学好学精，后面再涉及其他领域也是很快速的。 有人可能会问，不紧跟时代潮流，错过了机会怎么办？ 潮流固然要关注，但是我敢这么说，你连手上的事都还没做好呢，即使机会来了，一样不属于你。我们总是夸大了时间窗口的作用，以为错过了互联网、错过了移动互联网，决不能错过下一个风口浪尖了，这真的是一个误区，看似每一个风口来了，抓住机会的都是第一时间进入的，殊不知，第一时间死掉的比存活下来的不知道要多出多少，能存活下来的，只是被人忽略了自身的实力而已，而且很多后来居上的例子数不胜数。 所以，你不妨专注在一件事上，专注手上正在做的事，就如我博客所说：做好现在的事！ 3. 把事情做到极致 这世界上很多人都很专注，甚至有几十年如一日在自己的工作岗位上兢兢业业，但是专注在一件事上还不够，你要把事情做到极致才行。 这个特质对很多职场中的同学非常有用，很多刚入职场的同学总是感觉自己做的工作没什么用，就是打杂的，抱怨自己被大材小用了，然而，就是这么简单的工作，你能把它做好，做到极致，一样很有价值，你也才能因此得到更多的机会。 我刚加入公司的时候，甚至做过一段时间的「电话管理员与网管」，公司每每调换座位的时候，我从来都是利用下班时间帮大家调换电话线，我每次都会亲自验证，要知道很多电话不在同一楼层，这非常麻烦，但是从来没出过错，人事都觉得不可思议，因为之前的人负责的偶尔调错很正常。除此之外，我觉得机房里那些电话线非常混乱，杂乱无章，专门重新做了整理，这些工作，在之前，没人愿意去做。 我在给别人重装系统的时候，每次都会把驱动、常用办公软件一并给装好，之前，也从来没人想过这事。 正因为我把在公司的每件事都做到极致，我才能因此得到更多的信任与机会。 现在我在公众号写作，除了内容之外，我会力求把所有细节都做好，字体大小、标点、间距排版等等，我都会很在意，直到现在也一直在改进。 很多人总觉得自己工作做的还不错，分配的任务做完了，总觉得没事做，然而问问你自己，是否还可以做的更好？ 这个功能是不是还有更好的实现方式？代码是不是还可以更简练些？这个动画是不是还可以更流畅些？是不是有些历史遗留问题可以解决的？有些更好的框架是不是可以考虑学习应用在项目中？性能是不是还可以更好些？ 任何一件小事，做到极致，都是一项了不起的能力！ 4. 不要给自己设限 之前有人问我这么一个问题，说之前一直做技术 Leader 的角色，公司觉得他做的还不错，想让他做项目管理，他很纠结，担心自己做不好，而且还影响了技术上的进步。 如果是我，我会毫不犹豫的尝试。 很多人知道我，我自己是从一位不起眼的程序员，一步步走到公司管理层的，我现在参与公司的重大决策，现在除了技术之外，我涉及到的领域非常多，有产品、运营、商业、管理、投资等。 我当初一样面临过这种选择，一样犹豫过，一样有各种担心，但是当我走过来，我才明白我自己的职业选择都是来自于我的一个特质：我从来不给自己设限。 我自己的性格比较开放，喜欢折腾，喜欢接触不同的领域，有很多奇特的想法，比如我认为现在国家规定一个人只能同时在一家公司上班不科学，我认为未来是一个多元化人才的时代，一个人如果只要有能力，在一家公司写代码的同时，为什么不能同时在另一家公司做销售呢？只不过时代还不认可我这么前卫的想法。 但是，只要有机会，我都会接触不同的领域，我不会优先考虑我做不到，我只会先考虑，如果我做到了，会不会对自己的能力有很大帮助。 所以，当我有一个工程师转到管理岗位的机会时，我尝试了，毕竟，万一尝试之后，不适合自己，或者自己做不到，又能如何呢？大不了再做回老本行好了。幸运的是，我成功了，而且一直做到公司管理层。 除此之外，我还经常跟公司产品经理一起讨论产品，有很多不错的需求甚至都是我来提出的。由于我自己在公众号的运营经验，我有机会还教下我们的媒体运营同事，如何排版，如何更好的运营用户等。 我说我在商业、投资领域也有涉及，很多人可能觉得我又扯淡了，这些都是我在老板身边学到的，老板是投资出身，在这方面很厉害，毕竟呆的时间久了，自己总会有所感染，而且在去年还跟着老板一起在上海投资了一家吐司店，一年多的时间，估值翻了将近十倍，当然，由于自己第一次投资，还没什么经验，投资额度较小。 这个世界从来都是有得必有失，我做了管理之后，在 Android 技术领域上花费的时间很少了，也不用自己写代码了，但是我在其他领域的能力收获非常大，我也一直在向我口中所说的多元化人才努力。 有人可能会有疑问了，不给自己设限不跟上面说到的专注矛盾么？ 当然不矛盾，不给自己设限的前提一定是自己具备了至少一项不错的能力，而且即使你再怎么专注，也没法一天 24 小时都在做一件事，即使你很专注，你也会有看电视、娱乐的时间。 所以，专注的做好手上的事固然很重要，但是不要闷头工作，也偶尔抬头看下外面的天空，拓宽下自己的视野，在有其他领域机会的时候，不妨勇敢的去尝试下。 5. 执行力 我们都知道努力很重要，但是很少有人能做到。 比如，即使我一而再再而三的号召大家，要写博客，学写作，又有几个人做到了呢？你知道，每天只需要学习 2 小时，一年之后，你的能力就有很大提高，又有几个人能做到？ 所以，大部分人的执行力很差，可能你一时做到了，也没法坚持下去，而把自己的执行力持续下去恰恰是最关键的一环，也就是所谓的：「道理我都懂，可是我做不到」。 这个话题很长，后面我会抽时间单独写篇文章，以自己的亲身经历总结了一点方法，教教大家如何才能改变这一现状，提高你的执行力，让你的努力更容易坚持下去。 以上，就是我所总结的，如何让你脱颖而出的一些技巧，希望对部分同学有所思考与帮助！ PS：可能有些人，看了以上我的总结，会觉得，这些东西我都知道，但是，真的是这样么？我敢说，在你没看这篇文章之前，你丝毫没有意识到自己比别人差在哪里，你只是看了之后，恍然大悟罢了。 还有些人，可能会觉得是鸡汤，某种意义上来说，确实是鸡汤，但是却都是自己真实经历的经验总结，有时候，鸡汤可能比所谓的干货更有用，很多道理其实大家都懂，我们做出改变缺乏的只是一个推动力。]]></content>
      <tags>
        <tag>面试题</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[无论如何请再坚持下]]></title>
    <url>%2F2017%2F04%2F24%2F%E6%97%A0%E8%AE%BA%E5%A6%82%E4%BD%95%E8%AF%B7%E5%86%8D%E5%9D%9A%E6%8C%81%E4%B8%8B%2F</url>
    <content type="text"><![CDATA[有人告我说，说在大城市找不到工作，生活很困难，要混不下去了，准备回老家发展、找工作去。 不知道有多少人有这样的想法，起码现在的我就有，但是我想告诉你们的是，无论如何，请务必在大城市再坚持下。 没有去过大城市的人，第一印象对大城市的印象是，房价高的离谱，消费高的吓人，节奏快，压力大，心里不理解那些在大城市为了房子打拼一辈子的房奴到底是哪根筋搭错了。没错，在没来上海之前以上也是我心里对大城市的看法，我还心想，估计这辈子都不太可能会在大城市待下去，人活着怎么都是一辈子，为何不能活的潇洒些呢？ 然而，我来到上海之后，包括这些年自己的亲身经历，让我重新认识了我眼中的大城市。 不得不承认，大城市是残酷的。在这里，你没有亲人，甚至没有朋友，你没有任何人可以依靠，生存全靠自己，脱离了家人亲戚的照顾，你从来不会知道生活有多么困难，现在的时代，无论你家里再怎么贫穷，但是在家里呆着，解决温饱绝对没问题。然而在大城市，不工作是真的是会饿死人的，这里干什么都需要钱，没有钱寸步难行，在大城市，你首先考虑的绝不是生活条件的问题，而是生存的问题，在没来上海之前，我从来没法想象租住的房子竟然会这么小，更没法想象会为了省一块钱的交通费，每天都多走将近一个小时的路程，她，就是这般的不近人情。 然而，大城市是公平的。试想下，在老家办事是怎样的？不管是公事私事永远别想按照正常流程办事，想办成事永远都得陪着笑脸，找关系，送礼。不管你在哪个企业工作，人际关系和家族关系基本就是一切，在这里，努力算什么东西，能力算个屁。而在大城市，没人在乎你的家庭背景，人际关系，这里人人平等，你只要有能力，就能得到更多机会，得到应有的回报，再也不用陪着笑脸，在酒桌上谈生意，也许我们一无所有，但是起码我们还可以努力。在这里，即使输你都输的心服口服，因为那些比你强的人往往比你更努力，比你更有能力。 大城市机会更多，而且有志同道合的朋友一起奋斗。很多人觉得在大城市找不到工作，那就回家试试吧。在大城市数以万计的工作机会你都找不到，回家就能轻易找到工作了？当然也许托家里人找点关系，可能会在家里找到工作，而且很有可能是机关部门，拿着那少的可怜的工资，每天上班就是喝茶、聊天、游戏、吃饭、睡觉、上网，可能还需要没事的时候拍拍马屁，你才 20 多岁，这真的就是你想要的生活么？你想找个志同道合的人聊聊互联网，聊聊科技，在别人眼中你就是异类。然而在大城市，你周围身边有各种各样志同道合的小伙伴，他们有着共同的爱好，共同的梦想，可以一起聊互联网、聊产品、聊技术、聊创业，你在这里可以接触各种各样的机会，接触到第一手的信息与技术，身边充斥着各行各业普通的不能再普通的专业人才，无形中会逼着你去学习，去进步，甚至很有可能一起做出一番事业说不定。 当然，如果我家庭条件不错，家族关系还可以，在老家买辆好车，盖栋楼房，娶个姑娘，过着无忧无虑的生活，这是谁都向往的，没有任何一个人愿意背井离乡，远离父母，孤身一人来到陌生的城市打拼，然而我没有这样的家庭条件，我想可能大部分读者都跟我一样，农村出身，家里能供自己上完大学可能就已经是倾尽全力了，我们想要出人头地，回报父母，回报家人，只有靠自己！ 我当然知道北上广房价高的可能一辈子都买不起，买个包子还要排老长的队，坐地铁挤得像汉堡包，买辆车还要摇号，一个破车牌 8 万多块。 我也知道当你一个人遇到事情孤立无援，叫天天不应，叫地地不灵，又不忍让家里人担心，只能擦干眼泪，忍着痛楚，当做什么都没发生的无奈的坚强。 我更知道那个陪你住 800 块一个月的房子，住房面积不过十平米，什么都给不了她，哪怕一句承诺都给不了的，但是依然对你不离不弃的那个女孩子本可以回家过着更好的生活。 也许你现在的生活过的像条狗，也许你现在只拿着月薪 3000 甚至不够温饱的工资，但是我们还年轻，我们选择在大城市奋斗的原因是因为我们期待的是未来，未来更好的职业发展，未来更好的经济收入，未来更好的生活，以及未来无限的可能。 所以，如果你在大城市感觉快要坚持不下去了，我帮不了你们，也没人能帮得了你们，我能做的就是提醒下你们请务必再坚持下，很多事情，很可能就差那多一点的坚持，仅此而已。 其实大城市与小城市只是一个选择的问题而已，无关对错，只是如果你跟我一样是个农村的孩子，试图凭借自己的本事改变自己的生活，那么我建议你一定要到大城市闯闯，她不问你的出生，背景，更不会鄙视你的家庭条件，她只看你是否努力，真的。]]></content>
      <tags>
        <tag>杂文</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[有思考的人]]></title>
    <url>%2F2017%2F04%2F24%2F%E6%9C%89%E6%80%9D%E8%80%83%E7%9A%84%E4%BA%BA%2F</url>
    <content type="text"><![CDATA[这几天看了好多技术大牛的博客，颇有感悟，尤以stormzhang和陈三的博客最深刻，知道这帮闷骚的技术男除了每天都在研究技术之外，也在写一些生活中的感悟、撒撒狗粮等等，技术性文章可以慢慢研读，但是看了很多他们对于不同面的一些感悟。的确，我们总得需要有自己的时间可以反省反省自己 明后天坐火车回去，23个小时，希望不要中途歇菜。。。。晚安！！！]]></content>
      <tags>
        <tag>杂文</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[有意思语言摘录]]></title>
    <url>%2F2017%2F04%2F24%2F%E6%9C%89%E6%84%8F%E6%80%9D%E8%AF%AD%E8%A8%80%E6%91%98%E5%BD%95%2F</url>
    <content type="text"><![CDATA[1234567891011121314知乎上有网友提问：我读过很多书，但后来大部分都忘记了，那读书有什么用呢？有人说：当我还是个孩子的时候，我吃过很多食物，虽然现在已经记不起来吃过什么了。但可以肯定的是，它们中的一部分已经长成了我的骨头和肉。其实，何止是读书呢？每一次旅行都让我们脚下的路更长更远，每一次尝试都给我们的世界打开一个新的大门，每一段感情都让我们的心灵更加感性丰满。我们的一言一行，所作所为，那些有用的无用的，都在一点点变成我们成长的骨头和肉。 1本人学识渊博、经验丰富，代码风骚、效率恐怖，c/c++、java、php无不精通，熟练掌握各种框架，深山苦练20余年，一天只睡4小时，千里之外定位问题，瞬息之间修复上线。身体强壮、健步如飞，可连续编程100小时不休息，讨论技术方案5小时不喝水，上至带项目、出方案，下至盗账号、威胁pm，啥都能干。泡面矿泉水已备好，学校不支持编程已辍学，家人不支持编程已断绝关系，老婆不支持编程已离婚，小孩不支持编程已送孤儿院，备用电源万兆光纤永不断电断网，门口已埋雷无人打扰 12]]></content>
      <tags>
        <tag>摘录</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[java环境配置eclipse的安装]]></title>
    <url>%2F2017%2F04%2F24%2Fjava%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AEeclipse%E7%9A%84%E5%AE%89%E8%A3%85%2F</url>
    <content type="text"><![CDATA[- java基础语法教程教程链接 - JDK环境配置 配置教程 - eclipse for JavaEE的安装 安装教程 - eclipse教程 教程链接 - 使用Tomcat搭建本地服务器 使用链接 - Java与MySQL连接 连接教程 - SQL Sever环境配置（安装SQL Sever数据库）- 解决命令提示符输入命令无反应的情况： 解决方法 - win10打开管理员命令提示符： windows+X——》命令提示符（管理员） - 解决win10无法更新组件的问题：(下载.NET Framework 3.5安装错误：) 解决方式一 解决方式二]]></content>
      <tags>
        <tag>java</tag>
        <tag>eclipse</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hold on or give up!]]></title>
    <url>%2F2017%2F04%2F22%2Fhold%20on%20or%20give%20up%2F</url>
    <content type="text"><![CDATA[前言不知不觉来杭州已经快一个月了，投了不少简历，也面试了一些公司，总体来说，目前还是一名无业游民。说不着急那不太现实，毕竟每天都是开销，吃饭、住宿、交通费用等等，但是感觉着急也没什么用，每天也是稀里糊涂、漫无目的看看别人写的博客，看stormzhang的博客较多,也会帮别人研究研究一些新的知识点，如果感觉自己有什么困惑的时候也会随时记下来，当成自己的一篇博客文章。目的不是为了别人看，而是让自己下一次不要再犯同样的错误，毕竟，在我身上，掉进同一个坑也不是一次两次了。 这段时期也是有很多的感慨，因为有好多同时期的同学，在步入社会后也是在这一时期遇到了各种各样的困惑。在同期接触这一行业的同学中，有的在思维逻辑方面的能力要远胜于自己，但是选择放弃了这一行，因为行业的特殊性对于一个女孩子来说确实很辛苦；做测试的同学告我他经常夹在客户和开发人员中间被各种挑毛病进而两方周旋，也是在考虑要不要换一份工作；工作了一年的同学这段时期也是有的选择离职回家考公务员，有的离职去北上广大城市寻求更大的一个就业机遇；还有的同学正在考虑要不要进入这一行。 说实话，在聊到这类型的话题时，我不知道该怎么回答，因为现在的我也在找工作阶段，我并不是一个过来人，我的困惑甚至可能更多，我只是一只菜鸟，一只也是不知道何去何从的菜鸟。每个行业都有每个行业的苦楚，即将大学毕业的我们也是面临社会生存的等等各种各样压力。每次谈到这样的话题时，我总会说的一句话便是“随着自己的心走，怎么想的就怎么来，只要自己觉得可以就行，没必要考虑别人的想法，因为事情都是我们自己来经历，别人体会不到你的想法，更没有资格发言！” Hold on or give up?坚持还是放弃？谁都不能干涉别人的想法，我想我能做的便是尊重每个不同的意愿，人生这么长，每个人身上都有无数种可能性，那么这一行放弃并不代表人家在另一行业就不能成功。那么对我而言，从内心深处可能还是没有想过放弃，或者是不甘心，可能我这人是比较轴或者是内心还有点盲目的小自信？ 对我而言，作为一名front-end developer，深知自己的欠缺之处，技能方面在业务逻辑处理方面还较差，我想对业务逻辑方面的技能加强是现阶段最先要着手处理的任务。 其次，做事还是有很严重的拖延症，任务一拖再拖，今天的事总是拖到明天或者后天，直到最终截止日期才着急忙慌，这样完成的任务一定不是心里边想要的那个效果，而一个较完美的项目一定是一个耗费很长时间很多心血的项目。 最后，每天的任务没有一个明确的规划，总是想到什么便做什么，由着自己的性子来，经常是这儿看看，那儿看看，到头来发现什么都没解决掉，就像小时候那一只捡了芝麻丢掉西瓜的猴子，到头来什么都没得到。 How to solve it?依照自己所具备的三个不足，提出相应的解决方案，毕竟总得不时的反思自己的功与过，不然永远也没法进步不是么？ 第一、专注自身在业务逻辑方面的培养训练。 第二、每一件任务规定好一个时间段，该工作时工作该娱乐时娱乐，二者最好不要有任何的冲突。 第三、在每一天打开电脑的时候为这一天制定一个工作计划，在晚上工作结束之后再填写填写自己工作的完成情况。]]></content>
      <tags>
        <tag>日志</tag>
      </tags>
  </entry>
</search>